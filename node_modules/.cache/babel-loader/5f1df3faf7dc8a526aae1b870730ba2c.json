{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, _ref) => {\n      var _payload$attr;\n\n      let {\n        payload,\n        type\n      } = _ref;\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.product.id);\n      const selectedAttributes = (_payload$attr = payload.attr) === null || _payload$attr === void 0 ? void 0 : _payload$attr.map(attr => attr.itm.id);\n      console.log(selectedAttributes);\n\n      if (existingIndex >= 0) {\n        state.cartItems[existingIndex] = { ...state.cartItems[existingIndex],\n          cartQuantity: state.cartItems[existingIndex].cartQuantity += 1\n        };\n        toast.info(`${payload.product.name} quantity increased`, {\n          position: \"top-center\"\n        });\n      } // else if(state.cartItems[existingIndex].selectedAttributes){\n      // }\n      else {\n        let tempProductItem = { ...payload.product,\n          cartQuantity: 1,\n          imageIndex: 0,\n          selectedAttributes: payload.attr\n        };\n        state.cartItems.push(tempProductItem);\n        toast.success(`${payload.product.name} added to cart`, {\n          position: \"top-center\"\n        });\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    decreaseCart(state, _ref2) {\n      let {\n        payload,\n        type\n      } = _ref2;\n      const itemIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n        toast.info(`${payload.name} quantity decreased in cart`, {\n          position: \"top-center\"\n        });\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(item => item.id !== payload.id);\n        state.cartItems = nextCartItems;\n        toast.error(`${payload.name} removed from cart`, {\n          position: \"top-center\"\n        });\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    getTotals(state) {\n      let totalPrice = 0;\n      let total = 0;\n      let {\n        quantity\n      } = state.cartItems.reduce((cartTotal, cartItem) => {\n        const {\n          cartQuantity\n        } = cartItem;\n        cartTotal.quantity += cartQuantity;\n        return cartTotal;\n      }, {\n        quantity: 0\n      });\n      state.cartItems.forEach(i => {\n        const pricesProxy = JSON.parse(JSON.stringify(i.prices));\n        const amount = pricesProxy.filter(x => x.currency.symbol === localStorage.getItem(\"currency\"))[0];\n        total += amount.amount * i.cartQuantity;\n      });\n      totalPrice = parseFloat(total.toFixed(2));\n      state.cartTotalAmount = totalPrice;\n      state.cartTotalQuantity = quantity;\n    },\n\n    changeImageIndexUp(state, _ref3) {\n      let {\n        payload,\n        type\n      } = _ref3;\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (existingIndex >= 0) {\n        if (state.cartItems[existingIndex].imageIndex === payload.gallery.length - 1) {\n          state.cartItems[existingIndex].imageIndex = 0;\n        } else if (state.cartItems[existingIndex].imageIndex >= 0) {\n          state.cartItems[existingIndex].imageIndex += 1;\n        }\n      }\n    },\n\n    changeImageIndexDown(state, _ref4) {\n      let {\n        payload,\n        type\n      } = _ref4;\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (existingIndex >= 0) {\n        if (state.cartItems[existingIndex].imageIndex > 0) {\n          state.cartItems[existingIndex].imageIndex -= 1;\n        } else if (state.cartItems[existingIndex].imageIndex === 0) {\n          state.cartItems[existingIndex].imageIndex = payload.gallery.length - 1;\n        }\n      }\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  decreaseCart,\n  getTotals,\n  changeImageIndexUp,\n  changeImageIndexDown\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/redux/cartSlice.ts"],"names":["createSlice","toast","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","cartTotalAmount","cartSlice","name","reducers","addToCart","state","payload","type","existingIndex","findIndex","item","id","product","selectedAttributes","attr","map","itm","console","log","cartQuantity","info","position","tempProductItem","imageIndex","push","success","setItem","stringify","decreaseCart","itemIndex","nextCartItems","filter","error","getTotals","totalPrice","total","quantity","reduce","cartTotal","cartItem","forEach","i","pricesProxy","prices","amount","x","currency","symbol","parseFloat","toFixed","changeImageIndexUp","gallery","length","changeImageIndexDown","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\n\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\")\n    ? JSON.parse(localStorage.getItem(\"cartItems\")!)\n    : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, {payload,type}) => {\n      const existingIndex = state.cartItems.findIndex(\n        (item:any) => item.id === payload.product.id\n      );\n      const selectedAttributes = payload.attr?.map((attr:any) => attr.itm.id)\n      console.log(selectedAttributes)\n      if (existingIndex >= 0) {\n        state.cartItems[existingIndex] = {\n          ...state.cartItems[existingIndex],\n          cartQuantity: state.cartItems[existingIndex].cartQuantity += 1,\n        };\n        toast.info(`${payload.product.name} quantity increased`, {\n          position: \"top-center\",\n        })\n      } \n      // else if(state.cartItems[existingIndex].selectedAttributes){\n\n      // }\n      else {\n        let tempProductItem = { ...payload.product, cartQuantity: 1, imageIndex: 0,selectedAttributes:payload.attr };\n        state.cartItems.push(tempProductItem);\n        toast.success(`${payload.product.name} added to cart`, {\n          position: \"top-center\",\n        })\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    decreaseCart(state, {payload, type}) {\n      const itemIndex = state.cartItems.findIndex(\n        (item:any) => item.id === payload.id\n      );\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n\n        toast.info(`${payload.name} quantity decreased in cart`, {\n          position: \"top-center\",\n      })\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(\n          (item:any) => item.id !== payload.id\n        );\n\n        state.cartItems = nextCartItems;\n\n        toast.error(`${payload.name} removed from cart`, {\n          position: \"top-center\",\n        })\n      }\n      \n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    getTotals(state) {\n      let totalPrice = 0;\n      let total = 0\n\n      let { quantity } = state.cartItems.reduce(\n        (cartTotal:any, cartItem:any) => {\n          const {cartQuantity } = cartItem;\n          cartTotal.quantity += cartQuantity;       \n          return cartTotal;\n        },\n        {\n          quantity: 0,\n        }\n        );\n        state.cartItems.forEach((i: any) => {\n          const pricesProxy = JSON.parse(JSON.stringify(i.prices))\n          const amount = pricesProxy.filter((x: any) => x.currency.symbol === localStorage.getItem(\"currency\"))[0]\n          total += amount.amount * i.cartQuantity\n        })\n        totalPrice = parseFloat(total.toFixed(2));\n        state.cartTotalAmount = totalPrice;\n        state.cartTotalQuantity = quantity;\n      },\n\n      changeImageIndexUp(state, {payload,type}) {\n        const existingIndex = state.cartItems.findIndex(\n          (item:any) => item.id === payload.id\n        );\n        \n        if (existingIndex >= 0) {\n         if(state.cartItems[existingIndex].imageIndex === (payload.gallery.length-1)){\n           state.cartItems[existingIndex].imageIndex = 0\n         }\n         else if(state.cartItems[existingIndex].imageIndex >= 0){\n           state.cartItems[existingIndex].imageIndex += 1\n         }\n        }\n  \n      },\n\n      changeImageIndexDown(state, {payload,type}) {\n        const existingIndex = state.cartItems.findIndex(\n          (item:any) => item.id === payload.id\n        );\n        if (existingIndex >= 0) {\n         if(state.cartItems[existingIndex].imageIndex > 0){\n           state.cartItems[existingIndex].imageIndex -= 1\n         }\n         else if(state.cartItems[existingIndex].imageIndex === 0){\n          state.cartItems[existingIndex].imageIndex = (payload.gallery.length-1)\n        }\n        }\n  \n      },\n  }\n});\n\nexport const { addToCart, decreaseCart,  getTotals, changeImageIndexUp, changeImageIndexDown } =\n  cartSlice.actions;\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}