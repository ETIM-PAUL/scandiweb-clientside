{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/TopNav/index.tsx\";\nimport React from \"react\";\nimport { gql } from \"@apollo/client\";\nimport { BsCart } from \"react-icons/bs\";\nimport { TopHeading, Item, Logo, Menu, SingleIcon, DropDownContent, DropItem } from \"../../styles/topNav\";\nimport { client } from \"../../App\";\nimport { connect } from \"react-redux\";\nimport { setCategoryTitle, setCurrencyType } from \"../../redux/actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TopNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      categories: [],\n      category: \"all\",\n      currencies: [],\n      currency: \"$\"\n    };\n  }\n\n  selectedCategoryTitle(title) {\n    this.setState({\n      category: title\n    });\n    this.props.setCategoryTitle(title);\n  }\n\n  selectedCurrencyType(currency) {\n    this.setState({\n      currency: currency\n    });\n    this.props.setCurrencyType(currency);\n    console.log(currency);\n  }\n\n  componentDidMount() {\n    let category = this.state.category;\n    let currency = this.state.currency;\n    client.query({\n      query: gql`\n          query categories {\n            categories {\n              name\n            }\n          }\n        `\n    }).then(result => this.setState({\n      categories: result.data.categories\n    }));\n    client.query({\n      query: gql`\n          query currencies {\n            currencies {\n              label\n              symbol\n            }\n          }\n        `\n    }).then(result => this.setState({\n      currencies: result.data.currencies\n    }));\n    this.props.setCategoryTitle(category);\n    this.props.setCurrencyType(currency);\n  }\n\n  render() {\n    var _this$state$categorie, _this$state$currencie;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(TopHeading, {\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          children: this.state.categories.length > 0 && ((_this$state$categorie = this.state.categories) === null || _this$state$categorie === void 0 ? void 0 : _this$state$categorie.map(cat => /*#__PURE__*/_jsxDEV(Item, {\n            id: cat.name,\n            onClick: e => this.selectedCategoryTitle(e.target.id),\n            children: cat.name\n          }, cat.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {\n          children: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SingleIcon, {\n            \"data-badge\": \"2\",\n            children: /*#__PURE__*/_jsxDEV(BsCart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SingleIcon, {\n            children: /*#__PURE__*/_jsxDEV(DropDownContent, {\n              children: this.state.currencies.length > 0 && ((_this$state$currencie = this.state.currencies) === null || _this$state$currencie === void 0 ? void 0 : _this$state$currencie.map(cur => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(DropItem, {\n                  id: cur.symbol,\n                  onClick: e => this.selectedCurrencyType(e.target.id),\n                  children: [\" \", cur.symbol, \" \", \"\", \" \", cur.label]\n                }, cur.symbol, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCategoryTitle: category => dispatch(setCategoryTitle(category)),\n    setCurrencyType: currency => dispatch(setCurrencyType(currency))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(TopNav);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/TopNav/index.tsx"],"names":["React","gql","BsCart","TopHeading","Item","Logo","Menu","SingleIcon","DropDownContent","DropItem","client","connect","setCategoryTitle","setCurrencyType","TopNav","Component","constructor","props","state","products","categories","category","currencies","currency","selectedCategoryTitle","title","setState","selectedCurrencyType","console","log","componentDidMount","query","then","result","data","render","length","map","cat","name","e","target","id","cur","symbol","label","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { BsCart } from \"react-icons/bs\";\nimport {\n  TopHeading,\n  Item,\n  Logo,\n  Menu,\n  SingleIcon,\n  DropDownContent,\n  DropItem,\n} from \"../../styles/topNav\";\nimport { client } from \"../../App\";\nimport { connect } from \"react-redux\";\nimport { setCategoryTitle, setCurrencyType } from \"../../redux/actions/actions\";\nimport { TopNavTypes } from \"../../types\";\n\nclass TopNav extends React.Component<\n  { setCategoryTitle: any; setCurrencyType: any },\n  TopNavTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      categories: [],\n      category: \"all\",\n      currencies: [],\n      currency: \"$\",\n    };\n  }\n  selectedCategoryTitle(title: string) {\n    this.setState({ category: title });\n    this.props.setCategoryTitle(title);\n  }\n\n  selectedCurrencyType(currency: string) {\n    this.setState({ currency: currency });\n    this.props.setCurrencyType(currency);\n    console.log(currency);\n  }\n\n  componentDidMount() {\n    let category = this.state.category;\n    let currency = this.state.currency;\n    client\n      .query({\n        query: gql`\n          query categories {\n            categories {\n              name\n            }\n          }\n        `,\n      })\n      .then((result) => this.setState({ categories: result.data.categories }));\n    client\n      .query({\n        query: gql`\n          query currencies {\n            currencies {\n              label\n              symbol\n            }\n          }\n        `,\n      })\n      .then((result) => this.setState({ currencies: result.data.currencies }));\n    this.props.setCategoryTitle(category);\n    this.props.setCurrencyType(currency);\n  }\n\n  render() {\n    return (\n      <>\n        <TopHeading>\n          <Menu>\n            {this.state.categories.length > 0 &&\n              this.state.categories?.map((cat: any) => (\n                <Item\n                  key={cat.name}\n                  id={cat.name}\n                  onClick={(e: any) => this.selectedCategoryTitle(e.target.id)}\n                >\n                  {cat.name}\n                </Item>\n              ))}\n          </Menu>\n\n          <Logo>Logo</Logo>\n\n          <div>\n            <SingleIcon data-badge=\"2\">\n              <BsCart />\n            </SingleIcon>\n\n            <SingleIcon>\n              <DropDownContent>\n                {this.state.currencies.length > 0 &&\n                  this.state.currencies?.map((cur: any) => (\n                    <>\n                      <DropItem\n                        key={cur.symbol}\n                        id={cur.symbol}\n                        onClick={(e: any) =>\n                          this.selectedCurrencyType(e.target.id)\n                        }\n                      >\n                        {\" \"}\n                        {cur.symbol} {\"\"} {cur.label}\n                      </DropItem>\n                    </>\n                  ))}\n              </DropDownContent>\n            </SingleIcon>\n          </div>\n        </TopHeading>\n      </>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    setCategoryTitle: (category: string) =>\n      dispatch(setCategoryTitle(category)),\n    setCurrencyType: (currency: string) => dispatch(setCurrencyType(currency)),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(TopNav);\n"]},"metadata":{},"sourceType":"module"}