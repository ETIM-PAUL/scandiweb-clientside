{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { DetailsContainer, ProductImages, ProductImage, ProductInfo } from \"../../styles/productDetails\";\nimport { client } from \"../../App\";\nimport { gql } from \"@apollo/client\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Get_Product = () => client.query({\n  query: gql`\n      query product($id: String!) {\n        product(id: $id) {\n          id\n          name\n          inStock\n          gallery\n          description\n          category\n          brand\n          attributes {\n            id\n            name\n            type\n            items {\n              displayValue\n              value\n              id\n            }\n          }\n          prices {\n            currency {\n              label\n              symbol\n            }\n            amount\n          }\n        }\n      }\n    `,\n  variables: {\n    id: \"ps-5\"\n  }\n});\n\n_c = Get_Product;\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: {}\n    };\n  }\n\n  componentDidMount() {\n    Get_Product().then(data => {\n      console.log(\"Data\", data); // this.setState({\n      //   product: data\n      // });\n    }); // let { data } = this.props.query;\n    // const { brand } = this.state.product[0];\n\n    console.log(this.props.query);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DetailsContainer, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ProductImages, {\n            children: \"brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProductImage, {\n            children: \"d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProductInfo, {\n            children: \"f\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n} // function mapDispatchToProps(dispatch: any) {\n//   return {\n//     selectedProduct: (product: object) =>\n//       dispatch(selectedProduct(product)),\n//   };\n// }\n// eslint-disable-next-line import/no-anonymous-default-export\n\n\nexport default _s(props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(ProductDetails, { ...props,\n    params: useParams() // query={useQuery(Get_Product)}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 3\n  }, this);\n}, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Get_Product\");","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx"],"names":["React","DetailsContainer","ProductImages","ProductImage","ProductInfo","client","gql","useParams","Get_Product","query","variables","id","ProductDetails","Component","constructor","props","state","product","componentDidMount","then","data","console","log","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,WAJF,QAKO,6BALP;AAMA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,GAAT,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAA0B,cAA1B;;;;AAgBA,MAAMC,WAAW,GAAG,MAClBH,MAAM,CAACI,KAAP,CAAa;AACXA,EAAAA,KAAK,EAAEH,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA9Be;AA+BXI,EAAAA,SAAS,EAAE;AAAEC,IAAAA,EAAE,EAAE;AAAN;AA/BA,CAAb,CADF;;KAAMH,W;;AAmCN,MAAMI,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAGE;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,WAAW,GAAGW,IAAd,CAAoBC,IAAD,IAAU;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB,EAD2B,CAE3B;AACA;AACA;AACD,KALD,EADkB,CAOlB;AAEA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWN,KAAvB;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,gBAAD;AAAA,+BACE;AAAA,kCAEE,QAAC,aAAD;AAAA,sBAAgB;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAME,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAcD;;AAnCD,C,CAsCF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,kBAAgBR,KAAD;AAAA;;AAAA,sBACb,QAAC,cAAD,OACMA,KADN;AAEE,IAAA,MAAM,EAAER,SAAS,EAFnB,CAGE;;AAHF;AAAA;AAAA;AAAA;AAAA,UADa;AAAA,CAAf;AAAA,UAGYA,SAHZ;AAAA","sourcesContent":["import React from \"react\";\nimport {\n  DetailsContainer,\n  ProductImages,\n  ProductImage,\n  ProductInfo,\n} from \"../../styles/productDetails\";\nimport { client } from \"../../App\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useParams } from \"react-router\";\nimport { ProductTypes } from \"../../types\";\nimport { selectedProduct } from \"../../redux/actions/actions\";\n\ninterface Product {\n  id: string;\n  name: string;\n  inStock: boolean;\n  gallery: [];\n  description: string;\n  category: string;\n  brand: string;\n  attributes: [];\n  prices: [];\n}\n\nconst Get_Product = () =>\n  client.query({\n    query: gql`\n      query product($id: String!) {\n        product(id: $id) {\n          id\n          name\n          inStock\n          gallery\n          description\n          category\n          brand\n          attributes {\n            id\n            name\n            type\n            items {\n              displayValue\n              value\n              id\n            }\n          }\n          prices {\n            currency {\n              label\n              symbol\n            }\n            amount\n          }\n        }\n      }\n    `,\n    variables: { id: \"ps-5\" },\n  });\n\nclass ProductDetails extends React.Component<\n  { params: { id: string }; query: { data: any } },\n  { product: {} }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      product: {},\n    };\n  }\n  componentDidMount() {\n    Get_Product().then((data) => {\n      console.log(\"Data\", data);\n      // this.setState({\n      //   product: data\n      // });\n    });\n    // let { data } = this.props.query;\n\n    // const { brand } = this.state.product[0];\n    console.log(this.props.query);\n  }\n\n  render() {\n    return (\n      <>\n        <DetailsContainer>\n          <>\n            {/* {this.state.product && <p>{this.state.product}</p>} */}\n            <ProductImages>{\"brand\"}</ProductImages>\n\n            <ProductImage>d</ProductImage>\n\n            <ProductInfo>f</ProductInfo>\n          </>\n        </DetailsContainer>\n      </>\n    );\n  }\n}\n\n// function mapDispatchToProps(dispatch: any) {\n//   return {\n//     selectedProduct: (product: object) =>\n//       dispatch(selectedProduct(product)),\n//   };\n// }\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (props: any) => (\n  <ProductDetails\n    {...props}\n    params={useParams()}\n    // query={useQuery(Get_Product)}\n  />\n);\n"]},"metadata":{},"sourceType":"module"}