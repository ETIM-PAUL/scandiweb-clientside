{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx\";\nimport React from \"react\";\nimport { gql } from \"@apollo/client\";\nimport { FirstContainer, Heading, CardsContainer, Card, WaterMark, CardTitle, Cart } from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { client } from \"../../App\";\nimport { BsCart } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductsListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      category: this.props.category,\n      num: 0\n    };\n  }\n\n  componentDidUpdate(prevState) {\n    var _this$props$currency, _this$props$currency2, _this$props$currency3, _this$props$currency4, _this$props$currency5;\n\n    let category = this.props.category;\n    let currency = this.props.currency; // if (prevState.category !== category || prevState.currency !== currency) {\n\n    client.query({\n      query: gql`\n          query category {\n            category(input: { title: \"${category}\" }) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                brand\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n              }\n            }\n          }\n        `\n    }).then(result => this.setState({\n      products: result.data.category.products\n    }));\n\n    if ((_this$props$currency = this.props.currency) !== null && _this$props$currency !== void 0 && _this$props$currency.includes(\"USD\")) {\n      this.setState({\n        num: 0\n      });\n    }\n\n    if ((_this$props$currency2 = this.props.currency) !== null && _this$props$currency2 !== void 0 && _this$props$currency2.includes(\"GBP\")) {\n      this.setState({\n        num: 1\n      });\n    }\n\n    if ((_this$props$currency3 = this.props.currency) !== null && _this$props$currency3 !== void 0 && _this$props$currency3.includes(\"AUD\")) {\n      this.setState({\n        num: 2\n      });\n    }\n\n    if ((_this$props$currency4 = this.props.currency) !== null && _this$props$currency4 !== void 0 && _this$props$currency4.includes(\"JPY\")) {\n      this.setState({\n        num: 3\n      });\n    }\n\n    if ((_this$props$currency5 = this.props.currency) !== null && _this$props$currency5 !== void 0 && _this$props$currency5.includes(\"RUB\")) {\n      this.setState({\n        num: 4\n      });\n    } // }\n\n\n    console.log(this.state.products);\n  }\n\n  render() {\n    let numm = this.state.num;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FirstContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {\n          children: this.state.products.length >= 0 && this.state.products.map(x => /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [x.inStock === false && /*#__PURE__*/_jsxDEV(WaterMark, {\n                children: \"Out of stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: x.gallery[0],\n                height: 250,\n                width: 250,\n                alt: \"Product Img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${x.id}`,\n                children: /*#__PURE__*/_jsxDEV(Cart, {\n                  children: /*#__PURE__*/_jsxDEV(BsCart, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingTop: \"5px\"\n              },\n              children: [x.prices[numm].currency.symbol, x.prices[numm].amount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, x.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(state) {\n  return {\n    category: state.action[\"selectedCategory\"],\n    currency: state.action[\"selectedCurrency\"]\n  };\n}\n\nexport default connect(mapDispatchToProps, null)(ProductsListing);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx"],"names":["React","gql","FirstContainer","Heading","CardsContainer","Card","WaterMark","CardTitle","Cart","connect","client","BsCart","Link","ProductsListing","Component","constructor","props","state","products","category","num","componentDidUpdate","prevState","currency","query","then","result","setState","data","includes","console","log","render","numm","length","map","x","inStock","gallery","id","name","paddingTop","prices","symbol","amount","mapDispatchToProps","action"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { gql } from \"@apollo/client\";\nimport {\n  FirstContainer,\n  Heading,\n  CardsContainer,\n  Card,\n  WaterMark,\n  CardTitle,\n  Cart,\n} from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { client } from \"../../App\";\nimport { CardPropsTypes } from \"../../types\";\nimport { BsCart } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\n\nclass ProductsListing extends React.Component<\n  { category: string; currency: string },\n  { products: []; category: string; num: number }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      category: this.props.category,\n      num: 0,\n    };\n  }\n\n  componentDidUpdate(prevState: any) {\n    let category = this.props.category;\n    let currency = this.props.currency;\n    // if (prevState.category !== category || prevState.currency !== currency) {\n    client\n      .query({\n        query: gql`\n          query category {\n            category(input: { title: \"${category}\" }) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                brand\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n              }\n            }\n          }\n        `,\n      })\n      .then((result) =>\n        this.setState({ products: result.data.category.products })\n      );\n    if (this.props.currency?.includes(\"USD\")) {\n      this.setState({ num: 0 });\n    }\n    if (this.props.currency?.includes(\"GBP\")) {\n      this.setState({ num: 1 });\n    }\n    if (this.props.currency?.includes(\"AUD\")) {\n      this.setState({ num: 2 });\n    }\n    if (this.props.currency?.includes(\"JPY\")) {\n      this.setState({ num: 3 });\n    }\n    if (this.props.currency?.includes(\"RUB\")) {\n      this.setState({ num: 4 });\n    }\n    // }\n    console.log(this.state.products);\n  }\n\n  render() {\n    let numm = this.state.num;\n    return (\n      <>\n        <FirstContainer>\n          <Heading>All Categories</Heading>\n          <CardsContainer>\n            {this.state.products.length >= 0 &&\n              this.state.products.map((x: CardPropsTypes) => (\n                <Card key={x.name}>\n                  <div>\n                    {x.inStock === false && <WaterMark>Out of stock</WaterMark>}\n                    <img\n                      src={x.gallery[0]}\n                      height={250}\n                      width={250}\n                      alt=\"Product Img\"\n                    />\n                    <Link to={`/product/${x.id}`}>\n                      <Cart>\n                        <BsCart />\n                      </Cart>\n                    </Link>\n                  </div>\n\n                  <CardTitle>{x.name}</CardTitle>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    {x.prices[numm].currency.symbol}\n                    {x.prices[numm].amount}\n                    <br />\n                  </div>\n                </Card>\n              ))}\n          </CardsContainer>\n        </FirstContainer>\n      </>\n    );\n  }\n}\n\nfunction mapDispatchToProps(state: any) {\n  return {\n    category: state.action[\"selectedCategory\"],\n    currency: state.action[\"selectedCurrency\"],\n  };\n}\n\nexport default connect(mapDispatchToProps, null)(ProductsListing);\n"]},"metadata":{},"sourceType":"module"}