{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx\";\nimport React from \"react\";\nimport { gql } from \"@apollo/client\";\nimport { FirstContainer, Heading, CardsContainer, Card, WaterMark, CardTitle, Cart, Banner } from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { client } from \"../../App\";\nimport { BsCart } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { Get_ProductList } from \"../../queries\"; // import { mapDispatchToProps } from \"../../redux/redux-functions\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductsListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      num: 0\n    };\n  }\n\n  componentDidMount() {\n    let category = this.props.category;\n\n    try {\n      Get_ProductList(category).then(result => {\n        var _result$data$category, _result$data$category2;\n\n        this.setState({\n          products: (_result$data$category = result.data.category) === null || _result$data$category === void 0 ? void 0 : _result$data$category.products\n        });\n        console.log((_result$data$category2 = result.data.category) === null || _result$data$category2 === void 0 ? void 0 : _result$data$category2.products);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    let currency = this.props.currency;\n    let category = this.props.category;\n\n    if (prevState.category !== category || prevState.currency !== currency) {\n      var _this$props$currency, _this$props$currency2, _this$props$currency3, _this$props$currency4, _this$props$currency5;\n\n      client.query({\n        query: gql`\n            query category {\n              category(input: { title: \"${category}\" }) {\n                name\n                products {\n                  id\n                  name\n                  inStock\n                  gallery\n                  description\n                  category\n                  brand\n                  attributes {\n                    id\n                    name\n                    type\n                    items {\n                      displayValue\n                      value\n                      id\n                    }\n                  }\n                  prices {\n                    currency {\n                      label\n                      symbol\n                    }\n                    amount\n                  }\n                }\n              }\n            }\n          `\n      }).then(result => {\n        this.setState({\n          products: result.data.category.products\n        });\n      });\n\n      if ((_this$props$currency = this.props.currency) !== null && _this$props$currency !== void 0 && _this$props$currency.includes(\"USD\")) {\n        this.setState({\n          num: 0\n        });\n      }\n\n      if ((_this$props$currency2 = this.props.currency) !== null && _this$props$currency2 !== void 0 && _this$props$currency2.includes(\"GBP\")) {\n        this.setState({\n          num: 1\n        });\n      }\n\n      if ((_this$props$currency3 = this.props.currency) !== null && _this$props$currency3 !== void 0 && _this$props$currency3.includes(\"AUD\")) {\n        this.setState({\n          num: 2\n        });\n      }\n\n      if ((_this$props$currency4 = this.props.currency) !== null && _this$props$currency4 !== void 0 && _this$props$currency4.includes(\"JPY\")) {\n        this.setState({\n          num: 3\n        });\n      }\n\n      if ((_this$props$currency5 = this.props.currency) !== null && _this$props$currency5 !== void 0 && _this$props$currency5.includes(\"RUB\")) {\n        this.setState({\n          num: 4\n        });\n      }\n    }\n  }\n\n  render() {\n    var _this$state$products;\n\n    let numm = this.state.num;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FirstContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: [this.props.category, \" categories\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {\n          children: ((_this$state$products = this.state.products) === null || _this$state$products === void 0 ? void 0 : _this$state$products.length) >= 0 && this.state.products.map(x => /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Banner, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: x.gallery[0],\n                height: 250,\n                width: 250,\n                alt: \"Product Img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), x.inStock === false && /*#__PURE__*/_jsxDEV(WaterMark, {\n                children: \"Out of stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${x.id}`,\n                children: /*#__PURE__*/_jsxDEV(Cart, {\n                  children: /*#__PURE__*/_jsxDEV(BsCart, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px\"\n              },\n              children: [x.prices[numm].currency.symbol, x.prices[numm].amount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), x.prices.map(p => p.currency.label === this.props.currency && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [p.currency.symbol, p.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this))]\n          }, x.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport function mapStateToProps(state) {\n  return {\n    category: state.selection[\"selectedCategory\"],\n    currency: state.selection[\"selectedCurrency\"]\n  };\n}\nexport default connect(mapStateToProps, null)(ProductsListing);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx"],"names":["React","gql","FirstContainer","Heading","CardsContainer","Card","WaterMark","CardTitle","Cart","Banner","connect","client","BsCart","Link","Get_ProductList","ProductsListing","Component","constructor","props","state","products","num","componentDidMount","category","then","result","setState","data","console","log","error","componentDidUpdate","prevState","currency","query","includes","render","numm","length","map","x","gallery","inStock","id","name","padding","prices","symbol","amount","p","label","mapStateToProps","selection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { gql } from \"@apollo/client\";\nimport {\n  FirstContainer,\n  Heading,\n  CardsContainer,\n  Card,\n  WaterMark,\n  CardTitle,\n  Cart,\n  Banner,\n} from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { client } from \"../../App\";\nimport { CardPropsTypes } from \"../../types\";\nimport { BsCart } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { Get_ProductList } from \"../../queries\";\n// import { mapDispatchToProps } from \"../../redux/redux-functions\";\n\nclass ProductsListing extends React.Component<\n  { category: string; currency: any },\n  { products: []; num: number }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      num: 0,\n    };\n  }\n  componentDidMount() {\n    let category = this.props.category;\n    try {\n      Get_ProductList(category).then((result) => {\n        this.setState({\n          products: result.data.category?.products,\n        });\n        console.log(result.data.category?.products);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevState: any) {\n    let currency = this.props.currency;\n    let category = this.props.category;\n    if (prevState.category !== category || prevState.currency !== currency) {\n      client\n        .query({\n          query: gql`\n            query category {\n              category(input: { title: \"${category}\" }) {\n                name\n                products {\n                  id\n                  name\n                  inStock\n                  gallery\n                  description\n                  category\n                  brand\n                  attributes {\n                    id\n                    name\n                    type\n                    items {\n                      displayValue\n                      value\n                      id\n                    }\n                  }\n                  prices {\n                    currency {\n                      label\n                      symbol\n                    }\n                    amount\n                  }\n                }\n              }\n            }\n          `,\n        })\n        .then((result) => {\n          this.setState({\n            products: result.data.category.products,\n          });\n        });\n      if (this.props.currency?.includes(\"USD\")) {\n        this.setState({ num: 0 });\n      }\n      if (this.props.currency?.includes(\"GBP\")) {\n        this.setState({ num: 1 });\n      }\n      if (this.props.currency?.includes(\"AUD\")) {\n        this.setState({ num: 2 });\n      }\n      if (this.props.currency?.includes(\"JPY\")) {\n        this.setState({ num: 3 });\n      }\n      if (this.props.currency?.includes(\"RUB\")) {\n        this.setState({ num: 4 });\n      }\n    }\n  }\n\n  render() {\n    let numm = this.state.num;\n    return (\n      <>\n        <FirstContainer>\n          <Heading>{this.props.category} categories</Heading>\n          <CardsContainer>\n            {this.state.products?.length >= 0 &&\n              this.state.products.map((x: CardPropsTypes) => (\n                <Card key={x.name}>\n                  <Banner>\n                    <img\n                      src={x.gallery[0]}\n                      height={250}\n                      width={250}\n                      alt=\"Product Img\"\n                    />\n                    {x.inStock === false && <WaterMark>Out of stock</WaterMark>}\n                    <Link to={`/product/${x.id}`}>\n                      <Cart>\n                        <BsCart />\n                      </Cart>\n                    </Link>\n                  </Banner>\n\n                  <CardTitle>{x.name}</CardTitle>\n                  <div style={{ padding: \"5px\" }}>\n                    {x.prices[numm].currency.symbol}\n                    {x.prices[numm].amount}\n                    <br />\n                  </div>\n\n                  {x.prices.map(\n                    (p: any) =>\n                      p.currency.label === this.props.currency && (\n                        <p>\n                          <b>\n                            {p.currency.symbol}\n                            {p.amount}\n                          </b>\n                        </p>\n                      )\n                  )}\n                </Card>\n              ))}\n          </CardsContainer>\n        </FirstContainer>\n      </>\n    );\n  }\n}\n\nexport function mapStateToProps(state: any) {\n  return {\n    category: state.selection[\"selectedCategory\"],\n    currency: state.selection[\"selectedCurrency\"],\n  };\n}\n\nexport default connect(mapStateToProps, null)(ProductsListing);\n"]},"metadata":{},"sourceType":"module"}