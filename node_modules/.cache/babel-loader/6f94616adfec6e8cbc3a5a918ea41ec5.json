{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx\";\nimport React from \"react\";\nimport { FirstContainer, Heading, CardsContainer, Card, WaterMark, CardTitle, Cart, Banner, ProductPrice, ProductInfo } from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport cart from \"../../img/cart.svg\";\nimport { Link } from \"react-router-dom\";\nimport { Get_ProductList } from \"../../queries\";\nimport { addToCart, getTotals } from \"../../redux/cartSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductsListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      category: this.props.category,\n      currency: this.props.currency,\n      attribute: []\n    };\n  }\n\n  addProductToCart(product, attribute) {\n    attribute.forEach(element => {\n      let itm = element.items[0];\n      let attr = element.id;\n      this.state.attribute.push({\n        itm,\n        attr\n      });\n    });\n    let attr = this.state.attribute;\n    this.props.addToCart({\n      product,\n      attr\n    });\n    this.setState({\n      attribute: []\n    });\n    this.props.getTotals();\n  }\n\n  componentDidMount() {\n    let category = this.props.category;\n\n    try {\n      Get_ProductList(category).then(result => {\n        var _result$data$category, _result$data$category2;\n\n        this.setState({\n          products: (_result$data$category = result.data.category) === null || _result$data$category === void 0 ? void 0 : _result$data$category.products,\n          category: (_result$data$category2 = result.data.category) === null || _result$data$category2 === void 0 ? void 0 : _result$data$category2.name\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    let currency = this.props.currency;\n    let category = this.props.category;\n\n    if (prevState.category !== category || prevState.currency !== currency) {\n      Get_ProductList(category).then(result => {\n        this.setState({\n          products: result.data.category.products\n        });\n      });\n    }\n  }\n\n  render() {\n    var _this$state$products;\n\n    return /*#__PURE__*/_jsxDEV(FirstContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: this.props.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {\n        children: ((_this$state$products = this.state.products) === null || _this$state$products === void 0 ? void 0 : _this$state$products.length) >= 0 && this.state.products.map(x => /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Banner, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/product/${x.id}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: x.gallery[0],\n                height: 320,\n                width: 400,\n                alt: \"Product Img\",\n                style: {\n                  objectFit: \"cover\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), x.inStock === false && /*#__PURE__*/_jsxDEV(WaterMark, {\n                children: \"Out of stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), x.inStock === true && /*#__PURE__*/_jsxDEV(Cart, {\n              onClick: () => this.addProductToCart(x, x.attributes),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cart,\n                alt: \"add product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/product/${x.id}`,\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ProductInfo, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                children: [x.brand, \" ~ \", x.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this), x.prices.map(p => p.currency.symbol === this.props.currency && /*#__PURE__*/_jsxDEV(ProductPrice, {\n                children: [p.currency.symbol, p.amount]\n              }, p.currency.symbol, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 27\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, x.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport function mapStateToProps(state) {\n  return {\n    category: state.selection[\"selectedCategory\"],\n    currency: state.selection[\"selectedCurrency\"]\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToCart: product => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsListing);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx"],"names":["React","FirstContainer","Heading","CardsContainer","Card","WaterMark","CardTitle","Cart","Banner","ProductPrice","ProductInfo","connect","cart","Link","Get_ProductList","addToCart","getTotals","ProductsListing","Component","constructor","props","state","products","category","currency","attribute","addProductToCart","product","forEach","element","itm","items","attr","id","push","setState","componentDidMount","then","result","data","name","error","console","log","componentDidUpdate","prevState","render","length","map","x","gallery","objectFit","inStock","attributes","textDecoration","brand","prices","p","symbol","amount","mapStateToProps","selection","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  FirstContainer,\n  Heading,\n  CardsContainer,\n  Card,\n  WaterMark,\n  CardTitle,\n  Cart,\n  Banner,\n  ProductPrice,\n  ProductInfo,\n} from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { CardPropsTypes } from \"../../types\";\nimport cart from \"../../img/cart.svg\";\nimport { Link } from \"react-router-dom\";\nimport { Get_ProductList } from \"../../queries\";\nimport { addToCart, getTotals } from \"../../redux/cartSlice\";\n\nclass ProductsListing extends React.Component<\n  { category: string; currency: string; addToCart: any; getTotals: any },\n  { products: []; category: string; currency: string; attribute: any }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      category: this.props.category,\n      currency: this.props.currency,\n      attribute: [],\n    };\n  }\n\n  addProductToCart(product: {}, attribute: any) {\n    attribute.forEach((element: any) => {\n      let itm = element.items[0];\n      let attr = element.id;\n      this.state.attribute.push({ itm, attr });\n    });\n    let attr = this.state.attribute;\n    this.props.addToCart({ product, attr });\n    this.setState({ attribute: [] });\n    this.props.getTotals();\n  }\n  componentDidMount() {\n    let category = this.props.category;\n    try {\n      Get_ProductList(category).then((result) => {\n        this.setState({\n          products: result.data.category?.products,\n          category: result.data.category?.name,\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevState: any) {\n    let currency = this.props.currency;\n    let category = this.props.category;\n    if (prevState.category !== category || prevState.currency !== currency) {\n      Get_ProductList(category).then((result) => {\n        this.setState({\n          products: result.data.category.products,\n        });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <FirstContainer>\n        <Heading>{this.props.category}</Heading>\n        <CardsContainer>\n          {this.state.products?.length >= 0 &&\n            this.state.products.map((x: CardPropsTypes) => (\n              <Card key={x.name}>\n                <Banner>\n                  <Link to={`/product/${x.id}`}>\n                    <img\n                      src={x.gallery[0]}\n                      height={320}\n                      width={400}\n                      alt=\"Product Img\"\n                      style={{ objectFit: \"cover\" }}\n                    />\n                    {x.inStock === false && <WaterMark>Out of stock</WaterMark>}\n                  </Link>\n                  {x.inStock === true && (\n                    <Cart\n                      onClick={() => this.addProductToCart(x, x.attributes)}\n                    >\n                      <img src={cart} alt=\"add product\" />\n                    </Cart>\n                  )}\n                </Banner>\n                <Link\n                  to={`/product/${x.id}`}\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <ProductInfo>\n                    <CardTitle>\n                      {x.brand} ~ {x.name}\n                    </CardTitle>\n                    {x.prices.map(\n                      (p: any) =>\n                        p.currency.symbol === this.props.currency && (\n                          <ProductPrice key={p.currency.symbol}>\n                            {p.currency.symbol}\n                            {p.amount}\n                          </ProductPrice>\n                        )\n                    )}\n                  </ProductInfo>\n                </Link>\n              </Card>\n            ))}\n        </CardsContainer>\n      </FirstContainer>\n    );\n  }\n}\n\nexport function mapStateToProps(state: any) {\n  return {\n    category: state.selection[\"selectedCategory\"],\n    currency: state.selection[\"selectedCurrency\"],\n  };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    addToCart: (product: any) => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsListing);\n"]},"metadata":{},"sourceType":"module"}