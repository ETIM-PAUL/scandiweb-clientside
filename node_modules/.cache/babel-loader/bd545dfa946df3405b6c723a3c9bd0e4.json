{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DetailsContainer, ProductImages, ProductImage, ProductInfo, Attribute, AddButton, AttributeButton, ProductName, ProductBrand, ProductPrice, AttributeSwatch, OutOfStock, ProductParse, ImageHover, AttributeStyle, AttributeName } from \"../../styles/productDetails\";\nimport { useParams } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport { Get_Product } from \"../../queries\";\nimport { connect } from \"react-redux\";\nimport { initialDetails } from \"../../initialState\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport \"./details.css\";\nimport { addProductToCart, mapDispatchToProps, mapStateToProps, predefinedAttributes, setAttributes } from \"./util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialDetails;\n  }\n\n  componentDidMount() {\n    let {\n      id\n    } = this.props.params;\n    Get_Product(id).then(res => {\n      this.setState({\n        product: res.data.product,\n        imagePreview: res.data.product.gallery[0]\n      });\n      predefinedAttributes(this.state.product, this.setState({}));\n    });\n  }\n\n  render() {\n    var _this$state$product$g;\n\n    const cleanHTML = DOMPurify.sanitize(this.state.product.description, {\n      USE_PROFILES: {\n        html: true\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(DetailsContainer, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ProductImages, {\n          children: this.state.product.gallery.length >= 1 && ((_this$state$product$g = this.state.product.gallery) === null || _this$state$product$g === void 0 ? void 0 : _this$state$product$g.map(img => /*#__PURE__*/_jsxDEV(ImageHover, {\n            src: img,\n            alt: \"product-img\",\n            onMouseOver: () => this.setState({\n              imagePreview: img\n            })\n          }, img, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProductImage, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.imagePreview,\n            alt: \"product-img-preview\",\n            height: 500,\n            width: 600\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProductInfo, {\n          children: [/*#__PURE__*/_jsxDEV(NoStyleDiv, {\n            children: [/*#__PURE__*/_jsxDEV(ProductBrand, {\n              children: this.state.product.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProductName, {\n              children: this.state.product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), this.state.product.attributes.map(attr => /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n            children: [/*#__PURE__*/_jsxDEV(AttributeName, {\n              children: [attr.name, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AttributeStyle, {\n              children: [attr.type === \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeSwatch, {\n                color: `${itm.id}`,\n                className: itm.id === this.state.attributes[attr.name] ? \"swatchSelected\" : null,\n                onClick: () => setAttributes(itm, attr.name, this.state.attributes, this.setState({}))\n              }, itm.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, this)), attr.type !== \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                className: itm.id === this.state.attributes[attr.name] ? \"selected\" : null,\n                onClick: () => setAttributes(itm, attr.name, this.state.attributes, this.setState({})),\n                children: itm.value\n              }, itm.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, attr.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Attribute, {\n            children: \"PRICE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), this.state.product.prices.map(p => p.currency.symbol === this.props.currency && /*#__PURE__*/_jsxDEV(ProductPrice, {\n            children: [p.currency.symbol, p.amount]\n          }, p.currency.symbol, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this)), this.state.product.inStock === true && /*#__PURE__*/_jsxDEV(AddButton, {\n            type: \"submit\",\n            onClick: () => addProductToCart(this.state.product, this.state.attributes, this.setState({})),\n            children: \"ADD TO CART\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), this.state.product.inStock !== true && /*#__PURE__*/_jsxDEV(OutOfStock, {\n            type: \"button\",\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProductParse, {\n            children: parse(cleanHTML)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Prop = props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(ProductDetails, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 30\n  }, this);\n};\n\n_s(Prop, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = Prop;\nexport default connect(mapStateToProps, mapDispatchToProps)(Prop);\n\nvar _c;\n\n$RefreshReg$(_c, \"Prop\");","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx"],"names":["React","DetailsContainer","ProductImages","ProductImage","ProductInfo","Attribute","AddButton","AttributeButton","ProductName","ProductBrand","ProductPrice","AttributeSwatch","OutOfStock","ProductParse","ImageHover","AttributeStyle","AttributeName","useParams","DOMPurify","parse","Get_Product","connect","initialDetails","NoStyleDiv","addProductToCart","mapDispatchToProps","mapStateToProps","predefinedAttributes","setAttributes","ProductDetails","Component","constructor","props","state","componentDidMount","id","params","then","res","setState","product","data","imagePreview","gallery","render","cleanHTML","sanitize","description","USE_PROFILES","html","length","map","img","brand","name","attributes","attr","type","items","itm","value","prices","p","currency","symbol","amount","inStock","Prop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  DetailsContainer,\n  ProductImages,\n  ProductImage,\n  ProductInfo,\n  Attribute,\n  AddButton,\n  AttributeButton,\n  ProductName,\n  ProductBrand,\n  ProductPrice,\n  AttributeSwatch,\n  OutOfStock,\n  ProductParse,\n  ImageHover,\n  AttributeStyle,\n  AttributeName,\n} from \"../../styles/productDetails\";\nimport { useParams } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport { ProductDetailsTypes } from \"../../types\";\nimport { Get_Product } from \"../../queries\";\nimport { connect } from \"react-redux\";\nimport { initialDetails } from \"../../initialState\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport { ProductDetailsProps } from \"../../props\";\nimport \"./details.css\";\nimport {\n  addProductToCart,\n  mapDispatchToProps,\n  mapStateToProps,\n  predefinedAttributes,\n  setAttributes,\n} from \"./util\";\n\nclass ProductDetails extends React.Component<\n  ProductDetailsProps,\n  ProductDetailsTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = initialDetails;\n  }\n  componentDidMount() {\n    let { id } = this.props.params;\n    Get_Product(id).then((res) => {\n      this.setState({\n        product: res.data.product,\n        imagePreview: res.data.product.gallery[0],\n      });\n      predefinedAttributes(this.state.product, this.setState({}));\n    });\n  }\n\n  render() {\n    const cleanHTML = DOMPurify.sanitize(this.state.product.description, {\n      USE_PROFILES: { html: true },\n    });\n    return (\n      <DetailsContainer>\n        <>\n          <ProductImages>\n            {this.state.product.gallery.length >= 1 &&\n              this.state.product.gallery?.map((img) => (\n                <ImageHover\n                  key={img}\n                  src={img}\n                  alt=\"product-img\"\n                  onMouseOver={() => this.setState({ imagePreview: img })}\n                />\n              ))}\n          </ProductImages>\n\n          <ProductImage>\n            <img\n              src={this.state.imagePreview}\n              alt=\"product-img-preview\"\n              height={500}\n              width={600}\n            />\n          </ProductImage>\n\n          <ProductInfo>\n            <NoStyleDiv>\n              <ProductBrand>{this.state.product.brand}</ProductBrand>\n              <ProductName>{this.state.product.name}</ProductName>\n            </NoStyleDiv>\n\n            {this.state.product.attributes.map((attr) => (\n              <NoStyleDiv key={attr.id}>\n                <AttributeName>{attr.name}:</AttributeName>\n                <AttributeStyle>\n                  {attr.type === \"swatch\" &&\n                    attr.items.map((itm) => (\n                      <AttributeSwatch\n                        color={`${itm.id}`}\n                        key={itm.id}\n                        className={\n                          itm.id === this.state.attributes[attr.name]\n                            ? \"swatchSelected\"\n                            : null\n                        }\n                        onClick={() =>\n                          setAttributes(\n                            itm,\n                            attr.name,\n                            this.state.attributes,\n                            this.setState({})\n                          )\n                        }\n                      />\n                    ))}\n\n                  {attr.type !== \"swatch\" &&\n                    attr.items.map((itm) => (\n                      <AttributeButton\n                        key={itm.id}\n                        className={\n                          itm.id === this.state.attributes[attr.name]\n                            ? \"selected\"\n                            : null\n                        }\n                        onClick={() =>\n                          setAttributes(\n                            itm,\n                            attr.name,\n                            this.state.attributes,\n                            this.setState({})\n                          )\n                        }\n                      >\n                        {itm.value}\n                      </AttributeButton>\n                    ))}\n                </AttributeStyle>\n              </NoStyleDiv>\n            ))}\n\n            <Attribute>PRICE:</Attribute>\n            {this.state.product.prices.map(\n              (p) =>\n                p.currency.symbol === this.props.currency && (\n                  <ProductPrice key={p.currency.symbol}>\n                    {p.currency.symbol}\n                    {p.amount}\n                  </ProductPrice>\n                )\n            )}\n\n            {this.state.product.inStock === true && (\n              <AddButton\n                type=\"submit\"\n                onClick={() =>\n                  addProductToCart(\n                    this.state.product,\n                    this.state.attributes,\n                    this.setState({})\n                  )\n                }\n              >\n                ADD TO CART\n              </AddButton>\n            )}\n            {this.state.product.inStock !== true && (\n              <OutOfStock type=\"button\">OUT OF STOCK</OutOfStock>\n            )}\n            <ProductParse>{parse(cleanHTML)}</ProductParse>\n          </ProductInfo>\n        </>\n      </DetailsContainer>\n    );\n  }\n}\nconst Prop = (props: any) => <ProductDetails {...props} params={useParams()} />;\nexport default connect(mapStateToProps, mapDispatchToProps)(Prop);\n"]},"metadata":{},"sourceType":"module"}