{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0\n};\n\nconst objCompare = (attributes, attribute) => {\n  if (JSON.stringify(attributes) === JSON.stringify(attribute)) {\n    return true;\n  }\n\n  if (JSON.stringify(attributes) !== JSON.stringify(attribute)) {\n    return false;\n  }\n\n  return true;\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, _ref) => {\n      var _payload$attr;\n\n      let {\n        payload,\n        type\n      } = _ref;\n      console.log(payload);\n      const attributes = payload === null || payload === void 0 ? void 0 : (_payload$attr = payload.attr) === null || _payload$attr === void 0 ? void 0 : _payload$attr.map(attr => attr.itm.id);\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.product.id);\n      const existingItem = state.cartItems.map(item => item.id === payload.product.id);\n      console.log(existingItem);\n\n      if (existingIndex >= 0) {\n        console.log(attributes);\n        const existingAttributes = state.cartItems[existingIndex].selectedAttributes.map(attr => attr.itm.id);\n        console.log(existingAttributes);\n\n        if (JSON.stringify(attributes) !== JSON.stringify(existingAttributes) // && attributes\n        ) {\n          let tempProductItem = { ...payload.product,\n            cartQuantity: 1,\n            imageIndex: 0,\n            selectedAttributes: payload.attr\n          };\n          state.cartItems.push(tempProductItem);\n          toast.success(`${payload.product.name} added again to cart`, {\n            position: \"top-center\"\n          });\n        } else if (JSON.stringify(attributes) === JSON.stringify(existingAttributes) // || attributes === undefined\n        ) {\n          state.cartItems[existingIndex] = { ...state.cartItems[existingIndex],\n            cartQuantity: state.cartItems[existingIndex].cartQuantity += 1\n          };\n          toast.info(`${payload.product.name} quantity increased`, {\n            position: \"top-center\"\n          });\n        }\n      } else {\n        let tempProductItem = { ...payload.product,\n          cartQuantity: 1,\n          imageIndex: 0,\n          selectedAttributes: payload.attr\n        };\n        state.cartItems.push(tempProductItem);\n        toast.success(`${payload.product.name} added  to cart`, {\n          position: \"top-center\"\n        });\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    decreaseCart(state, _ref2) {\n      let {\n        payload,\n        type\n      } = _ref2;\n      const itemIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n        toast.info(`${payload.name} quantity decreased in cart`, {\n          position: \"top-center\"\n        });\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(item => item.id !== payload.id);\n        state.cartItems = nextCartItems;\n        toast.error(`${payload.name} removed from cart`, {\n          position: \"top-center\"\n        });\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    getTotals(state) {\n      let totalPrice = 0;\n      let total = 0;\n      let {\n        quantity\n      } = state.cartItems.reduce((cartTotal, cartItem) => {\n        const {\n          cartQuantity\n        } = cartItem;\n        cartTotal.quantity += cartQuantity;\n        return cartTotal;\n      }, {\n        quantity: 0\n      });\n      state.cartItems.forEach(i => {\n        const pricesProxy = JSON.parse(JSON.stringify(i.prices));\n        const amount = pricesProxy.filter(x => x.currency.symbol === localStorage.getItem(\"currency\"))[0];\n        total += amount.amount * i.cartQuantity;\n      });\n      totalPrice = parseFloat(total.toFixed(2));\n      state.cartTotalAmount = totalPrice;\n      state.cartTotalQuantity = quantity;\n    },\n\n    changeImageIndexUp(state, _ref3) {\n      let {\n        payload,\n        type\n      } = _ref3;\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (existingIndex >= 0) {\n        if (state.cartItems[existingIndex].imageIndex === payload.gallery.length - 1) {\n          state.cartItems[existingIndex].imageIndex = 0;\n        } else if (state.cartItems[existingIndex].imageIndex >= 0) {\n          state.cartItems[existingIndex].imageIndex += 1;\n        }\n      }\n    },\n\n    changeImageIndexDown(state, _ref4) {\n      let {\n        payload,\n        type\n      } = _ref4;\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (existingIndex >= 0) {\n        if (state.cartItems[existingIndex].imageIndex > 0) {\n          state.cartItems[existingIndex].imageIndex -= 1;\n        } else if (state.cartItems[existingIndex].imageIndex === 0) {\n          state.cartItems[existingIndex].imageIndex = payload.gallery.length - 1;\n        }\n      }\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  decreaseCart,\n  getTotals,\n  changeImageIndexUp,\n  changeImageIndexDown\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/redux/cartSlice.ts"],"names":["createSlice","toast","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","cartTotalAmount","objCompare","attributes","attribute","stringify","cartSlice","name","reducers","addToCart","state","payload","type","console","log","attr","map","itm","id","existingIndex","findIndex","item","product","existingItem","existingAttributes","selectedAttributes","tempProductItem","cartQuantity","imageIndex","push","success","position","info","setItem","decreaseCart","itemIndex","nextCartItems","filter","error","getTotals","totalPrice","total","quantity","reduce","cartTotal","cartItem","forEach","i","pricesProxy","prices","amount","x","currency","symbol","parseFloat","toFixed","changeImageIndexUp","gallery","length","changeImageIndexDown","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\n\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\")\n    ? JSON.parse(localStorage.getItem(\"cartItems\")!)\n    : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0,\n};\n\nconst objCompare = (attributes:any, attribute:any) => {\n  if (JSON.stringify(attributes) === JSON.stringify(attribute)) {\n    return true;\n  }\n  if (JSON.stringify(attributes) !== JSON.stringify(attribute) ){\n    return false;\n  }\n  return true;\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, {payload,type}) => {\n      console.log(payload)\n      const attributes = (payload?.attr?.map((attr:any) => attr.itm.id) )\n      const existingIndex = state.cartItems.findIndex(\n        (item:any) => item.id === payload.product.id \n      );\n      const existingItem = state.cartItems.map(\n        (item:any) => item.id === payload.product.id \n      );\n      console.log(existingItem)\n      if (existingIndex >= 0) {\n        console.log(attributes)\n        const existingAttributes = state.cartItems[existingIndex].selectedAttributes.map((attr:any) => attr.itm.id)\n        console.log(existingAttributes)\n        if((JSON.stringify(attributes) !== JSON.stringify(existingAttributes)) \n        // && attributes\n        ){ \n          let tempProductItem = { ...payload.product, cartQuantity: 1, imageIndex: 0,selectedAttributes:payload.attr };\n        state.cartItems.push(tempProductItem);\n        toast.success(`${payload.product.name} added again to cart`, { \n          position: \"top-center\",\n        })\n      } else \n      if((JSON.stringify(attributes) === JSON.stringify(existingAttributes)) \n      // || attributes === undefined\n      ){ \n        state.cartItems[existingIndex] = {\n          ...state.cartItems[existingIndex],\n          cartQuantity: state.cartItems[existingIndex].cartQuantity += 1,\n        };\n        toast.info(`${payload.product.name} quantity increased`, {\n          position: \"top-center\",\n        })\n      }\n      } \n      else {\n        let tempProductItem = { ...payload.product, cartQuantity: 1, imageIndex: 0,selectedAttributes:payload.attr };\n        state.cartItems.push(tempProductItem);\n        toast.success(`${payload.product.name} added  to cart`, {\n          position: \"top-center\",\n        })\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    \n    decreaseCart(state, {payload, type}) {\n      const itemIndex = state.cartItems.findIndex(\n        (item:any) => item.id === payload.id\n      );\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n\n        toast.info(`${payload.name} quantity decreased in cart`, {\n          position: \"top-center\",\n      })\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(\n          (item:any) => item.id !== payload.id\n        );\n\n        state.cartItems = nextCartItems;\n\n        toast.error(`${payload.name} removed from cart`, {\n          position: \"top-center\",\n        })\n      }\n      \n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    getTotals(state) {\n      let totalPrice = 0;\n      let total = 0\n\n      let { quantity } = state.cartItems.reduce(\n        (cartTotal:any, cartItem:any) => {\n          const {cartQuantity } = cartItem;\n          cartTotal.quantity += cartQuantity;       \n          return cartTotal;\n        },\n        {\n          quantity: 0,\n        }\n        );\n        state.cartItems.forEach((i: any) => {\n          const pricesProxy = JSON.parse(JSON.stringify(i.prices))\n          const amount = pricesProxy.filter((x: any) => x.currency.symbol === localStorage.getItem(\"currency\"))[0]\n          total += amount.amount * i.cartQuantity\n        })\n        totalPrice = parseFloat(total.toFixed(2));\n        state.cartTotalAmount = totalPrice;\n        state.cartTotalQuantity = quantity;\n      },\n\n      changeImageIndexUp(state, {payload,type}) {\n        const existingIndex = state.cartItems.findIndex(\n          (item:any) => item.id === payload.id\n        );\n        \n        if (existingIndex >= 0) {\n         if(state.cartItems[existingIndex].imageIndex === (payload.gallery.length-1)){\n           state.cartItems[existingIndex].imageIndex = 0\n         }\n         else if(state.cartItems[existingIndex].imageIndex >= 0){\n           state.cartItems[existingIndex].imageIndex += 1\n         }\n        }\n  \n      },\n\n      changeImageIndexDown(state, {payload,type}) {\n        const existingIndex = state.cartItems.findIndex(\n          (item:any) => item.id === payload.id\n        );\n        if (existingIndex >= 0) {\n         if(state.cartItems[existingIndex].imageIndex > 0){\n           state.cartItems[existingIndex].imageIndex -= 1\n         }\n         else if(state.cartItems[existingIndex].imageIndex === 0){\n          state.cartItems[existingIndex].imageIndex = (payload.gallery.length-1)\n        }\n        }\n  \n      },\n  }\n});\n\nexport const { addToCart, decreaseCart,  getTotals, changeImageIndexUp, changeImageIndexDown } =\n  cartSlice.actions;\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}