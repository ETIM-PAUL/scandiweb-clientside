{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { ActionTypes } from \"../constants/action-types\";\nconst initialState = {\n  products: [],\n  selectedCategory: \"\",\n  selectedCurrency: \"\",\n  cart: {\n    cartItems: [],\n    cartTotalQuantity: 0,\n    cartTotalAmount: 0\n  }\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case ActionTypes.SET_CATEGORY_TITLE:\n      return {\n        selectedCategory: payload\n      };\n\n    case ActionTypes.SET_CURRENCY_TYPE:\n      return {\n        selectedCurrency: payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.cart;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case ActionTypes.ADD_TO_CART:\n      const productIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (productIndex >= 0) {\n        state.cartItems[productIndex].cartQuantity += 1;\n        toast.info(\"product quantity incresed\", {\n          position: \"top-center\"\n        });\n      } else {\n        const tempProduct = { ...payload,\n          cartQuantity: 1\n        };\n        toast.success(`${payload.name} new product added to cart`, {\n          position: \"top-center\"\n        });\n        return { ...state,\n          cartItems: state.cartItems.concat(tempProduct)\n        };\n      }\n\n      return { ...state,\n        cartTotalQuantity: state.cartItems.length\n      };\n\n    case ActionTypes.REMOVE_FROM_CART:\n      return {};\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/redux/reducers/productsReducer.js"],"names":["toast","ActionTypes","initialState","products","selectedCategory","selectedCurrency","cart","cartItems","cartTotalQuantity","cartTotalAmount","productsReducer","state","type","payload","SET_CATEGORY_TITLE","SET_CURRENCY_TYPE","cartReducer","ADD_TO_CART","productIndex","findIndex","item","id","cartQuantity","info","position","tempProduct","success","name","concat","length","REMOVE_FROM_CART"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAC,EADU;AAEnBC,EAAAA,gBAAgB,EAAC,EAFE;AAGnBC,EAAAA,gBAAgB,EAAC,EAHE;AAInBC,EAAAA,IAAI,EAAC;AACHC,IAAAA,SAAS,EAAE,EADR;AAEHC,IAAAA,iBAAiB,EAAC,CAFf;AAGHC,IAAAA,eAAe,EAAE;AAHd;AAJc,CAArB;AAWA,OAAO,MAAMC,eAAe,GAAG,YAAwC;AAAA,MAAvCC,KAAuC,uEAAjCT,YAAiC;AAAA,MAAnB;AAACU,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAmB;;AACrE,UAAQD,IAAR;AACE,SAAKX,WAAW,CAACa,kBAAjB;AACE,aAAO;AACLV,QAAAA,gBAAgB,EAAES;AADb,OAAP;;AAGA,SAAKZ,WAAW,CAACc,iBAAjB;AACE,aAAO;AACLV,QAAAA,gBAAgB,EAAEQ;AADb,OAAP;;AAGJ;AACE,aAAOF,KAAP;AAVJ;AAYD,CAbM;AAeP,OAAO,MAAMK,WAAW,GAAG,YAA6C;AAAA,MAA5CL,KAA4C,uEAAtCT,YAAY,CAACI,IAAyB;AAAA,MAAnB;AAACM,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAmB;;AACtE,UAAQD,IAAR;AACE,SAAKX,WAAW,CAACgB,WAAjB;AACE,YAAMC,YAAY,GAAGP,KAAK,CAACJ,SAAN,CAAgBY,SAAhB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,OAAO,CAACQ,EAAvD,CAArB;;AACA,UAAGH,YAAY,IAAI,CAAnB,EAAsB;AACpBP,QAAAA,KAAK,CAACJ,SAAN,CAAgBW,YAAhB,EAA8BI,YAA9B,IAA8C,CAA9C;AACAtB,QAAAA,KAAK,CAACuB,IAAN,CAAW,2BAAX,EAAwC;AACtCC,UAAAA,QAAQ,EAAE;AAD4B,SAAxC;AAGD,OALD,MAKO;AACL,cAAMC,WAAW,GAAG,EAAC,GAAGZ,OAAJ;AAAaS,UAAAA,YAAY,EAAE;AAA3B,SAApB;AACAtB,QAAAA,KAAK,CAAC0B,OAAN,CAAe,GAAEb,OAAO,CAACc,IAAK,4BAA9B,EAA2D;AACzDH,UAAAA,QAAQ,EAAE;AAD+C,SAA3D;AAGA,eAAO,EAAC,GAAGb,KAAJ;AAAWJ,UAAAA,SAAS,EAACI,KAAK,CAACJ,SAAN,CAAgBqB,MAAhB,CAAuBH,WAAvB;AAArB,SAAP;AAED;;AACD,aAAO,EAAC,GAAGd,KAAJ;AAAWH,QAAAA,iBAAiB,EAACG,KAAK,CAACJ,SAAN,CAAgBsB;AAA7C,OAAP;;AAEF,SAAK5B,WAAW,CAAC6B,gBAAjB;AACE,aAAO,EAAP;;AACF;AACE,aAAOnB,KAAP;AArBJ;AAuBD,CAxBM","sourcesContent":["import { toast } from \"react-toastify\"\nimport { ActionTypes } from \"../constants/action-types\"\n\nconst initialState = {\n  products:[],\n  selectedCategory:\"\",\n  selectedCurrency:\"\",\n  cart:{\n    cartItems: [],\n    cartTotalQuantity:0,\n    cartTotalAmount: 0,\n  }\n}\n\nexport const productsReducer = (state=initialState, {type,payload}) => {\n  switch (type) {\n    case ActionTypes.SET_CATEGORY_TITLE:\n      return {\n        selectedCategory: payload\n      }\n      case ActionTypes.SET_CURRENCY_TYPE:\n        return {\n          selectedCurrency: payload\n        }\n    default:\n      return state;\n  }\n}\n\nexport const cartReducer = (state=initialState.cart, {type,payload}) => {\n  switch (type) {\n    case ActionTypes.ADD_TO_CART:\n      const productIndex = state.cartItems.findIndex( item => item.id === payload.id);\n      if(productIndex >= 0) {\n        state.cartItems[productIndex].cartQuantity += 1;\n        toast.info(\"product quantity incresed\", {\n          position: \"top-center\",\n        })\n      } else {\n        const tempProduct = {...payload, cartQuantity: 1}\n        toast.success(`${payload.name} new product added to cart`, {\n          position: \"top-center\",\n        })\n        return {...state, cartItems:state.cartItems.concat(tempProduct)};\n        \n      }\n      return {...state, cartTotalQuantity:state.cartItems.length};\n      \n    case ActionTypes.REMOVE_FROM_CART:\n      return {};\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}