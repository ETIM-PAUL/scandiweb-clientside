{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/TopNav/index.tsx\";\nimport React from \"react\";\nimport { BsCart } from \"react-icons/bs\";\nimport { TopHeading, Item, Logo, Menu, SingleIcon, CartSpan, Overlay, MiniCart, CartDiv, CurrencySwitcher, CurrencyHolder, Currency, CurrencyContainer } from \"../../styles/topNav\";\nimport { connect } from \"react-redux\";\nimport { setCategory, setCurrency } from \"../../redux/selectSlice\";\nimport { Get_Category, Get_Currency } from \"../../queries\";\nimport { getTotals } from \"../../redux/cartSlice\";\nimport CartOverlay from \"../Cart/CartOverlay\";\nimport logo from \"../../img/alogo.png\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TopNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = void 0;\n    this.ref = /*#__PURE__*/React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.state = {\n      products: [],\n      categories: [],\n      category: \"\",\n      currencies: [],\n      currency: \"\",\n      currencySymbol: \"\",\n      currencySwitchDisplay: \"none\"\n    };\n  }\n\n  handleClickOutside(event) {\n    if (this.ref.current && !this.ref.current.contains(event.target)) {\n      this.props.onClickOutside && this.props.onClickOutside();\n    }\n  }\n\n  selectedCategoryTitle(title) {\n    this.setState({\n      category: title\n    });\n    this.props.setCategory(title);\n  }\n\n  selectedCurrencyType(symbol) {\n    this.setState({\n      currency: symbol\n    });\n    this.props.setCurrency(symbol);\n    this.props.setTotalPrice();\n    console.log(symbol);\n  }\n\n  componentDidMount() {\n    Get_Category().then(result => {\n      this.setState({\n        categories: result.data.categories,\n        category: result.data.categories[0].name\n      });\n      this.props.setCategory(this.state.category);\n    });\n    Get_Currency().then(result => {\n      this.setState({\n        currencies: result.data.currencies,\n        currency: result.data.currencies[0].symbol\n      });\n      this.props.setCurrency(this.state.currency);\n    });\n    document.addEventListener(\"click\", this.handleClickOutside, true);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"click\", this.handleClickOutside, true);\n  }\n\n  render() {\n    var _this$state$categorie, _this$state$currencie;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(TopHeading, {\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          children: this.state.categories.length > 0 && ((_this$state$categorie = this.state.categories) === null || _this$state$categorie === void 0 ? void 0 : _this$state$categorie.map(cat => /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              id: cat.name,\n              onClick: e => this.selectedCategoryTitle(e.target.id),\n              style: localStorage.getItem(\"category\") === cat.name ? {\n                color: \"green\",\n                textDecoration: \"underline\"\n              } : {},\n              children: cat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n          children: [/*#__PURE__*/_jsxDEV(CartDiv, {\n            children: [/*#__PURE__*/_jsxDEV(BsCart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CartSpan, {\n              children: this.props.totalQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n              children: /*#__PURE__*/_jsxDEV(MiniCart, {\n                children: /*#__PURE__*/_jsxDEV(CartOverlay, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SingleIcon, {\n            children: [/*#__PURE__*/_jsxDEV(CurrencySwitcher, {\n              onKeyDown: () => this.setState({\n                currencySwitchDisplay: \"none\"\n              }),\n              onClick: () => this.setState({\n                currencySwitchDisplay: \"block\"\n              }),\n              children: [this.props.currency, \" ^\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyContainer, {\n              style: {\n                display: this.state.currencySwitchDisplay\n              },\n              children: /*#__PURE__*/_jsxDEV(CurrencyHolder, {\n                children: (_this$state$currencie = this.state.currencies) === null || _this$state$currencie === void 0 ? void 0 : _this$state$currencie.map(cur => /*#__PURE__*/_jsxDEV(Currency, {\n                  onClick: e => {\n                    this.selectedCurrencyType(e.target.id);\n                    this.setState({\n                      currencySwitchDisplay: \"none\"\n                    });\n                  },\n                  id: cur.symbol,\n                  children: [cur.symbol, \" \\xA0 \", cur.label]\n                }, cur.symbol, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCategory: category => dispatch(setCategory(category)),\n    setCurrency: currency => dispatch(setCurrency(currency)),\n    setTotalPrice: () => dispatch(getTotals())\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    totalQuantity: state.cart.cartTotalQuantity,\n    currency: state.selection.selectedCurrency\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNav);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/TopNav/index.tsx"],"names":["React","BsCart","TopHeading","Item","Logo","Menu","SingleIcon","CartSpan","Overlay","MiniCart","CartDiv","CurrencySwitcher","CurrencyHolder","Currency","CurrencyContainer","connect","setCategory","setCurrency","Get_Category","Get_Currency","getTotals","CartOverlay","logo","NoStyleDiv","Link","TopNav","Component","constructor","props","ref","createRef","handleClickOutside","bind","state","products","categories","category","currencies","currency","currencySymbol","currencySwitchDisplay","event","current","contains","target","onClickOutside","selectedCategoryTitle","title","setState","selectedCurrencyType","symbol","setTotalPrice","console","log","componentDidMount","then","result","data","name","document","addEventListener","componentWillUnmount","removeEventListener","render","length","map","cat","textDecoration","e","id","localStorage","getItem","color","totalQuantity","display","cur","label","mapDispatchToProps","dispatch","mapStateToProps","cart","cartTotalQuantity","selection","selectedCurrency"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BsCart } from \"react-icons/bs\";\nimport {\n  TopHeading,\n  Item,\n  Logo,\n  Menu,\n  SingleIcon,\n  CartSpan,\n  Overlay,\n  MiniCart,\n  CartDiv,\n  CurrencySwitcher,\n  CurrencyHolder,\n  Currency,\n  CurrencyContainer,\n} from \"../../styles/topNav\";\nimport { connect } from \"react-redux\";\nimport { setCategory, setCurrency } from \"../../redux/selectSlice\";\nimport { TopNavTypes } from \"../../types\";\nimport { Get_Category, Get_Currency } from \"../../queries\";\nimport { getTotals } from \"../../redux/cartSlice\";\nimport CartOverlay from \"../Cart/CartOverlay\";\nimport logo from \"../../img/alogo.png\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport { Link } from \"react-router-dom\";\nimport { TopNavProps } from \"../../props\";\nclass TopNav extends React.Component<TopNavProps, TopNavTypes> {\n  ref: React.RefObject<unknown>;\n  constructor(props: any) {\n    super(props);\n    this.ref = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.state = {\n      products: [],\n      categories: [],\n      category: \"\",\n      currencies: [],\n      currency: \"\",\n      currencySymbol: \"\",\n      currencySwitchDisplay: \"none\",\n    };\n  }\n  handleClickOutside(event) {\n    if (this.ref.current && !this.ref.current.contains(event.target)) {\n      this.props.onClickOutside && this.props.onClickOutside();\n    }\n  }\n  selectedCategoryTitle(title: string) {\n    this.setState({ category: title });\n    this.props.setCategory(title);\n  }\n\n  selectedCurrencyType(symbol: any) {\n    this.setState({ currency: symbol });\n    this.props.setCurrency(symbol);\n    this.props.setTotalPrice();\n    console.log(symbol);\n  }\n\n  componentDidMount() {\n    Get_Category().then((result) => {\n      this.setState({\n        categories: result.data.categories,\n        category: result.data.categories[0].name,\n      });\n      this.props.setCategory(this.state.category);\n    });\n\n    Get_Currency().then((result) => {\n      this.setState({\n        currencies: result.data.currencies,\n        currency: result.data.currencies[0].symbol,\n      });\n      this.props.setCurrency(this.state.currency);\n    });\n    document.addEventListener(\"click\", this.handleClickOutside, true);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener(\"click\", this.handleClickOutside, true);\n  }\n  render() {\n    return (\n      <>\n        <TopHeading>\n          <Menu>\n            {this.state.categories.length > 0 &&\n              this.state.categories?.map((cat: any) => (\n                <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                  <Item\n                    id={cat.name}\n                    onClick={(e: any) =>\n                      this.selectedCategoryTitle(e.target.id)\n                    }\n                    style={\n                      localStorage.getItem(\"category\") === cat.name\n                        ? {\n                            color: \"green\",\n                            textDecoration: \"underline\",\n                          }\n                        : {}\n                    }\n                  >\n                    {cat.name}\n                  </Item>\n                </Link>\n              ))}\n          </Menu>\n\n          <Logo>\n            <img src={logo} alt=\"logo\" />\n          </Logo>\n\n          <NoStyleDiv>\n            <CartDiv>\n              <BsCart />\n              <CartSpan>{this.props.totalQuantity}</CartSpan>\n              <Overlay>\n                <MiniCart>\n                  <CartOverlay />\n                </MiniCart>\n              </Overlay>\n            </CartDiv>\n\n            <SingleIcon>\n              <CurrencySwitcher\n                onKeyDown={() =>\n                  this.setState({ currencySwitchDisplay: \"none\" })\n                }\n                onClick={() =>\n                  this.setState({ currencySwitchDisplay: \"block\" })\n                }\n              >\n                {this.props.currency} ^\n              </CurrencySwitcher>\n              <CurrencyContainer\n                style={{ display: this.state.currencySwitchDisplay }}\n              >\n                <CurrencyHolder>\n                  {this.state.currencies?.map((cur: any) => (\n                    <Currency\n                      onClick={(e: any) => {\n                        this.selectedCurrencyType(e.target.id);\n                        this.setState({ currencySwitchDisplay: \"none\" });\n                      }}\n                      key={cur.symbol}\n                      id={cur.symbol}\n                    >\n                      {cur.symbol} &nbsp; {cur.label}\n                    </Currency>\n                  ))}\n                </CurrencyHolder>\n              </CurrencyContainer>\n            </SingleIcon>\n          </NoStyleDiv>\n        </TopHeading>\n      </>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    setCategory: (category: string) => dispatch(setCategory(category)),\n    setCurrency: (currency: string) => dispatch(setCurrency(currency)),\n    setTotalPrice: () => dispatch(getTotals()),\n  };\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    totalQuantity: state.cart.cartTotalQuantity,\n    currency: state.selection.selectedCurrency,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNav);\n"]},"metadata":{},"sourceType":"module"}