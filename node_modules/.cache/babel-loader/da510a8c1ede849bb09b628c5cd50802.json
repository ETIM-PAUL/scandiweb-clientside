{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/TopNav/index.tsx\";\nimport React from \"react\";\nimport { BsCart } from \"react-icons/bs\";\nimport { TopHeading, Item, Logo, Menu, SingleIcon, DropDownContent, DropItem, CartSpan, Overlay, MiniCart, CartDiv } from \"../../styles/topNav\";\nimport { connect } from \"react-redux\";\nimport { setCategory, setCurrency, setCurrencySymbol } from \"../../redux/selectSlice\";\nimport { Get_Category, Get_Currency } from \"../../queries\";\nimport { getTotals } from \"../../redux/cartSlice\";\nimport CartOverlay from \"../Cart/CartOverlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TopNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      categories: [],\n      category: \"\",\n      currencies: [],\n      currency: \"\",\n      currencySymbol: \"\"\n    };\n  }\n\n  selectedCategoryTitle(title) {\n    this.setState({\n      category: title\n    });\n    this.props.setCategory(title);\n  }\n\n  selectedCurrencyType(currency) {\n    this.setState({\n      currency: currency.label.toString()\n    });\n    this.props.setCurrency(currency.label.toString());\n    this.props.setCurrencySymbol(currency.symbol.toString());\n    console.log(currency.label.toString());\n    console.log(currency.symbol.toString());\n    this.props.setTotalPrice();\n  }\n\n  componentDidMount() {\n    Get_Category().then(result => {\n      this.setState({\n        categories: result.data.categories,\n        category: result.data.categories[0].name\n      });\n      this.props.setCategory(this.state.category);\n    });\n    Get_Currency().then(result => {\n      this.setState({\n        currencies: result.data.currencies,\n        currency: result.data.currencies[0].label,\n        currencySymbol: result.data.currencies[0].symbol\n      });\n      this.props.setCurrency(this.state.currency);\n      this.props.setCurrencySymbol(this.state.currencySymbol);\n    });\n  }\n\n  render() {\n    var _this$state$categorie, _this$state$currencie;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(TopHeading, {\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          children: this.state.categories.length > 0 && ((_this$state$categorie = this.state.categories) === null || _this$state$categorie === void 0 ? void 0 : _this$state$categorie.map(cat => /*#__PURE__*/_jsxDEV(Item, {\n            id: cat.name,\n            onClick: e => this.selectedCategoryTitle(e.target.id),\n            children: cat.name\n          }, cat.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {\n          children: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CartDiv, {\n            children: [/*#__PURE__*/_jsxDEV(BsCart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CartSpan, {\n              children: this.props.totalQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n              children: /*#__PURE__*/_jsxDEV(MiniCart, {\n                children: /*#__PURE__*/_jsxDEV(CartOverlay, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SingleIcon, {\n            children: /*#__PURE__*/_jsxDEV(DropDownContent, {\n              onChange: e => this.selectedCurrencyType(e.target.value),\n              children: this.state.currencies.length > 0 && ((_this$state$currencie = this.state.currencies) === null || _this$state$currencie === void 0 ? void 0 : _this$state$currencie.map(cur => /*#__PURE__*/_jsxDEV(DropItem, {\n                id: cur.symbol,\n                value: cur,\n                children: [cur.symbol, \" \", \"\", \" \", cur.label]\n              }, cur.symbol, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCategory: category => dispatch(setCategory(category)),\n    setCurrency: currency => dispatch(setCurrency(currency)),\n    setCurrencySymbol: symbol => dispatch(setCurrencySymbol(symbol)),\n    setTotalPrice: () => dispatch(getTotals())\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    totalQuantity: state.cart.cartTotalQuantity\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNav);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/TopNav/index.tsx"],"names":["React","BsCart","TopHeading","Item","Logo","Menu","SingleIcon","DropDownContent","DropItem","CartSpan","Overlay","MiniCart","CartDiv","connect","setCategory","setCurrency","setCurrencySymbol","Get_Category","Get_Currency","getTotals","CartOverlay","TopNav","Component","constructor","props","state","products","categories","category","currencies","currency","currencySymbol","selectedCategoryTitle","title","setState","selectedCurrencyType","label","toString","symbol","console","log","setTotalPrice","componentDidMount","then","result","data","name","render","length","map","cat","e","target","id","totalQuantity","value","cur","mapDispatchToProps","dispatch","mapStateToProps","cart","cartTotalQuantity"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BsCart } from \"react-icons/bs\";\nimport {\n  TopHeading,\n  Item,\n  Logo,\n  Menu,\n  SingleIcon,\n  DropDownContent,\n  DropItem,\n  CartSpan,\n  Overlay,\n  MiniCart,\n  CartDiv,\n} from \"../../styles/topNav\";\nimport { connect } from \"react-redux\";\nimport {\n  setCategory,\n  setCurrency,\n  setCurrencySymbol,\n} from \"../../redux/selectSlice\";\nimport { TopNavTypes } from \"../../types\";\nimport { Get_Category, Get_Currency } from \"../../queries\";\nimport { getTotals } from \"../../redux/cartSlice\";\nimport CartOverlay from \"../Cart/CartOverlay\";\nclass TopNav extends React.Component<\n  {\n    setCategory: any;\n    setCurrency: any;\n    setCurrencySymbol: any;\n    totalQuantity: number;\n    setTotalPrice: any;\n  },\n  TopNavTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      categories: [],\n      category: \"\",\n      currencies: [],\n      currency: \"\",\n      currencySymbol: \"\",\n    };\n  }\n  selectedCategoryTitle(title: string) {\n    this.setState({ category: title });\n    this.props.setCategory(title);\n  }\n\n  selectedCurrencyType(currency: any) {\n    this.setState({ currency: currency.label.toString() });\n    this.props.setCurrency(currency.label.toString());\n    this.props.setCurrencySymbol(currency.symbol.toString());\n    console.log(currency.label.toString());\n    console.log(currency.symbol.toString());\n    this.props.setTotalPrice();\n  }\n\n  componentDidMount() {\n    Get_Category().then((result) => {\n      this.setState({\n        categories: result.data.categories,\n        category: result.data.categories[0].name,\n      });\n      this.props.setCategory(this.state.category);\n    });\n\n    Get_Currency().then((result) => {\n      this.setState({\n        currencies: result.data.currencies,\n        currency: result.data.currencies[0].label,\n        currencySymbol: result.data.currencies[0].symbol,\n      });\n      this.props.setCurrency(this.state.currency);\n      this.props.setCurrencySymbol(this.state.currencySymbol);\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <TopHeading>\n          <Menu>\n            {this.state.categories.length > 0 &&\n              this.state.categories?.map((cat: any) => (\n                <Item\n                  key={cat.name}\n                  id={cat.name}\n                  onClick={(e: any) => this.selectedCategoryTitle(e.target.id)}\n                >\n                  {cat.name}\n                </Item>\n              ))}\n          </Menu>\n\n          <Logo>Logo</Logo>\n\n          <div>\n            <CartDiv>\n              <BsCart />\n              <CartSpan>{this.props.totalQuantity}</CartSpan>\n              <Overlay>\n                <MiniCart>\n                  <CartOverlay />\n                </MiniCart>\n              </Overlay>\n            </CartDiv>\n\n            <SingleIcon>\n              <DropDownContent\n                onChange={(e: any) => this.selectedCurrencyType(e.target.value)}\n              >\n                {this.state.currencies.length > 0 &&\n                  this.state.currencies?.map((cur: any) => (\n                    <DropItem key={cur.symbol} id={cur.symbol} value={cur}>\n                      {cur.symbol} {\"\"} {cur.label}\n                    </DropItem>\n                  ))}\n              </DropDownContent>\n            </SingleIcon>\n          </div>\n        </TopHeading>\n      </>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    setCategory: (category: string) => dispatch(setCategory(category)),\n    setCurrency: (currency: string) => dispatch(setCurrency(currency)),\n    setCurrencySymbol: (symbol: string) => dispatch(setCurrencySymbol(symbol)),\n    setTotalPrice: () => dispatch(getTotals()),\n  };\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    totalQuantity: state.cart.cartTotalQuantity,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNav);\n"]},"metadata":{},"sourceType":"module"}