{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart, decreaseCart, getTotals } from \"../../redux/cartSlice\";\nimport { Attribute, AttributeButton, NoStyleDiv, CartContainer, CartRow, ChangeItemQuantity, GalleryDiv, AttributesDiv, Heading, Span, OrderButton, OrderDiv, CartSplit, RelativePosition, AttributeSwatch, AttributesContainer, Bold } from \"../../styles/cart\";\nimport { changeImageIndexUp, changeImageIndexDown } from \"../..//redux/cartSlice\";\nimport { ProductBrand, ProductName, ProductPrice } from \"../../styles/productDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cartItems: this.props.cart,\n      attribute: \"\"\n    };\n  }\n\n  decreaseCartItemQuantity(item) {\n    this.props.decreaseCart(item);\n    this.props.getTotals();\n  }\n\n  increaseCartItemQuantity(product) {\n    this.props.addToCart({\n      product\n    });\n    this.props.getTotals();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.cart !== state.cartItems) {\n      return {\n        cartItems: props.cart\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    var _this$state$cartItems, _this$props$cart;\n\n    return /*#__PURE__*/_jsxDEV(CartContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), ((_this$state$cartItems = this.state.cartItems) === null || _this$state$cartItems === void 0 ? void 0 : _this$state$cartItems.length) > 0 ? this.state.cartItems.map(item => {\n        var _item$prices, _item$gallery;\n\n        return /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n          children: [/*#__PURE__*/_jsxDEV(CartRow, {\n            children: [/*#__PURE__*/_jsxDEV(AttributesContainer, {\n              children: [/*#__PURE__*/_jsxDEV(ProductBrand, {\n                children: item.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ProductName, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), (_item$prices = item.prices) === null || _item$prices === void 0 ? void 0 : _item$prices.map(p => p.currency.symbol === this.props.currency && /*#__PURE__*/_jsxDEV(ProductPrice, {\n                children: [p.currency.symbol, p.amount]\n              }, p.currency.label, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this)), /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n                children: item.attributes.map(attr => /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n                  children: [/*#__PURE__*/_jsxDEV(Attribute, {\n                    children: [attr.name, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(AttributesDiv, {\n                    children: [attr.type === \"swatch\" && attr.items.map(attribute => /*#__PURE__*/_jsxDEV(AttributeSwatch, {\n                      style: item.selectedAttributes.find(x => x.attr === attr.id && x.itm.id === attribute.id) ? {\n                        backgroundColor: `${attribute.id}`,\n                        border: \"2px solid red\"\n                      } : {\n                        backgroundColor: `${attribute.id}`\n                      }\n                    }, attribute.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 31\n                    }, this)), attr.type !== \"swatch\" && attr.items.map(attribute => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                      style: item.selectedAttributes.find(x => x.attr === attr.id && x.itm.id === attribute.id) && {\n                        backgroundColor: \"black\",\n                        color: \"white\"\n                      },\n                      children: attribute.value\n                    }, attribute.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 25\n                  }, this)]\n                }, attr.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CartSplit, {\n              children: [/*#__PURE__*/_jsxDEV(NoStyleDiv, {\n                children: [/*#__PURE__*/_jsxDEV(ChangeItemQuantity, {\n                  onClick: () => this.increaseCartItemQuantity(item),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"25px\"\n                    },\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: item.cartQuantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ChangeItemQuantity, {\n                  onClick: () => this.decreaseCartItemQuantity(item),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"25px\"\n                    },\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RelativePosition, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.gallery[item.imageIndex],\n                  width: 200,\n                  height: 150,\n                  alt: \"itemImg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), ((_item$gallery = item.gallery) === null || _item$gallery === void 0 ? void 0 : _item$gallery.length) > 1 && /*#__PURE__*/_jsxDEV(GalleryDiv, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      backgroundColor: \"black\",\n                      color: \"white\"\n                    },\n                    onClick: () => this.props.changeImageDown(item)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      backgroundColor: \"black\",\n                      color: \"white\"\n                    },\n                    onClick: () => this.props.changeImageUp(item)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n        children: \"No Items in Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), ((_this$props$cart = this.props.cart) === null || _this$props$cart === void 0 ? void 0 : _this$props$cart.length) > 0 && /*#__PURE__*/_jsxDEV(OrderDiv, {\n        style: {\n          display: \"grid\",\n          marginTop: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Span, {\n          children: [\"Tax 21%: \", /*#__PURE__*/_jsxDEV(Bold, {\n            children: [this.props.currency, \"15\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Span, {\n          children: [\"Qty: \", /*#__PURE__*/_jsxDEV(Bold, {\n            children: this.props.totalQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n          children: /*#__PURE__*/_jsxDEV(Span, {\n            children: [\"Total:\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [this.props.currency, this.props.totalAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(OrderButton, {\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    decreaseCart: product => dispatch(decreaseCart(product)),\n    addToCart: product => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n    changeImageUp: item => dispatch(changeImageIndexUp(item)),\n    changeImageDown: item => dispatch(changeImageIndexDown(item))\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart.cartItems,\n    totalQuantity: state.cart.cartTotalQuantity,\n    totalAmount: state.cart.cartTotalAmount,\n    currency: state.selection[\"selectedCurrency\"]\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx"],"names":["React","connect","addToCart","decreaseCart","getTotals","Attribute","AttributeButton","NoStyleDiv","CartContainer","CartRow","ChangeItemQuantity","GalleryDiv","AttributesDiv","Heading","Span","OrderButton","OrderDiv","CartSplit","RelativePosition","AttributeSwatch","AttributesContainer","Bold","changeImageIndexUp","changeImageIndexDown","ProductBrand","ProductName","ProductPrice","Cart","Component","constructor","props","state","cartItems","cart","attribute","decreaseCartItemQuantity","item","increaseCartItemQuantity","product","getDerivedStateFromProps","render","length","map","brand","name","prices","p","currency","symbol","amount","label","attributes","attr","type","items","selectedAttributes","find","x","id","itm","backgroundColor","border","color","value","fontSize","textAlign","cartQuantity","gallery","imageIndex","changeImageDown","changeImageUp","display","marginTop","totalQuantity","totalAmount","mapDispatchToProps","dispatch","mapStateToProps","cartTotalQuantity","cartTotalAmount","selection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart, decreaseCart, getTotals } from \"../../redux/cartSlice\";\nimport {\n  Attribute,\n  AttributeButton,\n  NoStyleDiv,\n  CartContainer,\n  CartRow,\n  ChangeItemQuantity,\n  GalleryDiv,\n  AttributesDiv,\n  Heading,\n  Span,\n  OrderButton,\n  OrderDiv,\n  CartSplit,\n  RelativePosition,\n  AttributeSwatch,\n  AttributesContainer,\n  Bold,\n} from \"../../styles/cart\";\nimport { CartTypes, ItemProps } from \"../../types\";\n// import { FaLessThan, FaGreaterThan } from \"react-icons/fa\";\nimport { AppDispatch, RootState } from \"../../redux/store\";\nimport {\n  changeImageIndexUp,\n  changeImageIndexDown,\n} from \"../..//redux/cartSlice\";\nimport {\n  ProductBrand,\n  ProductName,\n  ProductPrice,\n} from \"../../styles/productDetails\";\nimport { CartProps } from \"../../props\";\n\nclass Cart extends React.Component<CartProps, CartTypes> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      cartItems: this.props.cart,\n      attribute: \"\",\n    };\n  }\n\n  decreaseCartItemQuantity(item: any) {\n    this.props.decreaseCart(item);\n    this.props.getTotals();\n  }\n\n  increaseCartItemQuantity(product: any) {\n    this.props.addToCart({ product });\n    this.props.getTotals();\n  }\n\n  static getDerivedStateFromProps(props: any, state: any) {\n    if (props.cart !== state.cartItems) {\n      return {\n        cartItems: props.cart,\n      };\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <CartContainer>\n        <Heading>CART</Heading>\n        <br />\n        <hr />\n        {this.state.cartItems?.length > 0 ? (\n          this.state.cartItems.map((item: ItemProps) => (\n            <NoStyleDiv key={item.id}>\n              {/* <AttributesContainer> */}\n              <CartRow>\n                <AttributesContainer>\n                  <ProductBrand>{item.brand}</ProductBrand>\n                  <ProductName>{item.name}</ProductName>\n                  {item.prices?.map(\n                    (p) =>\n                      p.currency.symbol === this.props.currency && (\n                        <ProductPrice key={p.currency.label}>\n                          {p.currency.symbol}\n                          {p.amount}\n                        </ProductPrice>\n                      )\n                  )}\n\n                  <NoStyleDiv>\n                    {item.attributes.map((attr: any) => (\n                      <NoStyleDiv key={attr.id}>\n                        <Attribute>{attr.name}:</Attribute>\n                        <AttributesDiv>\n                          {attr.type === \"swatch\" &&\n                            attr.items.map((attribute: any) => (\n                              <AttributeSwatch\n                                key={attribute.id}\n                                style={\n                                  item.selectedAttributes.find(\n                                    (x: any) =>\n                                      x.attr === attr.id &&\n                                      x.itm.id === attribute.id\n                                  )\n                                    ? {\n                                        backgroundColor: `${attribute.id}`,\n                                        border: \"2px solid red\",\n                                      }\n                                    : {\n                                        backgroundColor: `${attribute.id}`,\n                                      }\n                                }\n                              ></AttributeSwatch>\n                            ))}\n\n                          {attr.type !== \"swatch\" &&\n                            attr.items.map((attribute: any) => (\n                              <AttributeButton\n                                key={attribute.id}\n                                style={\n                                  item.selectedAttributes.find(\n                                    (x: any) =>\n                                      x.attr === attr.id &&\n                                      x.itm.id === attribute.id\n                                  ) && {\n                                    backgroundColor: \"black\",\n                                    color: \"white\",\n                                  }\n                                }\n                              >\n                                {attribute.value}\n                              </AttributeButton>\n                            ))}\n                        </AttributesDiv>\n                      </NoStyleDiv>\n                    ))}\n                  </NoStyleDiv>\n                </AttributesContainer>\n\n                <CartSplit>\n                  <NoStyleDiv>\n                    <ChangeItemQuantity\n                      onClick={() => this.increaseCartItemQuantity(item)}\n                    >\n                      <span style={{ fontSize: \"25px\" }}>+</span>\n                    </ChangeItemQuantity>\n                    <h4 style={{ textAlign: \"center\" }}>{item.cartQuantity}</h4>\n                    <ChangeItemQuantity\n                      onClick={() => this.decreaseCartItemQuantity(item)}\n                    >\n                      <span style={{ fontSize: \"25px\" }}>-</span>\n                    </ChangeItemQuantity>\n                  </NoStyleDiv>\n                  <RelativePosition>\n                    <img\n                      src={item.gallery[item.imageIndex]}\n                      width={200}\n                      height={150}\n                      alt=\"itemImg\"\n                    />\n\n                    {item.gallery?.length > 1 && (\n                      <GalleryDiv>\n                        <span\n                          style={{ backgroundColor: \"black\", color: \"white\" }}\n                          onClick={() => this.props.changeImageDown(item)}\n                        />\n                        <span\n                          style={{ backgroundColor: \"black\", color: \"white\" }}\n                          onClick={() => this.props.changeImageUp(item)}\n                        />\n                      </GalleryDiv>\n                    )}\n                  </RelativePosition>\n                </CartSplit>\n              </CartRow>\n              {/* </AttributesContainer> */}\n              <hr />\n            </NoStyleDiv>\n          ))\n        ) : (\n          <NoStyleDiv>No Items in Cart</NoStyleDiv>\n        )}\n        {this.props.cart?.length > 0 && (\n          <OrderDiv\n            style={{\n              display: \"grid\",\n              marginTop: \"30px\",\n            }}\n          >\n            <Span>\n              Tax 21%: <Bold>{this.props.currency}15</Bold>\n            </Span>\n            <Span>\n              Qty: <Bold>{this.props.totalQuantity}</Bold>\n            </Span>\n            <NoStyleDiv>\n              <Span>\n                Total:{\" \"}\n                <b>\n                  {this.props.currency}\n                  {this.props.totalAmount}\n                </b>\n              </Span>\n            </NoStyleDiv>\n            <OrderButton>Order</OrderButton>\n          </OrderDiv>\n        )}\n      </CartContainer>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: AppDispatch) {\n  return {\n    decreaseCart: (product: any) => dispatch(decreaseCart(product)),\n    addToCart: (product: any) => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n    changeImageUp: (item: any) => dispatch(changeImageIndexUp(item)),\n\n    changeImageDown: (item: any) => dispatch(changeImageIndexDown(item)),\n  };\n}\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    cart: state.cart.cartItems,\n    totalQuantity: state.cart.cartTotalQuantity,\n    totalAmount: state.cart.cartTotalAmount,\n    currency: state.selection[\"selectedCurrency\"],\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}