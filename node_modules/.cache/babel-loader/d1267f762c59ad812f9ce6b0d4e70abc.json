{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart, decreaseCart, getTotals } from \"../../redux/cartSlice\";\nimport { Attribute, AttributeButton, CartContainer } from \"../../styles/cart\";\nimport { FaLessThan, FaGreaterThan } from \"react-icons/fa\";\nimport { changeImageIndexUp, changeImageIndexDown } from \"../..//redux/cartSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cartItems: this.props.cart,\n      attribute: \"\"\n    };\n  }\n\n  decreaseCartItemQuantity(item) {\n    this.props.decreaseCart(item);\n    this.props.getTotals();\n  }\n\n  increaseCartItemQuantity(product) {\n    this.props.addToCart({\n      product\n    });\n    this.props.getTotals();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.cart !== state.cartItems) {\n      return {\n        cartItems: props.cart\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    var _this$state$cartItems, _this$props$cart;\n\n    return /*#__PURE__*/_jsxDEV(CartContainer, {\n      style: {\n        width: \"90%\",\n        margin: \"auto\",\n        backgroundColor: \"#fff\",\n        padding: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), ((_this$state$cartItems = this.state.cartItems) === null || _this$state$cartItems === void 0 ? void 0 : _this$state$cartItems.length) > 0 ? this.state.cartItems.map(item => {\n        var _item$prices, _item$gallery;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), (_item$prices = item.prices) === null || _item$prices === void 0 ? void 0 : _item$prices.map(p => p.currency.label === this.props.currency && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [p.currency.symbol, p.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this)\n            }, p.currency.label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 23\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.attributes.map(attr => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Attribute, {\n                  children: [attr.name, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    gap: \"10px\"\n                  },\n                  children: [attr.type === \"swatch\" && attr.items.map(attribute => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                    style: item.selectedAttributes.find(x => x.attr === attr.id && x.itm.id === attribute.id) ? {\n                      backgroundColor: `${attribute.id}`,\n                      height: \"20px\",\n                      width: \"20px\",\n                      border: \"1px solid red\",\n                      cursor: \"pointer\"\n                    } : {\n                      backgroundColor: `${attribute.id}`,\n                      height: \"20px\",\n                      width: \"20px\",\n                      border: \"1px solid black\",\n                      cursor: \"pointer\"\n                    }\n                  }, attribute.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 29\n                  }, this)), attr.type !== \"swatch\" && attr.items.map(attribute => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                    style: item.selectedAttributes.find(x => x.attr === attr.id && x.itm.id === attribute.id) && {\n                      backgroundColor: \"black\",\n                      color: \"white\"\n                    },\n                    children: attribute.value\n                  }, attribute.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this)]\n              }, attr.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              gap: \"10px\",\n              lineHeight: \"60px\",\n              marginTop: \"15px\",\n              maxHeight: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.increaseCartItemQuantity(item),\n                style: {\n                  width: \"30px\",\n                  height: \"30px\",\n                  backgroundColor: \"#fff\",\n                  border: \"1px solid black\",\n                  cursor: \"pointer\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"25px\"\n                  },\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: item.cartQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  width: \"30px\",\n                  height: \"30px\",\n                  backgroundColor: \"#fff\",\n                  border: \"1px solid black\",\n                  cursor: \"pointer\"\n                },\n                onClick: () => this.decreaseCartItemQuantity(item),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"25px\"\n                  },\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: \"#fff\",\n                position: \"relative\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.gallery[item.imageIndex],\n                width: 200,\n                height: 205,\n                alt: \"itemImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), ((_item$gallery = item.gallery) === null || _item$gallery === void 0 ? void 0 : _item$gallery.length) > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  gap: \"4px\",\n                  position: \"absolute\",\n                  bottom: \"15%\",\n                  right: \"6%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(FaLessThan, {\n                  style: {\n                    backgroundColor: \"black\",\n                    color: \"white\"\n                  },\n                  onClick: () => this.props.changeImageDown(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(FaGreaterThan, {\n                  style: {\n                    backgroundColor: \"black\",\n                    color: \"white\"\n                  },\n                  onClick: () => this.props.changeImageUp(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Items in Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), ((_this$props$cart = this.props.cart) === null || _this$props$cart === void 0 ? void 0 : _this$props$cart.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          marginTop: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Tax 21%: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Qty: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: this.props.totalQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: this.props.totalAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"132px\",\n            height: \"30px\",\n            backgroundColor: \"green\",\n            color: \"white\",\n            border: \"none\"\n          },\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    decreaseCart: product => dispatch(decreaseCart(product)),\n    addToCart: product => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n    changeImageUp: item => dispatch(changeImageIndexUp(item)),\n    changeImageDown: item => dispatch(changeImageIndexDown(item))\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart.cartItems,\n    totalQuantity: state.cart.cartTotalQuantity,\n    totalAmount: state.cart.cartTotalAmount,\n    currency: state.selection[\"selectedCurrency\"]\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx"],"names":["React","connect","addToCart","decreaseCart","getTotals","Attribute","AttributeButton","CartContainer","FaLessThan","FaGreaterThan","changeImageIndexUp","changeImageIndexDown","Cart","Component","constructor","props","state","cartItems","cart","attribute","decreaseCartItemQuantity","item","increaseCartItemQuantity","product","getDerivedStateFromProps","render","width","margin","backgroundColor","padding","length","map","display","justifyContent","marginBottom","name","brand","prices","p","currency","label","symbol","amount","attributes","attr","gap","type","items","selectedAttributes","find","x","id","itm","height","border","cursor","color","value","lineHeight","marginTop","maxHeight","fontSize","textAlign","cartQuantity","position","gallery","imageIndex","bottom","right","changeImageDown","changeImageUp","totalQuantity","totalAmount","mapDispatchToProps","dispatch","mapStateToProps","cartTotalQuantity","cartTotalAmount","selection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { addToCart, decreaseCart, getTotals } from \"../../redux/cartSlice\";\nimport { Attribute, AttributeButton, CartContainer } from \"../../styles/cart\";\nimport { CartTypes, ItemProps } from \"../../types\";\nimport { FaLessThan, FaGreaterThan } from \"react-icons/fa\";\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport {\n  changeImageIndexUp,\n  changeImageIndexDown,\n} from \"../..//redux/cartSlice\";\n\nclass Cart extends React.Component<\n  {\n    cart: [];\n    decreaseCart: any;\n    addToCart: any;\n    totalQuantity: number;\n    totalAmount: number;\n    getTotals: any;\n    currency: string;\n    changeImageUp: any;\n    changeImageDown: any;\n  },\n  CartTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      cartItems: this.props.cart,\n      attribute: \"\",\n    };\n  }\n\n  decreaseCartItemQuantity(item: any) {\n    this.props.decreaseCart(item);\n    this.props.getTotals();\n  }\n\n  increaseCartItemQuantity(product: any) {\n    this.props.addToCart({ product });\n    this.props.getTotals();\n  }\n\n  static getDerivedStateFromProps(props: any, state: any) {\n    if (props.cart !== state.cartItems) {\n      return {\n        cartItems: props.cart,\n      };\n    }\n    return null;\n  }\n  render() {\n    return (\n      <CartContainer\n        style={{\n          width: \"90%\",\n          margin: \"auto\",\n          backgroundColor: \"#fff\",\n          padding: \"15px\",\n        }}\n      >\n        <h3>CART</h3>\n        <br />\n        <hr />\n        {this.state.cartItems?.length > 0 ? (\n          this.state.cartItems.map((item: ItemProps) => (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                marginBottom: \"15px\",\n              }}\n            >\n              <div>\n                <h2>\n                  <b>{item.name}</b>\n                </h2>\n                <p>{item.brand}</p>\n                {item.prices?.map(\n                  (p) =>\n                    p.currency.label === this.props.currency && (\n                      <p key={p.currency.label}>\n                        <b>\n                          {p.currency.symbol}\n                          {p.amount}\n                        </b>\n                      </p>\n                    )\n                )}\n\n                <div>\n                  {item.attributes.map((attr: any) => (\n                    <div key={attr.id}>\n                      <Attribute>{attr.name}:</Attribute>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          gap: \"10px\",\n                        }}\n                      >\n                        {attr.type === \"swatch\" &&\n                          attr.items.map((attribute: any) => (\n                            <AttributeButton\n                              key={attribute.id}\n                              style={\n                                item.selectedAttributes.find(\n                                  (x: any) =>\n                                    x.attr === attr.id &&\n                                    x.itm.id === attribute.id\n                                )\n                                  ? {\n                                      backgroundColor: `${attribute.id}`,\n                                      height: \"20px\",\n                                      width: \"20px\",\n                                      border: \"1px solid red\",\n                                      cursor: \"pointer\",\n                                    }\n                                  : {\n                                      backgroundColor: `${attribute.id}`,\n                                      height: \"20px\",\n                                      width: \"20px\",\n                                      border: \"1px solid black\",\n                                      cursor: \"pointer\",\n                                    }\n                              }\n                            ></AttributeButton>\n                          ))}\n\n                        {attr.type !== \"swatch\" &&\n                          attr.items.map((attribute: any) => (\n                            <AttributeButton\n                              key={attribute.id}\n                              style={\n                                item.selectedAttributes.find(\n                                  (x: any) =>\n                                    x.attr === attr.id &&\n                                    x.itm.id === attribute.id\n                                ) && {\n                                  backgroundColor: \"black\",\n                                  color: \"white\",\n                                }\n                              }\n                            >\n                              {attribute.value}\n                            </AttributeButton>\n                          ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  lineHeight: \"60px\",\n                  marginTop: \"15px\",\n                  maxHeight: \"100%\",\n                }}\n              >\n                <div>\n                  <button\n                    onClick={() => this.increaseCartItemQuantity(item)}\n                    style={{\n                      width: \"30px\",\n                      height: \"30px\",\n                      backgroundColor: \"#fff\",\n                      border: \"1px solid black\",\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    <span style={{ fontSize: \"25px\" }}>+</span>\n                  </button>\n                  <h4 style={{ textAlign: \"center\" }}>{item.cartQuantity}</h4>\n                  <button\n                    style={{\n                      width: \"30px\",\n                      height: \"30px\",\n                      backgroundColor: \"#fff\",\n                      border: \"1px solid black\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => this.decreaseCartItemQuantity(item)}\n                  >\n                    <span style={{ fontSize: \"25px\" }}>-</span>\n                  </button>\n                </div>\n                <div\n                  style={{\n                    backgroundColor: \"#fff\",\n                    position: \"relative\",\n                  }}\n                >\n                  <img\n                    src={item.gallery[item.imageIndex]}\n                    width={200}\n                    height={205}\n                    alt=\"itemImg\"\n                  />\n\n                  {item.gallery?.length > 1 && (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        gap: \"4px\",\n                        position: \"absolute\",\n                        bottom: \"15%\",\n                        right: \"6%\",\n                      }}\n                    >\n                      <FaLessThan\n                        style={{ backgroundColor: \"black\", color: \"white\" }}\n                        onClick={() => this.props.changeImageDown(item)}\n                      />\n                      <FaGreaterThan\n                        style={{ backgroundColor: \"black\", color: \"white\" }}\n                        onClick={() => this.props.changeImageUp(item)}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n              <hr />\n            </div>\n          ))\n        ) : (\n          <div>No Items in Cart</div>\n        )}\n        {this.props.cart?.length > 0 && (\n          <div\n            style={{\n              display: \"grid\",\n              marginTop: \"30px\",\n            }}\n          >\n            <span>\n              Tax 21%: <b>15</b>\n            </span>\n            <span>\n              Qty: <b>{this.props.totalQuantity}</b>\n            </span>\n            <div>\n              <span>\n                Total: <b>{this.props.totalAmount}</b>\n              </span>\n            </div>\n            <button\n              style={{\n                width: \"132px\",\n                height: \"30px\",\n                backgroundColor: \"green\",\n                color: \"white\",\n                border: \"none\",\n              }}\n            >\n              Order\n            </button>\n          </div>\n        )}\n      </CartContainer>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: AppDispatch) {\n  return {\n    decreaseCart: (product: any) => dispatch(decreaseCart(product)),\n    addToCart: (product: any) => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n    changeImageUp: (item: any) => dispatch(changeImageIndexUp(item)),\n\n    changeImageDown: (item: any) => dispatch(changeImageIndexDown(item)),\n  };\n}\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    cart: state.cart.cartItems,\n    totalQuantity: state.cart.cartTotalQuantity,\n    totalAmount: state.cart.cartTotalAmount,\n    currency: state.selection[\"selectedCurrency\"],\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}