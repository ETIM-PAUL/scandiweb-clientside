{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx\";\nimport React from \"react\";\nimport { FirstContainer, Heading, CardsContainer, Card, WaterMark, CardTitle, Cart, Banner } from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { BsCart } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { Get_ProductList } from \"../../queries\";\nimport { addToCart, getTotals } from \"../../redux/cartSlice\"; // import { mapDispatchToProps } from \"../../redux/redux-functions\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductsListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      category: this.props.category,\n      currency: this.props.currency,\n      attribute: \"\"\n    };\n  }\n\n  addProductToCart(product, x) {\n    this.props.addToCart(product);\n    this.props.getTotals();\n    x.forEach(element => {\n      this.setState({\n        attribute: element.items[0]\n      });\n      console.log(this.state.attribute);\n    });\n  }\n\n  componentDidMount() {\n    let category = this.props.category;\n\n    try {\n      Get_ProductList(category).then(result => {\n        var _result$data$category, _result$data$category2;\n\n        this.setState({\n          products: (_result$data$category = result.data.category) === null || _result$data$category === void 0 ? void 0 : _result$data$category.products,\n          category: (_result$data$category2 = result.data.category) === null || _result$data$category2 === void 0 ? void 0 : _result$data$category2.name\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    let currency = this.props.currency;\n    let category = this.props.category;\n\n    if (prevState.category !== category || prevState.currency !== currency) {\n      Get_ProductList(category).then(result => {\n        this.setState({\n          products: result.data.category.products\n        });\n      });\n    }\n  }\n\n  render() {\n    var _this$state$products;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FirstContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: [this.props.category, \" categories\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {\n          children: ((_this$state$products = this.state.products) === null || _this$state$products === void 0 ? void 0 : _this$state$products.length) >= 0 && this.state.products.map(x => /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Banner, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${x.id}`,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: x.gallery[0],\n                  height: 250,\n                  width: 305,\n                  alt: \"Product Img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this), x.inStock === false && /*#__PURE__*/_jsxDEV(WaterMark, {\n                  children: \"Out of stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Cart, {\n                children: /*#__PURE__*/_jsxDEV(BsCart, {\n                  onClick: () => this.addProductToCart(x, x.attributes)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px\"\n              },\n              children: [x.prices.map(p => p.currency.label === this.props.currency && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [p.currency.symbol, p.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 27\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, x.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport function mapStateToProps(state) {\n  return {\n    category: state.selection[\"selectedCategory\"],\n    currency: state.selection[\"selectedCurrency\"]\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToCart: product => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsListing);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx"],"names":["React","FirstContainer","Heading","CardsContainer","Card","WaterMark","CardTitle","Cart","Banner","connect","BsCart","Link","Get_ProductList","addToCart","getTotals","ProductsListing","Component","constructor","props","state","products","category","currency","attribute","addProductToCart","product","x","forEach","element","setState","items","console","log","componentDidMount","then","result","data","name","error","componentDidUpdate","prevState","render","length","map","id","gallery","inStock","attributes","padding","prices","p","label","symbol","amount","mapStateToProps","selection","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { gql } from \"@apollo/client\";\nimport {\n  FirstContainer,\n  Heading,\n  CardsContainer,\n  Card,\n  WaterMark,\n  CardTitle,\n  Cart,\n  Banner,\n} from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { CardPropsTypes } from \"../../types\";\nimport { BsCart } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { Get_ProductList } from \"../../queries\";\nimport { addToCart, getTotals } from \"../../redux/cartSlice\";\n// import { mapDispatchToProps } from \"../../redux/redux-functions\";\n\nclass ProductsListing extends React.Component<\n  { category: string; currency: string; addToCart: any; getTotals: any },\n  { products: []; category: string; currency: string; attribute: any }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      category: this.props.category,\n      currency: this.props.currency,\n      attribute: \"\",\n    };\n  }\n\n  addProductToCart(product: {}, x: any) {\n    this.props.addToCart(product);\n    this.props.getTotals();\n    x.forEach((element: any) => {\n      this.setState({ attribute: element.items[0] });\n      console.log(this.state.attribute);\n    });\n  }\n  componentDidMount() {\n    let category = this.props.category;\n    try {\n      Get_ProductList(category).then((result) => {\n        this.setState({\n          products: result.data.category?.products,\n          category: result.data.category?.name,\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevState: any) {\n    let currency = this.props.currency;\n    let category = this.props.category;\n    if (prevState.category !== category || prevState.currency !== currency) {\n      Get_ProductList(category).then((result) => {\n        this.setState({\n          products: result.data.category.products,\n        });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <FirstContainer>\n          <Heading>{this.props.category} categories</Heading>\n          <CardsContainer>\n            {this.state.products?.length >= 0 &&\n              this.state.products.map((x: CardPropsTypes) => (\n                <Card key={x.name}>\n                  <Banner>\n                    <Link to={`/product/${x.id}`}>\n                      <img\n                        src={x.gallery[0]}\n                        height={250}\n                        width={305}\n                        alt=\"Product Img\"\n                      />\n                      {x.inStock === false && (\n                        <WaterMark>Out of stock</WaterMark>\n                      )}\n                    </Link>\n                    <Cart>\n                      <BsCart\n                        onClick={() => this.addProductToCart(x, x.attributes)}\n                      />\n                    </Cart>\n                  </Banner>\n\n                  <CardTitle>{x.name}</CardTitle>\n                  <div style={{ padding: \"5px\" }}>\n                    {x.prices.map(\n                      (p: any) =>\n                        p.currency.label === this.props.currency && (\n                          <p>\n                            {p.currency.symbol}\n                            {p.amount}\n                          </p>\n                        )\n                    )}\n                    <br />\n                  </div>\n                </Card>\n              ))}\n          </CardsContainer>\n        </FirstContainer>\n      </>\n    );\n  }\n}\n\nexport function mapStateToProps(state: any) {\n  return {\n    category: state.selection[\"selectedCategory\"],\n    currency: state.selection[\"selectedCurrency\"],\n  };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    addToCart: (product: any) => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsListing);\n"]},"metadata":{},"sourceType":"module"}