{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\n};\nconst imageSlice = createSlice({\n  name: \"imageSlide\",\n  initialState,\n  reducers: {\n    changeImageIndex(state, _ref) {\n      let {\n        payload,\n        type\n      } = _ref;\n      console.log(payload.item);\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.item.id); // for (let index = 0; index < array.length; index++) {\n      //   const element = array[index];\n      // }\n\n      if (existingIndex >= 0) {\n        state.cartItems[existingIndex] = { ...state.cartItems[existingIndex],\n          imageIndex: state.cartItems[existingIndex].imageIndex + 1\n        };\n      }\n    }\n\n  }\n});\nexport const {\n  changeImageIndex\n} = imageSlice.actions;\nexport default imageSlice.reducer;","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/redux/imageSlice.ts"],"names":["createSlice","initialState","cartItems","localStorage","getItem","JSON","parse","imageSlice","name","reducers","changeImageIndex","state","payload","type","console","log","item","existingIndex","findIndex","id","imageIndex","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP;AAHe,CAArB;AAMA,MAAMG,UAAU,GAAGP,WAAW,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,YADuB;AAE7BP,EAAAA,YAF6B;AAG7BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBAAgB,CAACC,KAAD,QAAwB;AAAA,UAAhB;AAACC,QAAAA,OAAD;AAASC,QAAAA;AAAT,OAAgB;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,IAApB;AACA,YAAMC,aAAa,GAAGN,KAAK,CAACT,SAAN,CAAgBgB,SAAhB,CACnBF,IAAD,IAAcA,IAAI,CAACG,EAAL,KAAYP,OAAO,CAACI,IAAR,CAAaG,EADnB,CAAtB,CAFsC,CAMtC;AACA;AAEA;;AACA,UAAIF,aAAa,IAAI,CAArB,EAAwB;AACtBN,QAAAA,KAAK,CAACT,SAAN,CAAgBe,aAAhB,IAAiC,EAC/B,GAAGN,KAAK,CAACT,SAAN,CAAgBe,aAAhB,CAD4B;AAE/BG,UAAAA,UAAU,EAAET,KAAK,CAACT,SAAN,CAAgBe,aAAhB,EAA+BG,UAA/B,GAA4C;AAFzB,SAAjC;AAID;AACF;;AAjBO;AAHmB,CAAD,CAA9B;AAyBA,OAAO,MAAM;AAAEV,EAAAA;AAAF,IACXH,UAAU,CAACc,OADN;AAGP,eAAed,UAAU,CAACe,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\")\n    ? JSON.parse(localStorage.getItem(\"cartItems\")!)\n    : [],\n};\n\nconst imageSlice = createSlice({\n  name: \"imageSlide\",\n  initialState,\n  reducers: {\n    changeImageIndex(state, {payload,type}) {\n      console.log(payload.item)\n      const existingIndex = state.cartItems.findIndex(\n        (item:any) => item.id === payload.item.id\n      );\n      \n      // for (let index = 0; index < array.length; index++) {\n      //   const element = array[index];\n        \n      // }\n      if (existingIndex >= 0) {\n        state.cartItems[existingIndex] = {\n          ...state.cartItems[existingIndex],\n          imageIndex: state.cartItems[existingIndex].imageIndex + 1,\n        };\n      }\n    },\n  \n  },\n});\n\nexport const { changeImageIndex } =\n  imageSlice.actions;\n\nexport default imageSlice.reducer;"]},"metadata":{},"sourceType":"module"}