{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart, decreaseCart, getTotals } from \"../../redux/cartSlice\";\nimport { Attribute, AttributeButton, CartContainer } from \"../../styles/cart\";\nimport { FaLessThan, FaGreaterThan } from \"react-icons/fa\";\nimport { changeImageIndexUp, changeImageIndexDown } from \"../..//redux/cartSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cartItems: this.props.cart,\n      attribute: \"\"\n    };\n  }\n\n  decreaseCartItemQuantity(item) {\n    this.props.decreaseCart(item);\n    this.props.getTotals();\n  }\n\n  increaseCartItemQuantity(product) {\n    this.props.addToCart({\n      product\n    });\n    this.props.getTotals();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.cart !== state.cartItems) {\n      return {\n        cartItems: props.cart\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    var _this$state$cartItems, _this$props$cart;\n\n    return /*#__PURE__*/_jsxDEV(CartContainer, {\n      style: {\n        width: \"90%\",\n        margin: \"auto\",\n        backgroundColor: \"#fff\",\n        padding: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), ((_this$state$cartItems = this.state.cartItems) === null || _this$state$cartItems === void 0 ? void 0 : _this$state$cartItems.length) > 0 ? this.state.cartItems.map(item => {\n        var _item$prices, _item$gallery;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {},\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), (_item$prices = item.prices) === null || _item$prices === void 0 ? void 0 : _item$prices.map(p => p.currency.label === this.props.currency && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [p.currency.symbol, p.amount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 27\n                }, this)\n              }, p.currency.label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 25\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.attributes.map(attr => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Attribute, {\n                    children: [attr.name, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      gap: \"10px\"\n                    },\n                    children: [attr.type === \"swatch\" && attr.items.map(attribute => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                      style: item.selectedAttributes.find(x => x.attr === attr.id && x.itm.id === attribute.id) ? {\n                        backgroundColor: `${attribute.id}`,\n                        height: \"20px\",\n                        width: \"20px\",\n                        border: \"1px solid red\",\n                        cursor: \"pointer\"\n                      } : {\n                        backgroundColor: `${attribute.id}`,\n                        height: \"20px\",\n                        width: \"20px\",\n                        border: \"1px solid black\",\n                        cursor: \"pointer\"\n                      }\n                    }, attribute.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 31\n                    }, this)), attr.type !== \"swatch\" && attr.items.map(attribute => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                      style: item.selectedAttributes.find(x => x.attr === attr.id && x.itm.id === attribute.id) && {\n                        backgroundColor: \"black\",\n                        color: \"white\"\n                      },\n                      children: attribute.value\n                    }, attribute.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 25\n                  }, this)]\n                }, attr.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: \"10px\",\n                lineHeight: \"60px\",\n                marginTop: \"15px\",\n                maxHeight: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.increaseCartItemQuantity(item),\n                  style: {\n                    width: \"30px\",\n                    height: \"30px\",\n                    backgroundColor: \"#fff\",\n                    border: \"1px solid black\",\n                    cursor: \"pointer\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"25px\"\n                    },\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: item.cartQuantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    width: \"30px\",\n                    height: \"30px\",\n                    backgroundColor: \"#fff\",\n                    border: \"1px solid black\",\n                    cursor: \"pointer\"\n                  },\n                  onClick: () => this.decreaseCartItemQuantity(item),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"25px\"\n                    },\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"#fff\",\n                  position: \"relative\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.gallery[item.imageIndex],\n                  width: 200,\n                  height: 205,\n                  alt: \"itemImg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), ((_item$gallery = item.gallery) === null || _item$gallery === void 0 ? void 0 : _item$gallery.length) > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    gap: \"4px\",\n                    position: \"absolute\",\n                    bottom: \"15%\",\n                    right: \"6%\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FaLessThan, {\n                    style: {\n                      backgroundColor: \"black\",\n                      color: \"white\"\n                    },\n                    onClick: () => this.props.changeImageDown(item)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(FaGreaterThan, {\n                    style: {\n                      backgroundColor: \"black\",\n                      color: \"white\"\n                    },\n                    onClick: () => this.props.changeImageUp(item)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Items in Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), ((_this$props$cart = this.props.cart) === null || _this$props$cart === void 0 ? void 0 : _this$props$cart.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          marginTop: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Tax 21%: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Qty: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: this.props.totalQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: this.props.totalAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"132px\",\n            height: \"30px\",\n            backgroundColor: \"green\",\n            color: \"white\",\n            border: \"none\"\n          },\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    decreaseCart: product => dispatch(decreaseCart(product)),\n    addToCart: product => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n    changeImageUp: item => dispatch(changeImageIndexUp(item)),\n    changeImageDown: item => dispatch(changeImageIndexDown(item))\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart.cartItems,\n    totalQuantity: state.cart.cartTotalQuantity,\n    totalAmount: state.cart.cartTotalAmount,\n    currency: state.selection[\"selectedCurrency\"]\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx"],"names":["React","connect","addToCart","decreaseCart","getTotals","Attribute","AttributeButton","CartContainer","FaLessThan","FaGreaterThan","changeImageIndexUp","changeImageIndexDown","Cart","Component","constructor","props","state","cartItems","cart","attribute","decreaseCartItemQuantity","item","increaseCartItemQuantity","product","getDerivedStateFromProps","render","width","margin","backgroundColor","padding","length","map","name","brand","prices","p","currency","label","symbol","amount","attributes","attr","display","gap","type","items","selectedAttributes","find","x","id","itm","height","border","cursor","color","value","lineHeight","marginTop","maxHeight","fontSize","textAlign","cartQuantity","position","gallery","imageIndex","bottom","right","changeImageDown","changeImageUp","totalQuantity","totalAmount","mapDispatchToProps","dispatch","mapStateToProps","cartTotalQuantity","cartTotalAmount","selection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { addToCart, decreaseCart, getTotals } from \"../../redux/cartSlice\";\nimport { Attribute, AttributeButton, CartContainer } from \"../../styles/cart\";\nimport { CartTypes, ItemProps } from \"../../types\";\nimport { FaLessThan, FaGreaterThan } from \"react-icons/fa\";\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport {\n  changeImageIndexUp,\n  changeImageIndexDown,\n} from \"../..//redux/cartSlice\";\n\nclass Cart extends React.Component<\n  {\n    cart: [];\n    decreaseCart: any;\n    addToCart: any;\n    totalQuantity: number;\n    totalAmount: number;\n    getTotals: any;\n    currency: string;\n    changeImageUp: any;\n    changeImageDown: any;\n  },\n  CartTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      cartItems: this.props.cart,\n      attribute: \"\",\n    };\n  }\n\n  decreaseCartItemQuantity(item: any) {\n    this.props.decreaseCart(item);\n    this.props.getTotals();\n  }\n\n  increaseCartItemQuantity(product: any) {\n    this.props.addToCart({ product });\n    this.props.getTotals();\n  }\n\n  static getDerivedStateFromProps(props: any, state: any) {\n    if (props.cart !== state.cartItems) {\n      return {\n        cartItems: props.cart,\n      };\n    }\n    return null;\n  }\n  render() {\n    return (\n      <CartContainer\n        style={{\n          width: \"90%\",\n          margin: \"auto\",\n          backgroundColor: \"#fff\",\n          padding: \"15px\",\n        }}\n      >\n        <h3>CART</h3>\n        <br />\n        <hr />\n        {this.state.cartItems?.length > 0 ? (\n          this.state.cartItems.map((item: ItemProps) => (\n            <div key={item.id}>\n              <div style={{}}>\n                <div>\n                  <h2>\n                    <b>{item.name}</b>\n                  </h2>\n                  <p>{item.brand}</p>\n                  {item.prices?.map(\n                    (p) =>\n                      p.currency.label === this.props.currency && (\n                        <p key={p.currency.label}>\n                          <b>\n                            {p.currency.symbol}\n                            {p.amount}\n                          </b>\n                        </p>\n                      )\n                  )}\n\n                  <div>\n                    {item.attributes.map((attr: any) => (\n                      <div key={attr.id}>\n                        <Attribute>{attr.name}:</Attribute>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            gap: \"10px\",\n                          }}\n                        >\n                          {attr.type === \"swatch\" &&\n                            attr.items.map((attribute: any) => (\n                              <AttributeButton\n                                key={attribute.id}\n                                style={\n                                  item.selectedAttributes.find(\n                                    (x: any) =>\n                                      x.attr === attr.id &&\n                                      x.itm.id === attribute.id\n                                  )\n                                    ? {\n                                        backgroundColor: `${attribute.id}`,\n                                        height: \"20px\",\n                                        width: \"20px\",\n                                        border: \"1px solid red\",\n                                        cursor: \"pointer\",\n                                      }\n                                    : {\n                                        backgroundColor: `${attribute.id}`,\n                                        height: \"20px\",\n                                        width: \"20px\",\n                                        border: \"1px solid black\",\n                                        cursor: \"pointer\",\n                                      }\n                                }\n                              ></AttributeButton>\n                            ))}\n\n                          {attr.type !== \"swatch\" &&\n                            attr.items.map((attribute: any) => (\n                              <AttributeButton\n                                key={attribute.id}\n                                style={\n                                  item.selectedAttributes.find(\n                                    (x: any) =>\n                                      x.attr === attr.id &&\n                                      x.itm.id === attribute.id\n                                  ) && {\n                                    backgroundColor: \"black\",\n                                    color: \"white\",\n                                  }\n                                }\n                              >\n                                {attribute.value}\n                              </AttributeButton>\n                            ))}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"10px\",\n                    lineHeight: \"60px\",\n                    marginTop: \"15px\",\n                    maxHeight: \"100%\",\n                  }}\n                >\n                  <div>\n                    <button\n                      onClick={() => this.increaseCartItemQuantity(item)}\n                      style={{\n                        width: \"30px\",\n                        height: \"30px\",\n                        backgroundColor: \"#fff\",\n                        border: \"1px solid black\",\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      <span style={{ fontSize: \"25px\" }}>+</span>\n                    </button>\n                    <h4 style={{ textAlign: \"center\" }}>{item.cartQuantity}</h4>\n                    <button\n                      style={{\n                        width: \"30px\",\n                        height: \"30px\",\n                        backgroundColor: \"#fff\",\n                        border: \"1px solid black\",\n                        cursor: \"pointer\",\n                      }}\n                      onClick={() => this.decreaseCartItemQuantity(item)}\n                    >\n                      <span style={{ fontSize: \"25px\" }}>-</span>\n                    </button>\n                  </div>\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <img\n                      src={item.gallery[item.imageIndex]}\n                      width={200}\n                      height={205}\n                      alt=\"itemImg\"\n                    />\n\n                    {item.gallery?.length > 1 && (\n                      <div\n                        style={{\n                          display: \"flex\",\n                          gap: \"4px\",\n                          position: \"absolute\",\n                          bottom: \"15%\",\n                          right: \"6%\",\n                        }}\n                      >\n                        <FaLessThan\n                          style={{ backgroundColor: \"black\", color: \"white\" }}\n                          onClick={() => this.props.changeImageDown(item)}\n                        />\n                        <FaGreaterThan\n                          style={{ backgroundColor: \"black\", color: \"white\" }}\n                          onClick={() => this.props.changeImageUp(item)}\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <hr />\n            </div>\n          ))\n        ) : (\n          <div>No Items in Cart</div>\n        )}\n        {this.props.cart?.length > 0 && (\n          <div\n            style={{\n              display: \"grid\",\n              marginTop: \"30px\",\n            }}\n          >\n            <span>\n              Tax 21%: <b>15</b>\n            </span>\n            <span>\n              Qty: <b>{this.props.totalQuantity}</b>\n            </span>\n            <div>\n              <span>\n                Total: <b>{this.props.totalAmount}</b>\n              </span>\n            </div>\n            <button\n              style={{\n                width: \"132px\",\n                height: \"30px\",\n                backgroundColor: \"green\",\n                color: \"white\",\n                border: \"none\",\n              }}\n            >\n              Order\n            </button>\n          </div>\n        )}\n      </CartContainer>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: AppDispatch) {\n  return {\n    decreaseCart: (product: any) => dispatch(decreaseCart(product)),\n    addToCart: (product: any) => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n    changeImageUp: (item: any) => dispatch(changeImageIndexUp(item)),\n\n    changeImageDown: (item: any) => dispatch(changeImageIndexDown(item)),\n  };\n}\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    cart: state.cart.cartItems,\n    totalQuantity: state.cart.cartTotalQuantity,\n    totalAmount: state.cart.cartTotalAmount,\n    currency: state.selection[\"selectedCurrency\"],\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}