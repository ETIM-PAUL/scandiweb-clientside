{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/CartOverlay/CartOverlay.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Attribute, AttributeButton, ViewBag, CartOverlayContainer, CartAttributes, CartOverlayImage, CartOverlaySplit, OverlaySide, Button, ItemQuantityChange, CartOverlayBanner, SecondButton, ButtonDiv, TotalDiv, TotalAndButton, AttributeSwatch, ItemsCart, CartDiv, AttributesBanner } from \"../../styles/cartOverlay\";\nimport greaterThan from \"../../img/greaterThan.svg\";\nimport lessThan from \"../../img/lessThan.svg\";\nimport { Link } from \"react-router-dom\";\nimport { Bold, ChangeImages, GalleryDiv, Heading2, NoStyleDiv, Paragraph } from \"../../styles/cart\";\nimport { ProductBrand, ProductName } from \"../../styles/cart\";\nimport \"../Product-Details/details.css\";\nimport { mapStateToProps, mapDispatchToProps, decreaseCartItemQuantity, increaseCartItemQuantity } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CartOverlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cartItems: this.props.cart,\n      attribute: \"\"\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.cart !== state.cartItems) {\n      return {\n        cartItems: props.cart\n      };\n    }\n  }\n\n  render() {\n    var _this$state$cartItems;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CartOverlayContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Bold, {\n          children: \"My Bag: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), \" \", this.props.totalQuantity, \" items\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CartDiv, {\n          children: ((_this$state$cartItems = this.state.cartItems) === null || _this$state$cartItems === void 0 ? void 0 : _this$state$cartItems.length) > 0 ? this.state.cartItems.map(item => {\n            var _item$prices, _item$gallery;\n\n            return /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n              children: [/*#__PURE__*/_jsxDEV(CartOverlayBanner, {\n                children: [/*#__PURE__*/_jsxDEV(ItemsCart, {\n                  children: [/*#__PURE__*/_jsxDEV(ProductBrand, {\n                    children: item.brand\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ProductName, {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 23\n                  }, this), (_item$prices = item.prices) === null || _item$prices === void 0 ? void 0 : _item$prices.map(p => p.currency.symbol === this.props.currency && /*#__PURE__*/_jsxDEV(Paragraph, {\n                    children: /*#__PURE__*/_jsxDEV(Bold, {\n                      children: [p.currency.symbol, p.amount]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 31\n                    }, this)\n                  }, p.currency.label, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 29\n                  }, this)), /*#__PURE__*/_jsxDEV(AttributesBanner, {\n                    children: item.attributes.map(attr => /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n                      children: [/*#__PURE__*/_jsxDEV(Attribute, {\n                        children: [attr.name, \":\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 92,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(CartAttributes, {\n                        children: [attr.type !== \"swatch\" && attr.items.map(attribute => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                          className: attribute.id === item.selectedAttributes[attr.name] ? \"selected\" : null,\n                          children: attribute.value\n                        }, attribute.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 35\n                        }, this)), attr.type === \"swatch\" && attr.items.map(attribute => /*#__PURE__*/_jsxDEV(AttributeSwatch, {\n                          color: `${attribute.id}`,\n                          className: attribute.id === item.selectedAttributes[attr.name] ? \"swatchSelected\" : null\n                        }, attribute.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 110,\n                          columnNumber: 35\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 29\n                      }, this)]\n                    }, attr.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(OverlaySide, {\n                  children: [/*#__PURE__*/_jsxDEV(ItemQuantityChange, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => increaseCartItemQuantity(item, item.selectedAttributes),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"+\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Heading2, {\n                      children: item.cartQuantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => decreaseCartItemQuantity(item, item.selectedAttributes),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"-\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CartOverlaySplit, {\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: item.gallery[item.imageIndex],\n                      width: 100,\n                      height: 127,\n                      alt: \"itemImg\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(CartOverlayImage, {\n                      children: ((_item$gallery = item.gallery) === null || _item$gallery === void 0 ? void 0 : _item$gallery.length) > 1 && /*#__PURE__*/_jsxDEV(GalleryDiv, {\n                        children: [/*#__PURE__*/_jsxDEV(ChangeImages, {\n                          src: lessThan,\n                          alt: \"changeImage\",\n                          onClick: () => this.props.changeImageDown(item, item.selectedAttributes)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 160,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(ChangeImages, {\n                          src: greaterThan,\n                          alt: \"changeImage\",\n                          onClick: () => this.props.changeImageUp(item, item.selectedAttributes)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n            children: \"No Items in Cart, Yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TotalAndButton, {\n          children: [/*#__PURE__*/_jsxDEV(TotalDiv, {\n            children: [/*#__PURE__*/_jsxDEV(Bold, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bold, {\n              children: [this.props.currency, this.props.totalAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonDiv, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/cart\",\n              children: /*#__PURE__*/_jsxDEV(ViewBag, {\n                onClick: this.props.display,\n                children: \"VIEW BAG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SecondButton, {\n              children: \"CHECK OUT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartOverlay);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/CartOverlay/CartOverlay.tsx"],"names":["React","connect","Attribute","AttributeButton","ViewBag","CartOverlayContainer","CartAttributes","CartOverlayImage","CartOverlaySplit","OverlaySide","Button","ItemQuantityChange","CartOverlayBanner","SecondButton","ButtonDiv","TotalDiv","TotalAndButton","AttributeSwatch","ItemsCart","CartDiv","AttributesBanner","greaterThan","lessThan","Link","Bold","ChangeImages","GalleryDiv","Heading2","NoStyleDiv","Paragraph","ProductBrand","ProductName","mapStateToProps","mapDispatchToProps","decreaseCartItemQuantity","increaseCartItemQuantity","CartOverlay","Component","constructor","props","state","cartItems","cart","attribute","getDerivedStateFromProps","render","totalQuantity","length","map","item","brand","name","prices","p","currency","symbol","amount","label","attributes","attr","type","items","id","selectedAttributes","value","cartQuantity","gallery","imageIndex","changeImageDown","changeImageUp","totalAmount","display"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Attribute,\n  AttributeButton,\n  ViewBag,\n  CartOverlayContainer,\n  CartAttributes,\n  CartOverlayImage,\n  CartOverlaySplit,\n  OverlaySide,\n  Button,\n  ItemQuantityChange,\n  CartOverlayBanner,\n  SecondButton,\n  ButtonDiv,\n  TotalDiv,\n  TotalAndButton,\n  AttributeSwatch,\n  ItemsCart,\n  CartDiv,\n  AttributesBanner,\n} from \"../../styles/cartOverlay\";\nimport { CartTypes, ItemProps } from \"../../types\";\nimport greaterThan from \"../../img/greaterThan.svg\";\nimport lessThan from \"../../img/lessThan.svg\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Bold,\n  ChangeImages,\n  GalleryDiv,\n  Heading2,\n  NoStyleDiv,\n  Paragraph,\n} from \"../../styles/cart\";\nimport { CartOverlayProps } from \"../../props\";\nimport { ProductBrand, ProductName } from \"../../styles/cart\";\nimport \"../Product-Details/details.css\";\nimport {\n  mapStateToProps,\n  mapDispatchToProps,\n  decreaseCartItemQuantity,\n  increaseCartItemQuantity,\n} from \"./utils\";\n\nclass CartOverlay extends React.Component<CartOverlayProps, CartTypes> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      cartItems: this.props.cart,\n      attribute: \"\",\n    };\n  }\n  static getDerivedStateFromProps(props: any, state: any) {\n    if (props.cart !== state.cartItems) {\n      return {\n        cartItems: props.cart,\n      };\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <CartOverlayContainer>\n          <Bold>My Bag: </Bold> {this.props.totalQuantity} items\n          <br />\n          <hr />\n          <CartDiv>\n            {this.state.cartItems?.length > 0 ? (\n              this.state.cartItems.map((item: ItemProps) => (\n                <NoStyleDiv key={item.id}>\n                  <CartOverlayBanner key={item.id}>\n                    <ItemsCart>\n                      <ProductBrand>{item.brand}</ProductBrand>\n                      <ProductName>{item.name}</ProductName>\n                      {item.prices?.map(\n                        (p) =>\n                          p.currency.symbol === this.props.currency && (\n                            <Paragraph key={p.currency.label}>\n                              <Bold>\n                                {p.currency.symbol}\n                                {p.amount}\n                              </Bold>\n                            </Paragraph>\n                          )\n                      )}\n\n                      <AttributesBanner>\n                        {item.attributes.map((attr: any) => (\n                          <NoStyleDiv key={attr.id}>\n                            <Attribute>{attr.name}:</Attribute>\n                            <CartAttributes>\n                              {attr.type !== \"swatch\" &&\n                                attr.items.map((attribute: any) => (\n                                  <AttributeButton\n                                    key={attribute.id}\n                                    className={\n                                      attribute.id ===\n                                      item.selectedAttributes[attr.name]\n                                        ? \"selected\"\n                                        : null\n                                    }\n                                  >\n                                    {attribute.value}\n                                  </AttributeButton>\n                                ))}\n                              {attr.type === \"swatch\" &&\n                                attr.items.map((attribute: any) => (\n                                  <AttributeSwatch\n                                    color={`${attribute.id}`}\n                                    key={attribute.id}\n                                    className={\n                                      attribute.id ===\n                                      item.selectedAttributes[attr.name]\n                                        ? \"swatchSelected\"\n                                        : null\n                                    }\n                                  ></AttributeSwatch>\n                                ))}\n                            </CartAttributes>\n                          </NoStyleDiv>\n                        ))}\n                      </AttributesBanner>\n                    </ItemsCart>\n                    <OverlaySide>\n                      <ItemQuantityChange>\n                        <Button\n                          onClick={() =>\n                            increaseCartItemQuantity(\n                              item,\n                              item.selectedAttributes\n                            )\n                          }\n                        >\n                          <span>+</span>\n                        </Button>\n                        <Heading2>{item.cartQuantity}</Heading2>\n                        <Button\n                          onClick={() =>\n                            decreaseCartItemQuantity(\n                              item,\n                              item.selectedAttributes\n                            )\n                          }\n                        >\n                          <span>-</span>\n                        </Button>\n                      </ItemQuantityChange>\n                      <CartOverlaySplit>\n                        <img\n                          src={item.gallery[item.imageIndex]}\n                          width={100}\n                          height={127}\n                          alt=\"itemImg\"\n                        />\n                        <CartOverlayImage>\n                          {item.gallery?.length > 1 && (\n                            <GalleryDiv>\n                              <ChangeImages\n                                src={lessThan}\n                                alt=\"changeImage\"\n                                onClick={() =>\n                                  this.props.changeImageDown(\n                                    item,\n                                    item.selectedAttributes\n                                  )\n                                }\n                              />\n                              <ChangeImages\n                                src={greaterThan}\n                                alt=\"changeImage\"\n                                onClick={() =>\n                                  this.props.changeImageUp(\n                                    item,\n                                    item.selectedAttributes\n                                  )\n                                }\n                              />\n                            </GalleryDiv>\n                          )}\n                        </CartOverlayImage>\n                      </CartOverlaySplit>\n                    </OverlaySide>\n                  </CartOverlayBanner>\n                  <hr />\n                </NoStyleDiv>\n              ))\n            ) : (\n              <NoStyleDiv>No Items in Cart, Yet.</NoStyleDiv>\n            )}\n          </CartDiv>\n          <TotalAndButton>\n            <TotalDiv>\n              <Bold>Total</Bold>\n              <Bold>\n                {this.props.currency}\n                {this.props.totalAmount}\n              </Bold>\n            </TotalDiv>\n            <ButtonDiv>\n              <Link to={\"/cart\"}>\n                <ViewBag onClick={this.props.display}>VIEW BAG</ViewBag>\n              </Link>\n              <SecondButton>CHECK OUT</SecondButton>\n            </ButtonDiv>\n          </TotalAndButton>\n        </CartOverlayContainer>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartOverlay);\n"]},"metadata":{},"sourceType":"module"}