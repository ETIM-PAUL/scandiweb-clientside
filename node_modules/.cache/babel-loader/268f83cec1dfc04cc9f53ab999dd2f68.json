{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DetailsContainer, ProductImages, ProductImage, ProductInfo, Attribute, AddButton, AttributeButton, ProductName, ProductBrand, ProductPrice, AttributeSwatch, OutOfStock, ProductParse, ImageHover } from \"../../styles/productDetails\";\nimport { useParams } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport { Get_Product } from \"../../queries\";\nimport { connect } from \"react-redux\";\nimport { addToCart, getTotals } from \"../../redux/cartSlice\";\nimport { initialProduct } from \"../../initialState\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport \"./details.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: { ...initialProduct\n      },\n      imagePreview: \"\",\n      attributes: {},\n      attributesLength: 0,\n      bgColor: \"white\",\n      color: \"black\"\n    };\n  }\n\n  addProductToCart(product) {\n    let attribute = this.state.attributes;\n    console.log(attribute);\n    this.props.addToCart({\n      product,\n      attribute\n    });\n    this.props.getTotals();\n    this.predefinedAttributes();\n  }\n\n  setAttributes(itm, attr) {\n    let attribute = this.state.attributes;\n    let a = {\n      [attr]: itm.id\n    };\n    let ab = Object.assign(attribute, a);\n    this.setState({\n      attributes: ab\n    });\n  }\n\n  predefinedAttributes() {\n    const attributeId = this.state.product.attributes.map(attr => attr.id);\n    const itemAttributes = this.state.product.attributes.map(attr => attr);\n    const attribute = itemAttributes.map(itm => itm.items[0].id);\n    let ab = {};\n    attributeId.forEach((value1, index) => {\n      const value2 = attribute[index];\n      let a = {\n        [value1]: value2\n      };\n      ab = Object.assign(ab, a);\n    });\n    this.setState({\n      attributes: ab\n    });\n  }\n\n  componentDidMount() {\n    let {\n      id\n    } = this.props.params;\n    Get_Product(id).then(res => {\n      this.setState({\n        product: res.data.product,\n        imagePreview: res.data.product.gallery[0]\n      });\n      this.predefinedAttributes();\n    });\n  }\n\n  render() {\n    var _this$state$product$g;\n\n    const cleanHTML = DOMPurify.sanitize(this.state.product.description, {\n      USE_PROFILES: {\n        html: true\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(DetailsContainer, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ProductImages, {\n          children: this.state.product.gallery.length >= 1 && ((_this$state$product$g = this.state.product.gallery) === null || _this$state$product$g === void 0 ? void 0 : _this$state$product$g.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              position: \"relative\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ImageHover, {\n              src: img,\n              alt: \"product-img\",\n              onMouseOver: () => this.setState({\n                imagePreview: img\n              })\n            }, img, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProductImage, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.imagePreview,\n            alt: \"product-img-preview\",\n            height: 500,\n            width: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProductInfo, {\n          children: [/*#__PURE__*/_jsxDEV(NoStyleDiv, {\n            children: [/*#__PURE__*/_jsxDEV(ProductBrand, {\n              children: this.state.product.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProductName, {\n              children: this.state.product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), this.state.product.attributes.map(attr => /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n            children: [/*#__PURE__*/_jsxDEV(Attribute, {\n              children: [attr.name, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: \"10px\"\n              },\n              children: [attr.type === \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeSwatch, {\n                className: itm.id === this.state.attributes[attr.name] ? \"swatchSelected\" : null,\n                style: {\n                  backgroundColor: `${itm.id}`\n                },\n                onClick: () => this.setAttributes(itm, attr.name)\n              }, itm.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 23\n              }, this)), attr.type !== \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                className: itm.id === this.state.attributes[attr.name] ? \"selected\" : null,\n                onClick: () => this.setAttributes(itm, attr.name),\n                children: itm.value\n              }, itm.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, attr.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Attribute, {\n            children: \"PRICE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), this.state.product.prices.map(p => p.currency.symbol === this.props.currency && /*#__PURE__*/_jsxDEV(ProductPrice, {\n            children: [p.currency.symbol, p.amount]\n          }, p.currency.symbol, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this)), this.state.product.inStock === true && /*#__PURE__*/_jsxDEV(AddButton, {\n            type: \"submit\",\n            onClick: () => this.addProductToCart(this.state.product),\n            children: \"ADD TO CART\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), this.state.product.inStock !== true && /*#__PURE__*/_jsxDEV(OutOfStock, {\n            type: \"button\",\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProductParse, {\n            children: parse(cleanHTML)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currency: state.selection[\"selectedCurrency\"]\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToCart: product => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals())\n  };\n}\n\nconst Prop = props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(ProductDetails, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 30\n  }, this);\n};\n\n_s(Prop, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = Prop;\nexport default connect(mapStateToProps, mapDispatchToProps)(Prop);\n\nvar _c;\n\n$RefreshReg$(_c, \"Prop\");","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx"],"names":["React","DetailsContainer","ProductImages","ProductImage","ProductInfo","Attribute","AddButton","AttributeButton","ProductName","ProductBrand","ProductPrice","AttributeSwatch","OutOfStock","ProductParse","ImageHover","useParams","DOMPurify","parse","Get_Product","connect","addToCart","getTotals","initialProduct","NoStyleDiv","ProductDetails","Component","constructor","props","state","product","imagePreview","attributes","attributesLength","bgColor","color","addProductToCart","attribute","console","log","predefinedAttributes","setAttributes","itm","attr","a","id","ab","Object","assign","setState","attributeId","map","itemAttributes","items","forEach","value1","index","value2","componentDidMount","params","then","res","data","gallery","render","cleanHTML","sanitize","description","USE_PROFILES","html","length","img","display","position","brand","name","gap","type","backgroundColor","value","prices","p","currency","symbol","amount","inStock","mapStateToProps","selection","mapDispatchToProps","dispatch","Prop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  DetailsContainer,\n  ProductImages,\n  ProductImage,\n  ProductInfo,\n  Attribute,\n  AddButton,\n  AttributeButton,\n  ProductName,\n  ProductBrand,\n  ProductPrice,\n  AttributeSwatch,\n  OutOfStock,\n  ProductParse,\n  ImageHover,\n} from \"../../styles/productDetails\";\nimport { useParams } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport { ProductDetailsTypes } from \"../../types\";\nimport { Get_Product } from \"../../queries\";\nimport { connect } from \"react-redux\";\nimport { addToCart, getTotals } from \"../../redux/cartSlice\";\nimport { initialProduct } from \"../../initialState\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport { ProductDetailsProps } from \"../../props\";\nimport \"./details.css\";\n\nclass ProductDetails extends React.Component<\n  ProductDetailsProps,\n  ProductDetailsTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      product: { ...initialProduct },\n      imagePreview: \"\",\n      attributes: {},\n      attributesLength: 0,\n      bgColor: \"white\",\n      color: \"black\",\n    };\n  }\n\n  addProductToCart(product: {}) {\n    let attribute = this.state.attributes;\n    console.log(attribute);\n    this.props.addToCart({ product, attribute });\n    this.props.getTotals();\n    this.predefinedAttributes();\n  }\n\n  setAttributes(itm: { id: string }, attr: string) {\n    let attribute = this.state.attributes;\n    let a = { [attr]: itm.id };\n    let ab = Object.assign(attribute, a);\n    this.setState({ attributes: ab });\n  }\n\n  predefinedAttributes() {\n    const attributeId = this.state.product.attributes.map((attr) => attr.id);\n    const itemAttributes = this.state.product.attributes.map((attr) => attr);\n    const attribute = itemAttributes.map((itm) => itm.items[0].id);\n    let ab = {};\n    attributeId.forEach((value1, index) => {\n      const value2 = attribute[index];\n      let a = { [value1]: value2 };\n      ab = Object.assign(ab, a);\n    });\n    this.setState({ attributes: ab });\n  }\n\n  componentDidMount() {\n    let { id } = this.props.params;\n    Get_Product(id).then((res) => {\n      this.setState({\n        product: res.data.product,\n        imagePreview: res.data.product.gallery[0],\n      });\n      this.predefinedAttributes();\n    });\n  }\n\n  render() {\n    const cleanHTML = DOMPurify.sanitize(this.state.product.description, {\n      USE_PROFILES: { html: true },\n    });\n    return (\n      <DetailsContainer>\n        <>\n          <ProductImages>\n            {this.state.product.gallery.length >= 1 &&\n              this.state.product.gallery?.map((img) => (\n                <div style={{ display: \"flex\", position: \"relative\" }}>\n                  <ImageHover\n                    key={img}\n                    src={img}\n                    alt=\"product-img\"\n                    onMouseOver={() => this.setState({ imagePreview: img })}\n                  />\n                </div>\n              ))}\n          </ProductImages>\n\n          <ProductImage>\n            <img\n              src={this.state.imagePreview}\n              alt=\"product-img-preview\"\n              height={500}\n              width={400}\n            />\n          </ProductImage>\n\n          <ProductInfo>\n            <NoStyleDiv>\n              <ProductBrand>{this.state.product.brand}</ProductBrand>\n              <ProductName>{this.state.product.name}</ProductName>\n            </NoStyleDiv>\n\n            {this.state.product.attributes.map((attr) => (\n              <NoStyleDiv key={attr.id}>\n                <Attribute>{attr.name}:</Attribute>\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"10px\",\n                  }}\n                >\n                  {attr.type === \"swatch\" &&\n                    attr.items.map((itm) => (\n                      <AttributeSwatch\n                        key={itm.id}\n                        className={\n                          itm.id === this.state.attributes[attr.name]\n                            ? \"swatchSelected\"\n                            : null\n                        }\n                        style={{\n                          backgroundColor: `${itm.id}`,\n                        }}\n                        onClick={() => this.setAttributes(itm, attr.name)}\n                      />\n                    ))}\n\n                  {attr.type !== \"swatch\" &&\n                    attr.items.map((itm) => (\n                      <AttributeButton\n                        key={itm.id}\n                        className={\n                          itm.id === this.state.attributes[attr.name]\n                            ? \"selected\"\n                            : null\n                        }\n                        onClick={() => this.setAttributes(itm, attr.name)}\n                      >\n                        {itm.value}\n                      </AttributeButton>\n                    ))}\n                </div>\n              </NoStyleDiv>\n            ))}\n\n            <Attribute>PRICE:</Attribute>\n            {this.state.product.prices.map(\n              (p) =>\n                p.currency.symbol === this.props.currency && (\n                  <ProductPrice key={p.currency.symbol}>\n                    {p.currency.symbol}\n                    {p.amount}\n                  </ProductPrice>\n                )\n            )}\n\n            {this.state.product.inStock === true && (\n              <AddButton\n                type=\"submit\"\n                onClick={() => this.addProductToCart(this.state.product)}\n              >\n                ADD TO CART\n              </AddButton>\n            )}\n            {this.state.product.inStock !== true && (\n              <OutOfStock type=\"button\">OUT OF STOCK</OutOfStock>\n            )}\n            <ProductParse>{parse(cleanHTML)}</ProductParse>\n          </ProductInfo>\n        </>\n      </DetailsContainer>\n    );\n  }\n}\nfunction mapStateToProps(state: any) {\n  return {\n    currency: state.selection[\"selectedCurrency\"],\n  };\n}\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    addToCart: (product: any) => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n  };\n}\n\nconst Prop = (props: any) => <ProductDetails {...props} params={useParams()} />;\nexport default connect(mapStateToProps, mapDispatchToProps)(Prop);\n"]},"metadata":{},"sourceType":"module"}