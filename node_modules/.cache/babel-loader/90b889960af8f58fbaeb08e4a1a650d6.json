{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCategoryTitle, setCurrencyType } from \"../../redux/actions/actions\";\nimport { Attribute, AttributeButton } from \"../../styles/productDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [localStorage.getItem(\"cartItems\")],\n      categories: [],\n      category: \"all\",\n      currencies: [],\n      currency: \"USD\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.cart);\n  }\n\n  render() {\n    var _this$props$cart;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"88%\",\n          margin: \"10px auto\",\n          backgroundColor: \"#fff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"CART\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), this.props.cart.length > 0 ? this.props.cart.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"$50.00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.attributes.map(attr => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Attribute, {\n                    children: [attr.name, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      gap: \"10px\"\n                    },\n                    children: [attr.type === \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                      style: {\n                        backgroundColor: `${itm.id}`,\n                        height: \"30px\",\n                        width: \"45px\",\n                        border: \"1px solid black\",\n                        cursor: \"pointer\"\n                      }\n                    }, itm.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 35\n                    }, this)), attr.type !== \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                      children: itm.value\n                    }, itm.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 35\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                gap: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: item.cartQuantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.gallery[0],\n                  width: 90,\n                  height: 110\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Items in Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), ((_this$props$cart = this.props.cart) === null || _this$props$cart === void 0 ? void 0 : _this$props$cart.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            marginTop: \"30px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Tax: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"15$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Qty: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"65$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: \"132px\",\n              backgroundColor: \"green\",\n              color: \"white\"\n            },\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCategoryTitle: category => dispatch(setCategoryTitle(category)),\n    setCurrencyType: currency => dispatch(setCurrencyType(currency.toString()))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cart: state.action.cart.cartItems\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx"],"names":["React","connect","setCategoryTitle","setCurrencyType","Attribute","AttributeButton","Cart","Component","constructor","props","state","products","localStorage","getItem","categories","category","currencies","currency","componentDidMount","console","log","cart","render","width","margin","backgroundColor","length","map","item","display","justifyContent","name","brand","attributes","attr","gap","type","items","itm","id","height","border","cursor","value","textAlign","cartQuantity","gallery","marginTop","color","mapDispatchToProps","dispatch","toString","mapStateToProps","action","cartItems"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCategoryTitle, setCurrencyType } from \"../../redux/actions/actions\";\nimport { Attribute, AttributeButton } from \"../../styles/productDetails\";\nimport { TopNavTypes } from \"../../types\";\n\nclass Cart extends React.Component<\n  {\n    setCategoryTitle: any;\n    setCurrencyType: any;\n    cart: any;\n  },\n  TopNavTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [localStorage.getItem(\"cartItems\")],\n      categories: [],\n      category: \"all\",\n      currencies: [],\n      currency: \"USD\",\n    };\n  }\n  componentDidMount() {\n    console.log(this.props.cart);\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          style={{ width: \"88%\", margin: \"10px auto\", backgroundColor: \"#fff\" }}\n        >\n          <h3>CART</h3>\n          <br />\n          <hr />\n          {this.props.cart.length > 0 ? (\n            this.props.cart.map(\n              (item: {\n                name: string;\n                cartQuantity: number;\n                gallery: any;\n                attributes: [];\n                brand: string;\n              }) => (\n                <>\n                  <div\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                  >\n                    <div>\n                      <h2>\n                        <b>{item.name}</b>\n                      </h2>\n                      <p>{item.brand}</p>\n                      <p>\n                        <b>$50.00</b>\n                      </p>\n                      <div>\n                        {item.attributes.map((attr: any) => (\n                          <>\n                            <Attribute>{attr.name}:</Attribute>\n                            <div\n                              style={{\n                                display: \"flex\",\n                                gap: \"10px\",\n                              }}\n                            >\n                              {attr.type === \"swatch\" &&\n                                attr.items.map((itm: any) => (\n                                  <AttributeButton\n                                    key={itm.id}\n                                    style={{\n                                      backgroundColor: `${itm.id}`,\n                                      height: \"30px\",\n                                      width: \"45px\",\n                                      border: \"1px solid black\",\n                                      cursor: \"pointer\",\n                                    }}\n                                  ></AttributeButton>\n                                ))}\n\n                              {attr.type !== \"swatch\" &&\n                                attr.items.map((itm: any) => (\n                                  <AttributeButton key={itm.id}>\n                                    {itm.value}\n                                  </AttributeButton>\n                                ))}\n                            </div>\n                          </>\n                        ))}\n                      </div>\n                    </div>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        gap: \"10px\",\n                      }}\n                    >\n                      <div>\n                        <button>+</button>\n                        <h4 style={{ textAlign: \"center\" }}>\n                          {item.cartQuantity}\n                        </h4>\n                        <button>-</button>\n                      </div>\n                      <div>\n                        <img src={item.gallery[0]} width={90} height={110} />\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                </>\n              )\n            )\n          ) : (\n            <div>No Items in Cart</div>\n          )}\n          {this.props.cart?.length > 0 && (\n            <div\n              style={{\n                display: \"grid\",\n                marginTop: \"30px\",\n              }}\n            >\n              <span>\n                Tax: <b>15$</b>\n              </span>\n              <span>\n                Qty: <b>3</b>\n              </span>\n              <div>\n                <span>\n                  Total: <b>65$</b>\n                </span>\n              </div>\n              <button\n                style={{\n                  width: \"132px\",\n                  backgroundColor: \"green\",\n                  color: \"white\",\n                }}\n              >\n                Order\n              </button>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    setCategoryTitle: (category: string) =>\n      dispatch(setCategoryTitle(category)),\n    setCurrencyType: (currency: string) =>\n      dispatch(setCurrencyType(currency.toString())),\n  };\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    cart: state.action.cart.cartItems,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}