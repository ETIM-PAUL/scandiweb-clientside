{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: \"\"\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, _ref) => {\n      let {\n        payload,\n        type\n      } = _ref;\n      console.log(typeof payload);\n      const attribute = Array(payload.attr);\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.product.id);\n\n      if (existingIndex >= 0) {\n        state.cartItems[existingIndex] = { ...state.cartItems[existingIndex],\n          cartQuantity: state.cartItems[existingIndex].cartQuantity += 1\n        };\n        toast.info(`${payload.product.name} quantity increased`, {\n          position: \"top-center\"\n        });\n      } else {\n        let tempProductItem = { ...payload.product,\n          cartQuantity: 1,\n          imageIndex: 0,\n          selectedAttributes: attribute\n        };\n        state.cartItems.push(tempProductItem);\n        toast.success(`${payload.product.name} added to cart`, {\n          position: \"top-center\"\n        });\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    decreaseCart(state, _ref2) {\n      let {\n        payload,\n        type\n      } = _ref2;\n      const itemIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n        toast.info(`${payload.name} quantity decreased in cart`, {\n          position: \"top-center\"\n        });\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(item => item.id !== payload.id);\n        state.cartItems = nextCartItems;\n        toast.error(`${payload.name} removed from cart`, {\n          position: \"top-center\"\n        });\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    getTotals(state) {\n      let totalPrice = 0;\n      let total = 0;\n      let currencySymbol = \"\";\n      let {\n        quantity\n      } = state.cartItems.reduce((cartTotal, cartItem) => {\n        const {\n          cartQuantity\n        } = cartItem;\n        cartTotal.quantity += cartQuantity;\n        return cartTotal;\n      }, {\n        quantity: 0\n      });\n      state.cartItems.forEach(i => {\n        const pricesProxy = JSON.parse(JSON.stringify(i.prices));\n        const amount = pricesProxy.filter(x => x.currency.label === localStorage.getItem(\"currency\"))[0];\n        total += amount.amount * i.cartQuantity;\n        currencySymbol = amount.currency.symbol;\n      });\n      totalPrice = parseFloat(total.toFixed(2));\n      state.cartTotalAmount = currencySymbol + totalPrice;\n      state.cartTotalQuantity = quantity;\n    } // selectAttribute(state, {payload}) {\n    //   console.log(payload.product)\n    //   const existingIndex = state.cartItems.findIndex(\n    //     (item:any) => item.id === payload.product.item?.id\n    //   ); \n    //   const item = state.cartItems.map(\n    //     (item:any) => item.id === payload.product.item?.id\n    //   );\n    //   if (existingIndex >= 0) {\n    //     if(item)\n    //    state.cartItems[existingIndex].selectedAttribute.push(payload.product.attr)    \n    // }\n    // localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    // },\n\n\n  }\n});\nexport const {\n  addToCart,\n  decreaseCart,\n  getTotals\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/redux/cartSlice.ts"],"names":["createSlice","toast","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","cartTotalAmount","cartSlice","name","reducers","addToCart","state","payload","type","console","log","attribute","Array","attr","existingIndex","findIndex","item","id","product","cartQuantity","info","position","tempProductItem","imageIndex","selectedAttributes","push","success","setItem","stringify","decreaseCart","itemIndex","nextCartItems","filter","error","getTotals","totalPrice","total","currencySymbol","quantity","reduce","cartTotal","cartItem","forEach","i","pricesProxy","prices","amount","x","currency","label","symbol","parseFloat","toFixed","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\n\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\")\n    ? JSON.parse(localStorage.getItem(\"cartItems\")!)\n    : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: \"\",\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, {payload,type}) => {\n      console.log(typeof payload)\n      const attribute = Array(payload.attr)\n      const existingIndex = state.cartItems.findIndex(\n        (item:any) => item.id === payload.product.id\n      );\n\n      if (existingIndex >= 0) {\n        state.cartItems[existingIndex] = {\n          ...state.cartItems[existingIndex],\n          cartQuantity: state.cartItems[existingIndex].cartQuantity += 1,\n        };\n        toast.info(`${payload.product.name} quantity increased`, {\n          position: \"top-center\",\n        })\n      } else {\n        let tempProductItem = { ...payload.product, cartQuantity: 1, imageIndex: 0,selectedAttributes:attribute };\n        state.cartItems.push(tempProductItem);\n        toast.success(`${payload.product.name} added to cart`, {\n          position: \"top-center\",\n        })\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    decreaseCart(state, {payload, type}) {\n      const itemIndex = state.cartItems.findIndex(\n        (item:any) => item.id === payload.id\n      );\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n\n        toast.info(`${payload.name} quantity decreased in cart`, {\n          position: \"top-center\",\n      })\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(\n          (item:any) => item.id !== payload.id\n        );\n\n        state.cartItems = nextCartItems;\n\n        toast.error(`${payload.name} removed from cart`, {\n          position: \"top-center\",\n        })\n      }\n      \n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    getTotals(state) {\n      let totalPrice = 0;\n      let total = 0\n      let currencySymbol = \"\"\n\n      let { quantity } = state.cartItems.reduce(\n        (cartTotal:any, cartItem:any) => {\n          const {cartQuantity } = cartItem;\n          cartTotal.quantity += cartQuantity;       \n          return cartTotal;\n        },\n        {\n          quantity: 0,\n        }\n        );\n        state.cartItems.forEach((i: any) => {\n          const pricesProxy = JSON.parse(JSON.stringify(i.prices))\n          const amount = pricesProxy.filter((x: any) => x.currency.label === localStorage.getItem(\"currency\"))[0]\n          total += amount.amount * i.cartQuantity\n          currencySymbol = amount.currency.symbol\n        })\n        totalPrice = parseFloat(total.toFixed(2));\n        state.cartTotalAmount = currencySymbol + totalPrice;\n        state.cartTotalQuantity = quantity;\n      },\n\n      // selectAttribute(state, {payload}) {\n      //   console.log(payload.product)\n      //   const existingIndex = state.cartItems.findIndex(\n      //     (item:any) => item.id === payload.product.item?.id\n      //   ); \n      //   const item = state.cartItems.map(\n      //     (item:any) => item.id === payload.product.item?.id\n      //   );\n      //   if (existingIndex >= 0) {\n      //     if(item)\n      //    state.cartItems[existingIndex].selectedAttribute.push(payload.product.attr)    \n      // }\n      // localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n        \n      // },\n  }\n});\n\nexport const { addToCart, decreaseCart,  getTotals } =\n  cartSlice.actions;\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}