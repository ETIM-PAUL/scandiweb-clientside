{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { ActionTypes } from \"../constants/action-types\";\nconst initialState = {\n  products: [],\n  selectedCategory: \"\",\n  selectedCurrency: \"\",\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n    cartTotalQuantity: 0,\n    cartTotalAmount: 0\n  }\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case ActionTypes.SET_CATEGORY_TITLE:\n      return {\n        selectedCategory: payload\n      };\n\n    case ActionTypes.SET_CURRENCY_TYPE:\n      return {\n        selectedCurrency: payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.cart;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case ActionTypes.ADD_TO_CART:\n      const productIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (productIndex >= 0) {\n        state.cartItems[productIndex].cartQuantity += 1;\n        toast.info(`${payload.name} quantity increased`, {\n          position: \"top-center\"\n        });\n      } else {\n        const tempProduct = { ...payload,\n          cartQuantity: 1\n        };\n        toast.success(`${payload.name} added to cart`, {\n          position: \"top-center\"\n        });\n        return { ...state,\n          cartItems: state.cartItems.concat(tempProduct)\n        };\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n      return { ...state.cartItems\n      };\n\n    case ActionTypes.DECREASE_FROM_CART:\n      const itemIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n        toast.info(`${payload.name} quantity decreased in cart`, {\n          position: \"top-center\"\n        });\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(cartItem => cartItem.id !== payload.id);\n        state.cartItems = nextCartItems;\n        toast.error(`${payload.name} removed from cart`, {\n          position: \"top-center\"\n        });\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n      return { ...state.cartItems\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/redux/reducers/productsReducer.js"],"names":["toast","ActionTypes","initialState","products","selectedCategory","selectedCurrency","cart","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","cartTotalAmount","productsReducer","state","type","payload","SET_CATEGORY_TITLE","SET_CURRENCY_TYPE","cartReducer","ADD_TO_CART","productIndex","findIndex","item","id","cartQuantity","info","name","position","tempProduct","success","concat","setItem","stringify","DECREASE_FROM_CART","itemIndex","nextCartItems","filter","cartItem","error"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\"\nimport { ActionTypes } from \"../constants/action-types\"\n\nconst initialState = {\n  products:[],\n  selectedCategory:\"\",\n  selectedCurrency:\"\",\n  cart:{\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) :[],\n    cartTotalQuantity:0,\n    cartTotalAmount: 0,\n  }\n}\n\nexport const productsReducer = (state=initialState, {type,payload}) => {\n  switch (type) {\n    case ActionTypes.SET_CATEGORY_TITLE:\n      return {\n        selectedCategory: payload\n      }\n      case ActionTypes.SET_CURRENCY_TYPE:\n        return {\n          selectedCurrency: payload\n        }\n    default:\n      return state;\n  }\n}\n\nexport const cartReducer = (state=initialState.cart, {type,payload}) => {\n  switch (type) {\n    case ActionTypes.ADD_TO_CART:\n      const productIndex = state.cartItems.findIndex( item => item.id === payload.id);\n      if(productIndex >= 0) {\n        state.cartItems[productIndex].cartQuantity += 1;\n        toast.info(`${payload.name} quantity increased`, {\n          position: \"top-center\",\n        })\n      } else {\n        const tempProduct = {...payload, cartQuantity: 1}\n        toast.success(`${payload.name} added to cart`, {\n          position: \"top-center\",\n        })\n        return {...state, cartItems:state.cartItems.concat(tempProduct)};\n        \n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n      return {...state.cartItems}\n      \n    case ActionTypes.DECREASE_FROM_CART:\n      const itemIndex = state.cartItems.findIndex( item => item.id === payload.id);\n      if(state.cartItems[itemIndex].cartQuantity > 1){\n        state.cartItems[itemIndex].cartQuantity -= 1\n\n        toast.info(`${payload.name} quantity decreased in cart`, {\n          position: \"top-center\",\n      })\n    } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n       const nextCartItems = state.cartItems.filter(\n         (cartItem) => cartItem.id !== payload.id\n       );\n\n       state.cartItems = nextCartItems;\n\n       toast.error(`${payload.name} removed from cart`, {\n        position: \"top-center\",\n      })\n      }\n        localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n        return {...state.cartItems};\n        \n        default:\n          return state;\n        } \n  }\n\n"]},"metadata":{},"sourceType":"module"}