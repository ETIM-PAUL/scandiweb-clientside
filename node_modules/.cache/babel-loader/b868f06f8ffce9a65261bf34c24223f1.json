{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0\n};\n\nconst objCompare = (attributes, attribute) => {\n  if (JSON.stringify(attributes) === JSON.stringify(attribute)) {\n    return true;\n  }\n\n  if (JSON.stringify(attributes) !== JSON.stringify(attribute)) {\n    return false;\n  }\n\n  return true;\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, _ref) => {\n      var _payload$attr, _payload$product$attr, _allAttributes$;\n\n      let {\n        payload,\n        type\n      } = _ref;\n      // console.log(payload)\n      const attributes = payload === null || payload === void 0 ? void 0 : (_payload$attr = payload.attr) === null || _payload$attr === void 0 ? void 0 : _payload$attr.map(attr => attr.itm.id);\n      const allAttributes = payload === null || payload === void 0 ? void 0 : (_payload$product$attr = payload.product.attributes) === null || _payload$product$attr === void 0 ? void 0 : _payload$product$attr.map(attr => attr.items);\n      const mapedAttributes = (_allAttributes$ = allAttributes[0]) === null || _allAttributes$ === void 0 ? void 0 : _allAttributes$.map(attr => attr.id);\n      const existingItem = state.cartItems.find(item => item.id === payload.product.id && JSON.stringify(mapedAttributes) === JSON.stringify(attributes));\n      const existingIteim = state.cartItems.map(item => item.id === payload.product.id);\n      console.log(attributes);\n      console.log(existingItem);\n      console.log(mapedAttributes);\n\n      if (existingItem) {\n        const existingIndex = state.cartItems.findIndex(item => item.id === payload.product.id && JSON.stringify(mapedAttributes) === JSON.stringify(attributes));\n        const existingAttributes = state.cartItems[existingIndex].selectedAttributes.map(attr => attr.itm.id);\n        console.log(existingAttributes);\n\n        if (JSON.stringify(attributes) !== JSON.stringify(mapedAttributes) // && attributes\n        ) {\n          let tempProductItem = { ...payload.product,\n            cartQuantity: 1,\n            imageIndex: 0,\n            selectedAttributes: payload.attr\n          };\n          state.cartItems.push(tempProductItem);\n          toast.success(`${payload.product.name} added again to cart`, {\n            position: \"top-center\"\n          });\n        } else if (JSON.stringify(attributes) === JSON.stringify(mapedAttributes) // || attributes === undefined\n        ) {\n          state.cartItems[existingIndex] = { ...state.cartItems[existingIndex],\n            cartQuantity: state.cartItems[existingIndex].cartQuantity += 1\n          };\n          toast.info(`${payload.product.name} quantity increased`, {\n            position: \"top-center\"\n          });\n        }\n      } else {\n        let tempProductItem = { ...payload.product,\n          cartQuantity: 1,\n          imageIndex: 0,\n          selectedAttributes: payload.attr\n        };\n        state.cartItems.push(tempProductItem);\n        toast.success(`${payload.product.name} added  to cart`, {\n          position: \"top-center\"\n        });\n      } // console.log(existingIndex)\n\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    decreaseCart(state, _ref2) {\n      let {\n        payload,\n        type\n      } = _ref2;\n      const itemIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n        toast.info(`${payload.name} quantity decreased in cart`, {\n          position: \"top-center\"\n        });\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(item => item.id !== payload.id);\n        state.cartItems = nextCartItems;\n        toast.error(`${payload.name} removed from cart`, {\n          position: \"top-center\"\n        });\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    getTotals(state) {\n      let totalPrice = 0;\n      let total = 0;\n      let {\n        quantity\n      } = state.cartItems.reduce((cartTotal, cartItem) => {\n        const {\n          cartQuantity\n        } = cartItem;\n        cartTotal.quantity += cartQuantity;\n        return cartTotal;\n      }, {\n        quantity: 0\n      });\n      state.cartItems.forEach(i => {\n        const pricesProxy = JSON.parse(JSON.stringify(i.prices));\n        const amount = pricesProxy.filter(x => x.currency.symbol === localStorage.getItem(\"currency\"))[0];\n        total += amount.amount * i.cartQuantity;\n      });\n      totalPrice = parseFloat(total.toFixed(2));\n      state.cartTotalAmount = totalPrice;\n      state.cartTotalQuantity = quantity;\n    },\n\n    changeImageIndexUp(state, _ref3) {\n      let {\n        payload,\n        type\n      } = _ref3;\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (existingIndex >= 0) {\n        if (state.cartItems[existingIndex].imageIndex === payload.gallery.length - 1) {\n          state.cartItems[existingIndex].imageIndex = 0;\n        } else if (state.cartItems[existingIndex].imageIndex >= 0) {\n          state.cartItems[existingIndex].imageIndex += 1;\n        }\n      }\n    },\n\n    changeImageIndexDown(state, _ref4) {\n      let {\n        payload,\n        type\n      } = _ref4;\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.id);\n\n      if (existingIndex >= 0) {\n        if (state.cartItems[existingIndex].imageIndex > 0) {\n          state.cartItems[existingIndex].imageIndex -= 1;\n        } else if (state.cartItems[existingIndex].imageIndex === 0) {\n          state.cartItems[existingIndex].imageIndex = payload.gallery.length - 1;\n        }\n      }\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  decreaseCart,\n  getTotals,\n  changeImageIndexUp,\n  changeImageIndexDown\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/redux/cartSlice.ts"],"names":["createSlice","toast","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","cartTotalAmount","objCompare","attributes","attribute","stringify","cartSlice","name","reducers","addToCart","state","payload","type","attr","map","itm","id","allAttributes","product","items","mapedAttributes","existingItem","find","item","existingIteim","console","log","existingIndex","findIndex","existingAttributes","selectedAttributes","tempProductItem","cartQuantity","imageIndex","push","success","position","info","setItem","decreaseCart","itemIndex","nextCartItems","filter","error","getTotals","totalPrice","total","quantity","reduce","cartTotal","cartItem","forEach","i","pricesProxy","prices","amount","x","currency","symbol","parseFloat","toFixed","changeImageIndexUp","gallery","length","changeImageIndexDown","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\n\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\")\n    ? JSON.parse(localStorage.getItem(\"cartItems\")!)\n    : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0,\n};\n\nconst objCompare = (attributes:any, attribute:any) => {\n  if (JSON.stringify(attributes) === JSON.stringify(attribute)) {\n    return true;\n  }\n  if (JSON.stringify(attributes) !== JSON.stringify(attribute) ){\n    return false;\n  }\n  return true;\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, {payload,type}) => {\n      // console.log(payload)\n      const attributes = (payload?.attr?.map((attr:any) => attr.itm.id) )\n      const allAttributes = (payload?.product.attributes?.map((attr:any) => attr.items) )\n      const mapedAttributes = (allAttributes[0]?.map((attr:any) => attr.id) )\n      const existingItem = state.cartItems.find(\n        (item:any) => item.id === payload.product.id && (JSON.stringify(mapedAttributes) === JSON.stringify(attributes))\n      );\n      const existingIteim = state.cartItems.map(\n        (item:any) => item.id === payload.product.id\n      );\n      console.log(attributes)\n      console.log(existingItem)\n      console.log(mapedAttributes)\n      if (existingItem) {\n        const existingIndex = state.cartItems.findIndex(\n          (item:any) => item.id === payload.product.id && (JSON.stringify(mapedAttributes) === JSON.stringify(attributes))\n        );\n        const existingAttributes = state.cartItems[existingIndex].selectedAttributes.map((attr:any) => attr.itm.id)\n        console.log(existingAttributes)\n        if((JSON.stringify(attributes) !== JSON.stringify(mapedAttributes)) \n        // && attributes\n        ){ \n          let tempProductItem = { ...payload.product, cartQuantity: 1, imageIndex: 0,selectedAttributes:payload.attr };\n          state.cartItems.push(tempProductItem);\n          toast.success(`${payload.product.name} added again to cart`, { \n            position: \"top-center\",\n          })\n        } else \n        if((JSON.stringify(attributes) === JSON.stringify(mapedAttributes)) \n        // || attributes === undefined\n        ){ \n          state.cartItems[existingIndex] = {\n            ...state.cartItems[existingIndex],\n            cartQuantity: state.cartItems[existingIndex].cartQuantity += 1,\n          };\n          toast.info(`${payload.product.name} quantity increased`, {\n            position: \"top-center\",\n          })\n        }\n      } \n      else {\n        let tempProductItem = { ...payload.product, cartQuantity: 1, imageIndex: 0,selectedAttributes:payload.attr };\n        state.cartItems.push(tempProductItem);\n        toast.success(`${payload.product.name} added  to cart`, {\n          position: \"top-center\",\n        })\n      }\n      // console.log(existingIndex)\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    \n    decreaseCart(state, {payload, type}) {\n      const itemIndex = state.cartItems.findIndex(\n        (item:any) => item.id === payload.id\n      );\n\n      if (state.cartItems[itemIndex].cartQuantity > 1) {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n\n        toast.info(`${payload.name} quantity decreased in cart`, {\n          position: \"top-center\",\n      })\n      } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        const nextCartItems = state.cartItems.filter(\n          (item:any) => item.id !== payload.id\n        );\n\n        state.cartItems = nextCartItems;\n\n        toast.error(`${payload.name} removed from cart`, {\n          position: \"top-center\",\n        })\n      }\n      \n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    getTotals(state) {\n      let totalPrice = 0;\n      let total = 0\n\n      let { quantity } = state.cartItems.reduce(\n        (cartTotal:any, cartItem:any) => {\n          const {cartQuantity } = cartItem;\n          cartTotal.quantity += cartQuantity;       \n          return cartTotal;\n        },\n        {\n          quantity: 0,\n        }\n        );\n        state.cartItems.forEach((i: any) => {\n          const pricesProxy = JSON.parse(JSON.stringify(i.prices))\n          const amount = pricesProxy.filter((x: any) => x.currency.symbol === localStorage.getItem(\"currency\"))[0]\n          total += amount.amount * i.cartQuantity\n        })\n        totalPrice = parseFloat(total.toFixed(2));\n        state.cartTotalAmount = totalPrice;\n        state.cartTotalQuantity = quantity;\n      },\n\n      changeImageIndexUp(state, {payload,type}) {\n        const existingIndex = state.cartItems.findIndex(\n          (item:any) => item.id === payload.id\n        );\n        \n        if (existingIndex >= 0) {\n         if(state.cartItems[existingIndex].imageIndex === (payload.gallery.length-1)){\n           state.cartItems[existingIndex].imageIndex = 0\n         }\n         else if(state.cartItems[existingIndex].imageIndex >= 0){\n           state.cartItems[existingIndex].imageIndex += 1\n         }\n        }\n  \n      },\n\n      changeImageIndexDown(state, {payload,type}) {\n        const existingIndex = state.cartItems.findIndex(\n          (item:any) => item.id === payload.id\n        );\n        if (existingIndex >= 0) {\n         if(state.cartItems[existingIndex].imageIndex > 0){\n           state.cartItems[existingIndex].imageIndex -= 1\n         }\n         else if(state.cartItems[existingIndex].imageIndex === 0){\n          state.cartItems[existingIndex].imageIndex = (payload.gallery.length-1)\n        }\n        }\n  \n      },\n  }\n});\n\nexport const { addToCart, decreaseCart,  getTotals, changeImageIndexUp, changeImageIndexDown } =\n  cartSlice.actions;\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}