{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DetailsContainer, ProductImages, ProductImage, ProductInfo, Attribute, AddButton, AttributeButton, ProductName, ProductBrand, ProductPrice, AttributeSwatch, OutOfStock, ProductParse, ImageHover, AttributeStyle, AttributeName } from \"../../styles/productDetails\";\nimport { useParams } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport { Get_Product } from \"../../queries\";\nimport { connect } from \"react-redux\";\nimport { initialDetails } from \"../../initialState\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport \"./details.css\";\nimport { mapDispatchToProps, mapStateToProps } from \"./util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialDetails;\n  }\n\n  addProductToCart(product) {\n    let attribute = this.state.attributes;\n    console.log(attribute);\n    this.props.addToCart({\n      product,\n      attribute\n    });\n    this.props.getTotals();\n    this.predefinedAttributes();\n  }\n\n  setAttributes(itm, attr) {\n    let attribute = this.state.attributes;\n    let a = {\n      [attr]: itm.id\n    };\n    let ab = Object.assign(attribute, a);\n    this.setState({\n      attributes: ab\n    });\n  }\n\n  predefinedAttributes() {\n    const attributeId = this.state.product.attributes.map(attr => attr.id);\n    const itemAttributes = this.state.product.attributes.map(attr => attr);\n    const attribute = itemAttributes.map(itm => itm.items[0].id);\n    let ab = {};\n    attributeId.forEach((value1, index) => {\n      const value2 = attribute[index];\n      let a = {\n        [value1]: value2\n      };\n      ab = Object.assign(ab, a);\n    });\n    this.setState({\n      attributes: ab\n    });\n  }\n\n  componentDidMount() {\n    let {\n      id\n    } = this.props.params;\n    Get_Product(id).then(res => {\n      this.setState({\n        product: res.data.product,\n        imagePreview: res.data.product.gallery[0]\n      });\n      this.predefinedAttributes();\n    });\n  }\n\n  render() {\n    var _this$state$product$g;\n\n    const cleanHTML = DOMPurify.sanitize(this.state.product.description, {\n      USE_PROFILES: {\n        html: true\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(DetailsContainer, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ProductImages, {\n          children: this.state.product.gallery.length >= 1 && ((_this$state$product$g = this.state.product.gallery) === null || _this$state$product$g === void 0 ? void 0 : _this$state$product$g.map(img => /*#__PURE__*/_jsxDEV(ImageHover, {\n            src: img,\n            alt: \"product-img\",\n            onMouseOver: () => this.setState({\n              imagePreview: img\n            })\n          }, img, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProductImage, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.imagePreview,\n            alt: \"product-img-preview\",\n            height: 500,\n            width: 600 // style={{ width: \"80px\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProductInfo, {\n          children: [/*#__PURE__*/_jsxDEV(NoStyleDiv, {\n            children: [/*#__PURE__*/_jsxDEV(ProductBrand, {\n              children: this.state.product.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProductName, {\n              children: this.state.product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), this.state.product.attributes.map(attr => /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n            children: [/*#__PURE__*/_jsxDEV(AttributeName, {\n              children: [attr.name, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AttributeStyle, {\n              children: [attr.type === \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeSwatch, {\n                color: `${itm.id}`,\n                className: itm.id === this.state.attributes[attr.name] ? \"swatchSelected\" : null,\n                onClick: () => this.setAttributes(itm, attr.name)\n              }, itm.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 23\n              }, this)), attr.type !== \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                className: itm.id === this.state.attributes[attr.name] ? \"selected\" : null,\n                onClick: () => this.setAttributes(itm, attr.name),\n                children: itm.value\n              }, itm.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, attr.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Attribute, {\n            children: \"PRICE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), this.state.product.prices.map(p => p.currency.symbol === this.props.currency && /*#__PURE__*/_jsxDEV(ProductPrice, {\n            children: [p.currency.symbol, p.amount]\n          }, p.currency.symbol, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this)), this.state.product.inStock === true && /*#__PURE__*/_jsxDEV(AddButton, {\n            type: \"submit\",\n            onClick: () => this.addProductToCart(this.state.product),\n            children: \"ADD TO CART\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), this.state.product.inStock !== true && /*#__PURE__*/_jsxDEV(OutOfStock, {\n            type: \"button\",\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProductParse, {\n            children: parse(cleanHTML)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Prop = props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(ProductDetails, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 30\n  }, this);\n};\n\n_s(Prop, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = Prop;\nexport default connect(mapStateToProps, mapDispatchToProps)(Prop);\n\nvar _c;\n\n$RefreshReg$(_c, \"Prop\");","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx"],"names":["React","DetailsContainer","ProductImages","ProductImage","ProductInfo","Attribute","AddButton","AttributeButton","ProductName","ProductBrand","ProductPrice","AttributeSwatch","OutOfStock","ProductParse","ImageHover","AttributeStyle","AttributeName","useParams","DOMPurify","parse","Get_Product","connect","initialDetails","NoStyleDiv","mapDispatchToProps","mapStateToProps","ProductDetails","Component","constructor","props","state","addProductToCart","product","attribute","attributes","console","log","addToCart","getTotals","predefinedAttributes","setAttributes","itm","attr","a","id","ab","Object","assign","setState","attributeId","map","itemAttributes","items","forEach","value1","index","value2","componentDidMount","params","then","res","data","imagePreview","gallery","render","cleanHTML","sanitize","description","USE_PROFILES","html","length","img","brand","name","type","value","prices","p","currency","symbol","amount","inStock","Prop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  DetailsContainer,\n  ProductImages,\n  ProductImage,\n  ProductInfo,\n  Attribute,\n  AddButton,\n  AttributeButton,\n  ProductName,\n  ProductBrand,\n  ProductPrice,\n  AttributeSwatch,\n  OutOfStock,\n  ProductParse,\n  ImageHover,\n  AttributeStyle,\n  AttributeName,\n} from \"../../styles/productDetails\";\nimport { useParams } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport { ProductDetailsTypes } from \"../../types\";\nimport { Get_Product } from \"../../queries\";\nimport { connect } from \"react-redux\";\nimport { initialDetails } from \"../../initialState\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport { ProductDetailsProps } from \"../../props\";\nimport \"./details.css\";\nimport { mapDispatchToProps, mapStateToProps } from \"./util\";\n\nclass ProductDetails extends React.Component<\n  ProductDetailsProps,\n  ProductDetailsTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = initialDetails;\n  }\n\n  addProductToCart(product: {}) {\n    let attribute = this.state.attributes;\n    console.log(attribute);\n    this.props.addToCart({ product, attribute });\n    this.props.getTotals();\n    this.predefinedAttributes();\n  }\n\n  setAttributes(itm: { id: string }, attr: string) {\n    let attribute = this.state.attributes;\n    let a = { [attr]: itm.id };\n    let ab = Object.assign(attribute, a);\n    this.setState({ attributes: ab });\n  }\n\n  predefinedAttributes() {\n    const attributeId = this.state.product.attributes.map((attr) => attr.id);\n    const itemAttributes = this.state.product.attributes.map((attr) => attr);\n    const attribute = itemAttributes.map((itm) => itm.items[0].id);\n    let ab = {};\n    attributeId.forEach((value1, index) => {\n      const value2 = attribute[index];\n      let a = { [value1]: value2 };\n      ab = Object.assign(ab, a);\n    });\n    this.setState({ attributes: ab });\n  }\n\n  componentDidMount() {\n    let { id } = this.props.params;\n    Get_Product(id).then((res) => {\n      this.setState({\n        product: res.data.product,\n        imagePreview: res.data.product.gallery[0],\n      });\n      this.predefinedAttributes();\n    });\n  }\n\n  render() {\n    const cleanHTML = DOMPurify.sanitize(this.state.product.description, {\n      USE_PROFILES: { html: true },\n    });\n    return (\n      <DetailsContainer>\n        <>\n          <ProductImages>\n            {this.state.product.gallery.length >= 1 &&\n              this.state.product.gallery?.map((img) => (\n                <ImageHover\n                  key={img}\n                  src={img}\n                  alt=\"product-img\"\n                  onMouseOver={() => this.setState({ imagePreview: img })}\n                />\n              ))}\n          </ProductImages>\n\n          <ProductImage>\n            <img\n              src={this.state.imagePreview}\n              alt=\"product-img-preview\"\n              height={500}\n              width={600}\n              // style={{ width: \"80px\" }}\n            />\n          </ProductImage>\n\n          <ProductInfo>\n            <NoStyleDiv>\n              <ProductBrand>{this.state.product.brand}</ProductBrand>\n              <ProductName>{this.state.product.name}</ProductName>\n            </NoStyleDiv>\n\n            {this.state.product.attributes.map((attr) => (\n              <NoStyleDiv key={attr.id}>\n                <AttributeName>{attr.name}:</AttributeName>\n                <AttributeStyle>\n                  {attr.type === \"swatch\" &&\n                    attr.items.map((itm) => (\n                      <AttributeSwatch\n                        color={`${itm.id}`}\n                        key={itm.id}\n                        className={\n                          itm.id === this.state.attributes[attr.name]\n                            ? \"swatchSelected\"\n                            : null\n                        }\n                        onClick={() => this.setAttributes(itm, attr.name)}\n                      />\n                    ))}\n\n                  {attr.type !== \"swatch\" &&\n                    attr.items.map((itm) => (\n                      <AttributeButton\n                        key={itm.id}\n                        className={\n                          itm.id === this.state.attributes[attr.name]\n                            ? \"selected\"\n                            : null\n                        }\n                        onClick={() => this.setAttributes(itm, attr.name)}\n                      >\n                        {itm.value}\n                      </AttributeButton>\n                    ))}\n                </AttributeStyle>\n              </NoStyleDiv>\n            ))}\n\n            <Attribute>PRICE:</Attribute>\n            {this.state.product.prices.map(\n              (p) =>\n                p.currency.symbol === this.props.currency && (\n                  <ProductPrice key={p.currency.symbol}>\n                    {p.currency.symbol}\n                    {p.amount}\n                  </ProductPrice>\n                )\n            )}\n\n            {this.state.product.inStock === true && (\n              <AddButton\n                type=\"submit\"\n                onClick={() => this.addProductToCart(this.state.product)}\n              >\n                ADD TO CART\n              </AddButton>\n            )}\n            {this.state.product.inStock !== true && (\n              <OutOfStock type=\"button\">OUT OF STOCK</OutOfStock>\n            )}\n            <ProductParse>{parse(cleanHTML)}</ProductParse>\n          </ProductInfo>\n        </>\n      </DetailsContainer>\n    );\n  }\n}\nconst Prop = (props: any) => <ProductDetails {...props} params={useParams()} />;\nexport default connect(mapStateToProps, mapDispatchToProps)(Prop);\n"]},"metadata":{},"sourceType":"module"}