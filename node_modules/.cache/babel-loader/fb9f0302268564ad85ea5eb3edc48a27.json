{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/CartOverlay/ItemAttributes.tsx\";\nimport React from \"react\";\nimport { Attribute, AttributeButton, CartAttributes, AttributeSwatch, ItemsCart, AttributesBanner } from \"../../styles/cartOverlay\";\nimport { Bold, NoStyleDiv, Paragraph } from \"../../styles/cart\";\nimport { ProductBrand, ProductName } from \"../../styles/cart\";\nimport \"../Product-Details/details.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ItemAttributes extends React.Component {\n  render() {\n    var _this$props$item$pric;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ItemsCart, {\n        children: [/*#__PURE__*/_jsxDEV(ProductBrand, {\n          children: this.props.item.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProductName, {\n          children: this.props.item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), (_this$props$item$pric = this.props.item.prices) === null || _this$props$item$pric === void 0 ? void 0 : _this$props$item$pric.map(p => p.currency.symbol === this.props.currency && /*#__PURE__*/_jsxDEV(Paragraph, {\n          children: /*#__PURE__*/_jsxDEV(Bold, {\n            children: [p.currency.symbol, p.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this)\n        }, p.currency.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(AttributesBanner, {\n          children: this.props.item.attributes.map(attr => /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n            children: [/*#__PURE__*/_jsxDEV(Attribute, {\n              children: [attr.name, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CartAttributes, {\n              children: [attr.type !== \"swatch\" && attr.items.map(attribute => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                className: attribute.id === this.props.item.selectedAttributes[attr.name] ? \"selected\" : null,\n                children: attribute.value\n              }, attribute.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 23\n              }, this)), attr.type === \"swatch\" && attr.items.map(attribute => /*#__PURE__*/_jsxDEV(AttributeSwatch, {\n                color: `${attribute.id}`,\n                className: attribute.id === this.props.item.selectedAttributes[attr.name] ? \"swatchSelected\" : null\n              }, attribute.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)]\n          }, attr.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default ItemAttributes;","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/CartOverlay/ItemAttributes.tsx"],"names":["React","Attribute","AttributeButton","CartAttributes","AttributeSwatch","ItemsCart","AttributesBanner","Bold","NoStyleDiv","Paragraph","ProductBrand","ProductName","ItemAttributes","Component","render","props","item","brand","name","prices","map","p","currency","symbol","amount","label","attributes","attr","type","items","attribute","id","selectedAttributes","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,eAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,SALF,EAMEC,gBANF,QAOO,0BAPP;AASA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,mBAA5C;AAEA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,mBAA1C;AACA,OAAO,gCAAP;;;;AAEA,MAAMC,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAAkE;AAChEC,EAAAA,MAAM,GAAG;AAAA;;AACP,wBACE;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE,QAAC,YAAD;AAAA,oBAAe,KAAKC,KAAL,CAAWC,IAAX,CAAgBC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAA,oBAAc,KAAKF,KAAL,CAAWC,IAAX,CAAgBE;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFF,2BAGG,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,MAHnB,0DAGG,sBAAwBC,GAAxB,CACEC,CAAD,IACEA,CAAC,CAACC,QAAF,CAAWC,MAAX,KAAsB,KAAKR,KAAL,CAAWO,QAAjC,iBACE,QAAC,SAAD;AAAA,iCACE,QAAC,IAAD;AAAA,uBACGD,CAAC,CAACC,QAAF,CAAWC,MADd,EAEGF,CAAC,CAACG,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAgBH,CAAC,CAACC,QAAF,CAAWG,KAA3B;AAAA;AAAA;AAAA;AAAA,gBAHL,CAHH,eAeE,QAAC,gBAAD;AAAA,oBACG,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,UAAhB,CAA2BN,GAA3B,CAAgCO,IAAD,iBAC9B,QAAC,UAAD;AAAA,oCACE,QAAC,SAAD;AAAA,yBAAYA,IAAI,CAACT,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,cAAD;AAAA,yBACGS,IAAI,CAACC,IAAL,KAAc,QAAd,IACCD,IAAI,CAACE,KAAL,CAAWT,GAAX,CAAgBU,SAAD,iBACb,QAAC,eAAD;AAEE,gBAAA,SAAS,EACPA,SAAS,CAACC,EAAV,KACA,KAAKhB,KAAL,CAAWC,IAAX,CAAgBgB,kBAAhB,CAAmCL,IAAI,CAACT,IAAxC,CADA,GAEI,UAFJ,GAGI,IANR;AAAA,0BASGY,SAAS,CAACG;AATb,iBACOH,SAAS,CAACC,EADjB;AAAA;AAAA;AAAA;AAAA,sBADF,CAFJ,EAeGJ,IAAI,CAACC,IAAL,KAAc,QAAd,IACCD,IAAI,CAACE,KAAL,CAAWT,GAAX,CAAgBU,SAAD,iBACb,QAAC,eAAD;AACE,gBAAA,KAAK,EAAG,GAAEA,SAAS,CAACC,EAAG,EADzB;AAGE,gBAAA,SAAS,EACPD,SAAS,CAACC,EAAV,KACA,KAAKhB,KAAL,CAAWC,IAAX,CAAgBgB,kBAAhB,CAAmCL,IAAI,CAACT,IAAxC,CADA,GAEI,gBAFJ,GAGI;AAPR,iBAEOY,SAAS,CAACC,EAFjB;AAAA;AAAA;AAAA;AAAA,sBADF,CAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAAiBJ,IAAI,CAACI,EAAtB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAwDD;;AA1D+D;;AA6DlE,eAAenB,cAAf","sourcesContent":["import React from \"react\";\nimport {\n  Attribute,\n  AttributeButton,\n  CartAttributes,\n  AttributeSwatch,\n  ItemsCart,\n  AttributesBanner,\n} from \"../../styles/cartOverlay\";\nimport { CartTypes, ItemProps } from \"../../types\";\nimport { Bold, NoStyleDiv, Paragraph } from \"../../styles/cart\";\nimport { ItemAttributesProps } from \"../../props\";\nimport { ProductBrand, ProductName } from \"../../styles/cart\";\nimport \"../Product-Details/details.css\";\n\nclass ItemAttributes extends React.Component<ItemAttributesProps> {\n  render() {\n    return (\n      <>\n        <ItemsCart>\n          <ProductBrand>{this.props.item.brand}</ProductBrand>\n          <ProductName>{this.props.item.name}</ProductName>\n          {this.props.item.prices?.map(\n            (p) =>\n              p.currency.symbol === this.props.currency && (\n                <Paragraph key={p.currency.label}>\n                  <Bold>\n                    {p.currency.symbol}\n                    {p.amount}\n                  </Bold>\n                </Paragraph>\n              )\n          )}\n\n          <AttributesBanner>\n            {this.props.item.attributes.map((attr: any) => (\n              <NoStyleDiv key={attr.id}>\n                <Attribute>{attr.name}:</Attribute>\n                <CartAttributes>\n                  {attr.type !== \"swatch\" &&\n                    attr.items.map((attribute: any) => (\n                      <AttributeButton\n                        key={attribute.id}\n                        className={\n                          attribute.id ===\n                          this.props.item.selectedAttributes[attr.name]\n                            ? \"selected\"\n                            : null\n                        }\n                      >\n                        {attribute.value}\n                      </AttributeButton>\n                    ))}\n                  {attr.type === \"swatch\" &&\n                    attr.items.map((attribute: any) => (\n                      <AttributeSwatch\n                        color={`${attribute.id}`}\n                        key={attribute.id}\n                        className={\n                          attribute.id ===\n                          this.props.item.selectedAttributes[attr.name]\n                            ? \"swatchSelected\"\n                            : null\n                        }\n                      ></AttributeSwatch>\n                    ))}\n                </CartAttributes>\n              </NoStyleDiv>\n            ))}\n          </AttributesBanner>\n        </ItemsCart>\n      </>\n    );\n  }\n}\n\nexport default ItemAttributes;\n"]},"metadata":{},"sourceType":"module"}