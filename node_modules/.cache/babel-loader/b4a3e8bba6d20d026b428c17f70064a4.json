{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // import { setCategory, setCurrency } from \"../../redux/selectSlice\";\n\nimport { addToCart, decreaseCart, getTotals } from \"../../redux/cartSlice\";\nimport { Attribute, AttributeButton } from \"../../styles/productDetails\";\nimport { FaLessThan, FaGreaterThan } from \"react-icons/fa\";\nimport { changeImageIndexUp, changeImageIndexDown } from \"../..//redux/cartSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cartItems: this.props.cart,\n      num: 1,\n      attribute: \"\"\n    };\n  }\n\n  selectAttribute(item, attr) {\n    console.log(attr);\n  }\n\n  decreaseCartItemQuantity(item) {\n    this.props.decreaseCart(item);\n    this.props.getTotals();\n  }\n\n  increaseCartItemQuantity(product) {\n    this.props.addToCart({\n      product\n    }); // this.props.addToCart({ product, attr });\n\n    this.props.getTotals();\n  }\n\n  componentWill() {}\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.cart !== state.cartItems) {\n      return {\n        cartItems: props.cart\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    var _this$state$cartItems, _this$props$cart;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"88%\",\n        margin: \"auto\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), ((_this$state$cartItems = this.state.cartItems) === null || _this$state$cartItems === void 0 ? void 0 : _this$state$cartItems.length) > 0 ? this.state.cartItems.map(item => {\n        var _item$prices, _item$gallery;\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginBottom: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), (_item$prices = item.prices) === null || _item$prices === void 0 ? void 0 : _item$prices.map(p => p.currency.label === this.props.currency && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [p.currency.symbol, p.amount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.attributes.map(attr => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Attribute, {\n                    children: [attr.name, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      gap: \"10px\"\n                    },\n                    children: [attr.type === \"swatch\" && attr.items.map(attr => {\n                      var _item$selectedAttribu;\n\n                      return /*#__PURE__*/_jsxDEV(AttributeButton, {\n                        style: (_item$selectedAttribu = item.selectedAttributes) !== null && _item$selectedAttribu !== void 0 && _item$selectedAttribu.map(x => x.id).toString().includes(attr.id) ? {\n                          backgroundColor: `${attr.id}`,\n                          height: \"20px\",\n                          width: \"20px\",\n                          border: \"3px solid black\",\n                          cursor: \"pointer\"\n                        } : {\n                          backgroundColor: `${attr.id}`,\n                          height: \"20px\",\n                          width: \"20px\",\n                          border: \"1px solid black\",\n                          cursor: \"pointer\"\n                        }\n                      }, attr.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 31\n                      }, this);\n                    }), attr.type !== \"swatch\" && attr.items.map(attr => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                      style: item.selectedAttributes.map(x => x.attr === attr.id).toString().includes(attr.id) ? {\n                        backgroundColor: \"black\",\n                        color: \"white\"\n                      } : {},\n                      children: attr.value\n                    }, attr.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 31\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: \"10px\",\n                lineHeight: \"60px\",\n                marginTop: \"15px\",\n                maxHeight: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.increaseCartItemQuantity(item),\n                  style: {\n                    width: \"30px\",\n                    height: \"30px\",\n                    backgroundColor: \"#fff\",\n                    border: \"1px solid black\",\n                    cursor: \"pointer\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"25px\"\n                    },\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: item.cartQuantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    width: \"30px\",\n                    height: \"30px\",\n                    backgroundColor: \"#fff\",\n                    border: \"1px solid black\",\n                    cursor: \"pointer\"\n                  },\n                  onClick: () => this.decreaseCartItemQuantity(item),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"25px\"\n                    },\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"#fff\",\n                  position: \"relative\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.gallery[item.imageIndex],\n                  width: 200,\n                  height: 205,\n                  alt: \"itemImg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this), ((_item$gallery = item.gallery) === null || _item$gallery === void 0 ? void 0 : _item$gallery.length) > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    gap: \"4px\",\n                    position: \"absolute\",\n                    bottom: \"15%\",\n                    right: \"6%\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FaLessThan, {\n                    style: {\n                      backgroundColor: \"black\",\n                      color: \"white\"\n                    },\n                    onClick: () => this.props.changeImageDown(item)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(FaGreaterThan, {\n                    style: {\n                      backgroundColor: \"black\",\n                      color: \"white\"\n                    },\n                    onClick: () => this.props.changeImageUp(item)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Items in Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), ((_this$props$cart = this.props.cart) === null || _this$props$cart === void 0 ? void 0 : _this$props$cart.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          marginTop: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Tax: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Qty: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: this.props.totalQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: this.props.totalAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"132px\",\n            height: \"30px\",\n            backgroundColor: \"green\",\n            color: \"white\",\n            border: \"none\"\n          },\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    decreaseCart: product => dispatch(decreaseCart(product)),\n    addToCart: product => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n    changeImageUp: item => dispatch(changeImageIndexUp(item)),\n    changeImageDown: item => dispatch(changeImageIndexDown(item))\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart.cartItems,\n    totalQuantity: state.cart.cartTotalQuantity,\n    totalAmount: state.cart.cartTotalAmount,\n    currency: state.selection[\"selectedCurrency\"]\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx"],"names":["React","connect","addToCart","decreaseCart","getTotals","Attribute","AttributeButton","FaLessThan","FaGreaterThan","changeImageIndexUp","changeImageIndexDown","Cart","Component","constructor","props","state","cartItems","cart","num","attribute","selectAttribute","item","attr","console","log","decreaseCartItemQuantity","increaseCartItemQuantity","product","componentWill","getDerivedStateFromProps","render","width","margin","backgroundColor","length","map","display","justifyContent","marginBottom","name","brand","prices","p","currency","label","symbol","amount","attributes","gap","type","items","selectedAttributes","x","id","toString","includes","height","border","cursor","color","value","lineHeight","marginTop","maxHeight","fontSize","textAlign","cartQuantity","position","gallery","imageIndex","bottom","right","changeImageDown","changeImageUp","totalQuantity","totalAmount","mapDispatchToProps","dispatch","mapStateToProps","cartTotalQuantity","cartTotalAmount","selection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,SAAlC,QAAmD,uBAAnD;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,6BAA3C;AAEA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,gBAA1C;AAEA,SACEC,kBADF,EAEEC,oBAFF,QAGO,wBAHP;;;;AAKA,MAAMC,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAaE;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,IADX;AAEXC,MAAAA,GAAG,EAAE,CAFM;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAEDC,EAAAA,eAAe,CAACC,IAAD,EAAYC,IAAZ,EAAuB;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AAEDG,EAAAA,wBAAwB,CAACJ,IAAD,EAAY;AAClC,SAAKP,KAAL,CAAWX,YAAX,CAAwBkB,IAAxB;AACA,SAAKP,KAAL,CAAWV,SAAX;AACD;;AAEDsB,EAAAA,wBAAwB,CAACC,OAAD,EAAe;AACrC,SAAKb,KAAL,CAAWZ,SAAX,CAAqB;AAAEyB,MAAAA;AAAF,KAArB,EADqC,CAErC;;AACA,SAAKb,KAAL,CAAWV,SAAX;AACD;;AAEDwB,EAAAA,aAAa,GAAG,CAAE;;AAEa,SAAxBC,wBAAwB,CAACf,KAAD,EAAaC,KAAb,EAAyB;AACtD,QAAID,KAAK,CAACG,IAAN,KAAeF,KAAK,CAACC,SAAzB,EAAoC;AAClC,aAAO;AACLA,QAAAA,SAAS,EAAEF,KAAK,CAACG;AADZ,OAAP;AAGD;;AACD,WAAO,IAAP;AACD;;AACDa,EAAAA,MAAM,GAAG;AAAA;;AACP,wBACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,eAAe,EAAE;AAHZ,OADT;AAAA,8BAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA;AAAA;AAAA;AAAA,cATF,EAUG,+BAAKlB,KAAL,CAAWC,SAAX,gFAAsBkB,MAAtB,IAA+B,CAA/B,GACC,KAAKnB,KAAL,CAAWC,SAAX,CAAqBmB,GAArB,CAA0Bd,IAAD;AAAA;;AAAA,4BACvB;AAAA,kCACE;AACE,YAAA,KAAK,EAAE;AACLe,cAAAA,OAAO,EAAE,MADJ;AAELC,cAAAA,cAAc,EAAE,eAFX;AAGLC,cAAAA,YAAY,EAAE;AAHT,aADT;AAAA,oCAOE;AAAA,sCACE;AAAA,uCACE;AAAA,4BAAIjB,IAAI,CAACkB;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,0BAAIlB,IAAI,CAACmB;AAAT;AAAA;AAAA;AAAA;AAAA,sBAJF,kBAKGnB,IAAI,CAACoB,MALR,iDAKG,aAAaN,GAAb,CACEO,CAAD,IACEA,CAAC,CAACC,QAAF,CAAWC,KAAX,KAAqB,KAAK9B,KAAL,CAAW6B,QAAhC,iBACE;AAAA,uCACE;AAAA,6BACGD,CAAC,CAACC,QAAF,CAAWE,MADd,EAEGH,CAAC,CAACI,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAHL,CALH,eAiBE;AAAA,0BACGzB,IAAI,CAAC0B,UAAL,CAAgBZ,GAAhB,CAAqBb,IAAD,iBACnB;AAAA,0CACE,QAAC,SAAD;AAAA,+BAAYA,IAAI,CAACiB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AACE,oBAAA,KAAK,EAAE;AACLH,sBAAAA,OAAO,EAAE,MADJ;AAELY,sBAAAA,GAAG,EAAE;AAFA,qBADT;AAAA,+BAMG1B,IAAI,CAAC2B,IAAL,KAAc,QAAd,IACC3B,IAAI,CAAC4B,KAAL,CAAWf,GAAX,CAAgBb,IAAD;AAAA;;AAAA,0CACb,QAAC,eAAD;AAEE,wBAAA,KAAK,EACH,yBAAAD,IAAI,CAAC8B,kBAAL,wEACIhB,GADJ,CACSiB,CAAD,IAAYA,CAAC,CAACC,EADtB,EAEGC,QAFH,GAGGC,QAHH,CAGYjC,IAAI,CAAC+B,EAHjB,IAII;AACEpB,0BAAAA,eAAe,EAAG,GAAEX,IAAI,CAAC+B,EAAG,EAD9B;AAEEG,0BAAAA,MAAM,EAAE,MAFV;AAGEzB,0BAAAA,KAAK,EAAE,MAHT;AAIE0B,0BAAAA,MAAM,EAAE,iBAJV;AAKEC,0BAAAA,MAAM,EAAE;AALV,yBAJJ,GAWI;AACEzB,0BAAAA,eAAe,EAAG,GAAEX,IAAI,CAAC+B,EAAG,EAD9B;AAEEG,0BAAAA,MAAM,EAAE,MAFV;AAGEzB,0BAAAA,KAAK,EAAE,MAHT;AAIE0B,0BAAAA,MAAM,EAAE,iBAJV;AAKEC,0BAAAA,MAAM,EAAE;AALV;AAdR,yBACOpC,IAAI,CAAC+B,EADZ;AAAA;AAAA;AAAA;AAAA,8BADa;AAAA,qBAAf,CAPJ,EAiCG/B,IAAI,CAAC2B,IAAL,KAAc,QAAd,IACC3B,IAAI,CAAC4B,KAAL,CAAWf,GAAX,CAAgBb,IAAD,iBACb,QAAC,eAAD;AAEE,sBAAA,KAAK,EACHD,IAAI,CAAC8B,kBAAL,CACGhB,GADH,CACQiB,CAAD,IAAYA,CAAC,CAAC9B,IAAF,KAAWA,IAAI,CAAC+B,EADnC,EAEGC,QAFH,GAGGC,QAHH,CAGYjC,IAAI,CAAC+B,EAHjB,IAII;AACEpB,wBAAAA,eAAe,EAAE,OADnB;AAEE0B,wBAAAA,KAAK,EAAE;AAFT,uBAJJ,GAQI,EAXR;AAAA,gCAcGrC,IAAI,CAACsC;AAdR,uBACOtC,IAAI,CAAC+B,EADZ;AAAA;AAAA;AAAA;AAAA,4BADF,CAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA,gCADD;AADH;AAAA;AAAA;AAAA;AAAA,sBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAsFE;AACE,cAAA,KAAK,EAAE;AACLjB,gBAAAA,OAAO,EAAE,MADJ;AAELY,gBAAAA,GAAG,EAAE,MAFA;AAGLa,gBAAAA,UAAU,EAAE,MAHP;AAILC,gBAAAA,SAAS,EAAE,MAJN;AAKLC,gBAAAA,SAAS,EAAE;AALN,eADT;AAAA,sCASE;AAAA,wCACE;AACE,kBAAA,OAAO,EAAE,MAAM,KAAKrC,wBAAL,CAA8BL,IAA9B,CADjB;AAEE,kBAAA,KAAK,EAAE;AACLU,oBAAAA,KAAK,EAAE,MADF;AAELyB,oBAAAA,MAAM,EAAE,MAFH;AAGLvB,oBAAAA,eAAe,EAAE,MAHZ;AAILwB,oBAAAA,MAAM,EAAE,iBAJH;AAKLC,oBAAAA,MAAM,EAAE;AALH,mBAFT;AAAA,yCAUE;AAAM,oBAAA,KAAK,EAAE;AAAEM,sBAAAA,QAAQ,EAAE;AAAZ,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,wBADF,eAaE;AAAI,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,SAAS,EAAE;AAAb,mBAAX;AAAA,4BAAqC5C,IAAI,CAAC6C;AAA1C;AAAA;AAAA;AAAA;AAAA,wBAbF,eAcE;AACE,kBAAA,KAAK,EAAE;AACLnC,oBAAAA,KAAK,EAAE,MADF;AAELyB,oBAAAA,MAAM,EAAE,MAFH;AAGLvB,oBAAAA,eAAe,EAAE,MAHZ;AAILwB,oBAAAA,MAAM,EAAE,iBAJH;AAKLC,oBAAAA,MAAM,EAAE;AALH,mBADT;AAQE,kBAAA,OAAO,EAAE,MAAM,KAAKjC,wBAAL,CAA8BJ,IAA9B,CARjB;AAAA,yCAUE;AAAM,oBAAA,KAAK,EAAE;AAAE2C,sBAAAA,QAAQ,EAAE;AAAZ,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,wBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAoCE;AACE,gBAAA,KAAK,EAAE;AACL/B,kBAAAA,eAAe,EAAE,MADZ;AAELkC,kBAAAA,QAAQ,EAAE;AAFL,iBADT;AAAA,wCAME;AACE,kBAAA,GAAG,EAAE9C,IAAI,CAAC+C,OAAL,CAAa/C,IAAI,CAACgD,UAAlB,CADP;AAEE,kBAAA,KAAK,EAAE,GAFT;AAGE,kBAAA,MAAM,EAAE,GAHV;AAIE,kBAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,wBANF,EAaG,kBAAAhD,IAAI,CAAC+C,OAAL,gEAAclC,MAAd,IAAuB,CAAvB,iBACC;AACE,kBAAA,KAAK,EAAE;AACLE,oBAAAA,OAAO,EAAE,MADJ;AAELY,oBAAAA,GAAG,EAAE,KAFA;AAGLmB,oBAAAA,QAAQ,EAAE,UAHL;AAILG,oBAAAA,MAAM,EAAE,KAJH;AAKLC,oBAAAA,KAAK,EAAE;AALF,mBADT;AAAA,0CASE,QAAC,UAAD;AACE,oBAAA,KAAK,EAAE;AAAEtC,sBAAAA,eAAe,EAAE,OAAnB;AAA4B0B,sBAAAA,KAAK,EAAE;AAAnC,qBADT;AAEE,oBAAA,OAAO,EAAE,MAAM,KAAK7C,KAAL,CAAW0D,eAAX,CAA2BnD,IAA3B;AAFjB;AAAA;AAAA;AAAA;AAAA,0BATF,eAaE,QAAC,aAAD;AACE,oBAAA,KAAK,EAAE;AAAEY,sBAAAA,eAAe,EAAE,OAAnB;AAA4B0B,sBAAAA,KAAK,EAAE;AAAnC,qBADT;AAEE,oBAAA,OAAO,EAAE,MAAM,KAAK7C,KAAL,CAAW2D,aAAX,CAAyBpD,IAAzB;AAFjB;AAAA;AAAA;AAAA;AAAA,0BAbF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBApCF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA+JE;AAAA;AAAA;AAAA;AAAA,kBA/JF;AAAA,wBADuB;AAAA,OAAzB,CADD,gBAqKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/KJ,EAiLG,0BAAKP,KAAL,CAAWG,IAAX,sEAAiBiB,MAAjB,IAA0B,CAA1B,iBACC;AACE,QAAA,KAAK,EAAE;AACLE,UAAAA,OAAO,EAAE,MADJ;AAEL0B,UAAAA,SAAS,EAAE;AAFN,SADT;AAAA,gCAME;AAAA,2CACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAA,2CACO;AAAA,sBAAI,KAAKhD,KAAL,CAAW4D;AAAf;AAAA;AAAA;AAAA;AAAA,kBADP;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE;AAAA,iCACE;AAAA,+CACS;AAAA,wBAAI,KAAK5D,KAAL,CAAW6D;AAAf;AAAA;AAAA;AAAA;AAAA,oBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAiBE;AACE,UAAA,KAAK,EAAE;AACL5C,YAAAA,KAAK,EAAE,OADF;AAELyB,YAAAA,MAAM,EAAE,MAFH;AAGLvB,YAAAA,eAAe,EAAE,OAHZ;AAIL0B,YAAAA,KAAK,EAAE,OAJF;AAKLF,YAAAA,MAAM,EAAE;AALH,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlLJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmND;;AAvPD;;AA0PF,SAASmB,kBAAT,CAA4BC,QAA5B,EAAmD;AACjD,SAAO;AACL1E,IAAAA,YAAY,EAAGwB,OAAD,IAAkBkD,QAAQ,CAAC1E,YAAY,CAACwB,OAAD,CAAb,CADnC;AAELzB,IAAAA,SAAS,EAAGyB,OAAD,IAAkBkD,QAAQ,CAAC3E,SAAS,CAACyB,OAAD,CAAV,CAFhC;AAGLvB,IAAAA,SAAS,EAAE,MAAMyE,QAAQ,CAACzE,SAAS,EAAV,CAHpB;AAILqE,IAAAA,aAAa,EAAGpD,IAAD,IAAewD,QAAQ,CAACpE,kBAAkB,CAACY,IAAD,CAAnB,CAJjC;AAMLmD,IAAAA,eAAe,EAAGnD,IAAD,IAAewD,QAAQ,CAACnE,oBAAoB,CAACW,IAAD,CAArB;AANnC,GAAP;AAQD;;AAED,MAAMyD,eAAe,GAAI/D,KAAD,IAAsB;AAC5C,SAAO;AACLE,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,CAAWD,SADZ;AAEL0D,IAAAA,aAAa,EAAE3D,KAAK,CAACE,IAAN,CAAW8D,iBAFrB;AAGLJ,IAAAA,WAAW,EAAE5D,KAAK,CAACE,IAAN,CAAW+D,eAHnB;AAILrC,IAAAA,QAAQ,EAAE5B,KAAK,CAACkE,SAAN,CAAgB,kBAAhB;AAJL,GAAP;AAMD,CAPD;;AASA,eAAehF,OAAO,CAAC6E,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CjE,IAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { setCategory, setCurrency } from \"../../redux/selectSlice\";\n\nimport { addToCart, decreaseCart, getTotals } from \"../../redux/cartSlice\";\nimport { Attribute, AttributeButton } from \"../../styles/productDetails\";\nimport { CartTypes, ItemProps } from \"../../types\";\nimport { FaLessThan, FaGreaterThan } from \"react-icons/fa\";\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport {\n  changeImageIndexUp,\n  changeImageIndexDown,\n} from \"../..//redux/cartSlice\";\n\nclass Cart extends React.Component<\n  {\n    cart: [];\n    decreaseCart: any;\n    addToCart: any;\n    totalQuantity: number;\n    totalAmount: number;\n    getTotals: any;\n    currency: string;\n    changeImageUp: any;\n    changeImageDown: any;\n  },\n  CartTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      cartItems: this.props.cart,\n      num: 1,\n      attribute: \"\",\n    };\n  }\n\n  selectAttribute(item: any, attr: any) {\n    console.log(attr);\n  }\n\n  decreaseCartItemQuantity(item: any) {\n    this.props.decreaseCart(item);\n    this.props.getTotals();\n  }\n\n  increaseCartItemQuantity(product: any) {\n    this.props.addToCart({ product });\n    // this.props.addToCart({ product, attr });\n    this.props.getTotals();\n  }\n\n  componentWill() {}\n\n  static getDerivedStateFromProps(props: any, state: any) {\n    if (props.cart !== state.cartItems) {\n      return {\n        cartItems: props.cart,\n      };\n    }\n    return null;\n  }\n  render() {\n    return (\n      <div\n        style={{\n          width: \"88%\",\n          margin: \"auto\",\n          backgroundColor: \"#fff\",\n        }}\n      >\n        <h3>CART</h3>\n        <br />\n        <hr />\n        {this.state.cartItems?.length > 0 ? (\n          this.state.cartItems.map((item: ItemProps) => (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginBottom: \"15px\",\n                }}\n              >\n                <div>\n                  <h2>\n                    <b>{item.name}</b>\n                  </h2>\n                  <p>{item.brand}</p>\n                  {item.prices?.map(\n                    (p) =>\n                      p.currency.label === this.props.currency && (\n                        <p>\n                          <b>\n                            {p.currency.symbol}\n                            {p.amount}\n                          </b>\n                        </p>\n                      )\n                  )}\n\n                  <div>\n                    {item.attributes.map((attr: any) => (\n                      <>\n                        <Attribute>{attr.name}:</Attribute>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            gap: \"10px\",\n                          }}\n                        >\n                          {attr.type === \"swatch\" &&\n                            attr.items.map((attr: any) => (\n                              <AttributeButton\n                                key={attr.id}\n                                style={\n                                  item.selectedAttributes\n                                    ?.map((x: any) => x.id)\n                                    .toString()\n                                    .includes(attr.id)\n                                    ? {\n                                        backgroundColor: `${attr.id}`,\n                                        height: \"20px\",\n                                        width: \"20px\",\n                                        border: \"3px solid black\",\n                                        cursor: \"pointer\",\n                                      }\n                                    : {\n                                        backgroundColor: `${attr.id}`,\n                                        height: \"20px\",\n                                        width: \"20px\",\n                                        border: \"1px solid black\",\n                                        cursor: \"pointer\",\n                                      }\n                                }\n                              ></AttributeButton>\n                            ))}\n\n                          {attr.type !== \"swatch\" &&\n                            attr.items.map((attr: any) => (\n                              <AttributeButton\n                                key={attr.id}\n                                style={\n                                  item.selectedAttributes\n                                    .map((x: any) => x.attr === attr.id)\n                                    .toString()\n                                    .includes(attr.id)\n                                    ? {\n                                        backgroundColor: \"black\",\n                                        color: \"white\",\n                                      }\n                                    : {}\n                                }\n                              >\n                                {attr.value}\n                              </AttributeButton>\n                            ))}\n                        </div>\n                      </>\n                    ))}\n                  </div>\n                </div>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"10px\",\n                    lineHeight: \"60px\",\n                    marginTop: \"15px\",\n                    maxHeight: \"100%\",\n                  }}\n                >\n                  <div>\n                    <button\n                      onClick={() => this.increaseCartItemQuantity(item)}\n                      style={{\n                        width: \"30px\",\n                        height: \"30px\",\n                        backgroundColor: \"#fff\",\n                        border: \"1px solid black\",\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      <span style={{ fontSize: \"25px\" }}>+</span>\n                    </button>\n                    <h4 style={{ textAlign: \"center\" }}>{item.cartQuantity}</h4>\n                    <button\n                      style={{\n                        width: \"30px\",\n                        height: \"30px\",\n                        backgroundColor: \"#fff\",\n                        border: \"1px solid black\",\n                        cursor: \"pointer\",\n                      }}\n                      onClick={() => this.decreaseCartItemQuantity(item)}\n                    >\n                      <span style={{ fontSize: \"25px\" }}>-</span>\n                    </button>\n                  </div>\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <img\n                      src={item.gallery[item.imageIndex]}\n                      width={200}\n                      height={205}\n                      alt=\"itemImg\"\n                    />\n\n                    {item.gallery?.length > 1 && (\n                      <div\n                        style={{\n                          display: \"flex\",\n                          gap: \"4px\",\n                          position: \"absolute\",\n                          bottom: \"15%\",\n                          right: \"6%\",\n                        }}\n                      >\n                        <FaLessThan\n                          style={{ backgroundColor: \"black\", color: \"white\" }}\n                          onClick={() => this.props.changeImageDown(item)}\n                        />\n                        <FaGreaterThan\n                          style={{ backgroundColor: \"black\", color: \"white\" }}\n                          onClick={() => this.props.changeImageUp(item)}\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <hr />\n            </>\n          ))\n        ) : (\n          <div>No Items in Cart</div>\n        )}\n        {this.props.cart?.length > 0 && (\n          <div\n            style={{\n              display: \"grid\",\n              marginTop: \"30px\",\n            }}\n          >\n            <span>\n              Tax: <b>15</b>\n            </span>\n            <span>\n              Qty: <b>{this.props.totalQuantity}</b>\n            </span>\n            <div>\n              <span>\n                Total: <b>{this.props.totalAmount}</b>\n              </span>\n            </div>\n            <button\n              style={{\n                width: \"132px\",\n                height: \"30px\",\n                backgroundColor: \"green\",\n                color: \"white\",\n                border: \"none\",\n              }}\n            >\n              Order\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: AppDispatch) {\n  return {\n    decreaseCart: (product: any) => dispatch(decreaseCart(product)),\n    addToCart: (product: any) => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n    changeImageUp: (item: any) => dispatch(changeImageIndexUp(item)),\n\n    changeImageDown: (item: any) => dispatch(changeImageIndexDown(item)),\n  };\n}\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    cart: state.cart.cartItems,\n    totalQuantity: state.cart.cartTotalQuantity,\n    totalAmount: state.cart.cartTotalAmount,\n    currency: state.selection[\"selectedCurrency\"],\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}