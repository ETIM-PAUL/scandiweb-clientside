{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx\";\nimport React from \"react\";\nimport { FirstContainer, Heading, CardsContainer, Card, WaterMark, CardTitle, Cart, Banner } from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { BsCart } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { Get_ProductList } from \"../../queries\"; // import { mapDispatchToProps } from \"../../redux/redux-functions\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductsListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      num: 0,\n      category: this.props.category,\n      currency: this.props.currency\n    };\n  }\n\n  componentDidMount() {\n    let category = this.props.category;\n\n    try {\n      Get_ProductList(category).then(result => {\n        var _result$data$category, _result$data$category2, _result$data$category3;\n\n        console.log(result.data.category);\n        this.setState({\n          products: (_result$data$category = result.data.category) === null || _result$data$category === void 0 ? void 0 : _result$data$category.products,\n          category: (_result$data$category2 = result.data.category) === null || _result$data$category2 === void 0 ? void 0 : _result$data$category2.name\n        });\n        console.log((_result$data$category3 = result.data.category) === null || _result$data$category3 === void 0 ? void 0 : _result$data$category3.products);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    let currency = this.props.currency;\n    let category = this.props.category;\n\n    if (prevState.category !== category || prevState.currency !== currency) {\n      var _this$props$currency, _this$props$currency2, _this$props$currency3, _this$props$currency4, _this$props$currency5;\n\n      Get_ProductList(category).then(result => {\n        this.setState({\n          products: result.data.category.products\n        });\n      });\n\n      if ((_this$props$currency = this.props.currency) !== null && _this$props$currency !== void 0 && _this$props$currency.includes(\"USD\")) {\n        this.setState({\n          num: 0\n        });\n      }\n\n      if ((_this$props$currency2 = this.props.currency) !== null && _this$props$currency2 !== void 0 && _this$props$currency2.includes(\"GBP\")) {\n        this.setState({\n          num: 1\n        });\n      }\n\n      if ((_this$props$currency3 = this.props.currency) !== null && _this$props$currency3 !== void 0 && _this$props$currency3.includes(\"AUD\")) {\n        this.setState({\n          num: 2\n        });\n      }\n\n      if ((_this$props$currency4 = this.props.currency) !== null && _this$props$currency4 !== void 0 && _this$props$currency4.includes(\"JPY\")) {\n        this.setState({\n          num: 3\n        });\n      }\n\n      if ((_this$props$currency5 = this.props.currency) !== null && _this$props$currency5 !== void 0 && _this$props$currency5.includes(\"RUB\")) {\n        this.setState({\n          num: 4\n        });\n      }\n    }\n  }\n\n  render() {\n    var _this$state$products;\n\n    let numm = this.state.num;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FirstContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: [this.props.category, \" categories\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {\n          children: ((_this$state$products = this.state.products) === null || _this$state$products === void 0 ? void 0 : _this$state$products.length) >= 0 && this.state.products.map(x => /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Banner, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: x.gallery[0],\n                height: 250,\n                width: 250,\n                alt: \"Product Img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), x.inStock === false && /*#__PURE__*/_jsxDEV(WaterMark, {\n                children: \"Out of stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${x.id}`,\n                children: /*#__PURE__*/_jsxDEV(Cart, {\n                  children: /*#__PURE__*/_jsxDEV(BsCart, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px\"\n              },\n              children: [x.prices[numm].currency.symbol, x.prices[numm].amount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), x.prices.map(p => p.currency.label === this.props.currency && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [p.currency.symbol, p.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this))]\n          }, x.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport function mapStateToProps(state) {\n  return {\n    category: state.selection[\"selectedCategory\"],\n    currency: state.selection[\"selectedCurrency\"]\n  };\n}\nexport default connect(mapStateToProps, null)(ProductsListing);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx"],"names":["React","FirstContainer","Heading","CardsContainer","Card","WaterMark","CardTitle","Cart","Banner","connect","BsCart","Link","Get_ProductList","ProductsListing","Component","constructor","props","state","products","num","category","currency","componentDidMount","then","result","console","log","data","setState","name","error","componentDidUpdate","prevState","includes","render","numm","length","map","x","gallery","inStock","id","padding","prices","symbol","amount","p","label","mapStateToProps","selection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,cADF,EAEEC,OAFF,EAGEC,cAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,MARF,QASO,8BATP;AAUA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,eAAhC,C,CACA;;;;;AAEA,MAAMC,eAAN,SAA8Bb,KAAK,CAACc,SAApC,CAGE;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,GAAG,EAAE,CAFM;AAGXC,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QAHV;AAIXC,MAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK;AAJV,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIF,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAA1B;;AACA,QAAI;AACFR,MAAAA,eAAe,CAACQ,QAAD,CAAf,CAA0BG,IAA1B,CAAgCC,MAAD,IAAY;AAAA;;AACzCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYP,QAAxB;AACA,aAAKQ,QAAL,CAAc;AACZV,UAAAA,QAAQ,2BAAEM,MAAM,CAACG,IAAP,CAAYP,QAAd,0DAAE,sBAAsBF,QADpB;AAEZE,UAAAA,QAAQ,4BAAEI,MAAM,CAACG,IAAP,CAAYP,QAAd,2DAAE,uBAAsBS;AAFpB,SAAd;AAIAJ,QAAAA,OAAO,CAACC,GAAR,2BAAYF,MAAM,CAACG,IAAP,CAAYP,QAAxB,2DAAY,uBAAsBF,QAAlC;AACD,OAPD;AAQD,KATD,CASE,OAAOY,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAiB;AACjC,QAAIX,QAAQ,GAAG,KAAKL,KAAL,CAAWK,QAA1B;AACA,QAAID,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAA1B;;AACA,QAAIY,SAAS,CAACZ,QAAV,KAAuBA,QAAvB,IAAmCY,SAAS,CAACX,QAAV,KAAuBA,QAA9D,EAAwE;AAAA;;AACtET,MAAAA,eAAe,CAACQ,QAAD,CAAf,CAA0BG,IAA1B,CAAgCC,MAAD,IAAY;AACzC,aAAKI,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAEM,MAAM,CAACG,IAAP,CAAYP,QAAZ,CAAqBF;AADnB,SAAd;AAGD,OAJD;;AAKA,kCAAI,KAAKF,KAAL,CAAWK,QAAf,iDAAI,qBAAqBY,QAArB,CAA8B,KAA9B,CAAJ,EAA0C;AACxC,aAAKL,QAAL,CAAc;AAAET,UAAAA,GAAG,EAAE;AAAP,SAAd;AACD;;AACD,mCAAI,KAAKH,KAAL,CAAWK,QAAf,kDAAI,sBAAqBY,QAArB,CAA8B,KAA9B,CAAJ,EAA0C;AACxC,aAAKL,QAAL,CAAc;AAAET,UAAAA,GAAG,EAAE;AAAP,SAAd;AACD;;AACD,mCAAI,KAAKH,KAAL,CAAWK,QAAf,kDAAI,sBAAqBY,QAArB,CAA8B,KAA9B,CAAJ,EAA0C;AACxC,aAAKL,QAAL,CAAc;AAAET,UAAAA,GAAG,EAAE;AAAP,SAAd;AACD;;AACD,mCAAI,KAAKH,KAAL,CAAWK,QAAf,kDAAI,sBAAqBY,QAArB,CAA8B,KAA9B,CAAJ,EAA0C;AACxC,aAAKL,QAAL,CAAc;AAAET,UAAAA,GAAG,EAAE;AAAP,SAAd;AACD;;AACD,mCAAI,KAAKH,KAAL,CAAWK,QAAf,kDAAI,sBAAqBY,QAArB,CAA8B,KAA9B,CAAJ,EAA0C;AACxC,aAAKL,QAAL,CAAc;AAAET,UAAAA,GAAG,EAAE;AAAP,SAAd;AACD;AACF;AACF;;AAEDe,EAAAA,MAAM,GAAG;AAAA;;AACP,QAAIC,IAAI,GAAG,KAAKlB,KAAL,CAAWE,GAAtB;AACA,wBACE;AAAA,6BACE,QAAC,cAAD;AAAA,gCACE,QAAC,OAAD;AAAA,qBAAU,KAAKH,KAAL,CAAWI,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,cAAD;AAAA,oBACG,8BAAKH,KAAL,CAAWC,QAAX,8EAAqBkB,MAArB,KAA+B,CAA/B,IACC,KAAKnB,KAAL,CAAWC,QAAX,CAAoBmB,GAApB,CAAyBC,CAAD,iBACtB,QAAC,IAAD;AAAA,oCACE,QAAC,MAAD;AAAA,sCACE;AACE,gBAAA,GAAG,EAAEA,CAAC,CAACC,OAAF,CAAU,CAAV,CADP;AAEE,gBAAA,MAAM,EAAE,GAFV;AAGE,gBAAA,KAAK,EAAE,GAHT;AAIE,gBAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,sBADF,EAOGD,CAAC,CAACE,OAAF,KAAc,KAAd,iBAAuB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAP1B,eAQE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,YAAWF,CAAC,CAACG,EAAG,EAA3B;AAAA,uCACE,QAAC,IAAD;AAAA,yCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAgBE,QAAC,SAAD;AAAA,wBAAYH,CAAC,CAACT;AAAd;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAiBE;AAAK,cAAA,KAAK,EAAE;AAAEa,gBAAAA,OAAO,EAAE;AAAX,eAAZ;AAAA,yBACGJ,CAAC,CAACK,MAAF,CAASR,IAAT,EAAed,QAAf,CAAwBuB,MAD3B,EAEGN,CAAC,CAACK,MAAF,CAASR,IAAT,EAAeU,MAFlB,eAGE;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF,EAuBGP,CAAC,CAACK,MAAF,CAASN,GAAT,CACES,CAAD,IACEA,CAAC,CAACzB,QAAF,CAAW0B,KAAX,KAAqB,KAAK/B,KAAL,CAAWK,QAAhC,iBACE;AAAA,qCACE;AAAA,2BACGyB,CAAC,CAACzB,QAAF,CAAWuB,MADd,EAEGE,CAAC,CAACD,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAHL,CAvBH;AAAA,aAAWP,CAAC,CAACT,IAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA+CD;;AAtGD;;AAyGF,OAAO,SAASmB,eAAT,CAAyB/B,KAAzB,EAAqC;AAC1C,SAAO;AACLG,IAAAA,QAAQ,EAAEH,KAAK,CAACgC,SAAN,CAAgB,kBAAhB,CADL;AAEL5B,IAAAA,QAAQ,EAAEJ,KAAK,CAACgC,SAAN,CAAgB,kBAAhB;AAFL,GAAP;AAID;AAED,eAAexC,OAAO,CAACuC,eAAD,EAAkB,IAAlB,CAAP,CAA+BnC,eAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { gql } from \"@apollo/client\";\nimport {\n  FirstContainer,\n  Heading,\n  CardsContainer,\n  Card,\n  WaterMark,\n  CardTitle,\n  Cart,\n  Banner,\n} from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { CardPropsTypes } from \"../../types\";\nimport { BsCart } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { Get_ProductList } from \"../../queries\";\n// import { mapDispatchToProps } from \"../../redux/redux-functions\";\n\nclass ProductsListing extends React.Component<\n  { category: string; currency: string },\n  { products: []; num: number; category: string; currency: string }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      num: 0,\n      category: this.props.category,\n      currency: this.props.currency,\n    };\n  }\n  componentDidMount() {\n    let category = this.props.category;\n    try {\n      Get_ProductList(category).then((result) => {\n        console.log(result.data.category);\n        this.setState({\n          products: result.data.category?.products,\n          category: result.data.category?.name,\n        });\n        console.log(result.data.category?.products);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevState: any) {\n    let currency = this.props.currency;\n    let category = this.props.category;\n    if (prevState.category !== category || prevState.currency !== currency) {\n      Get_ProductList(category).then((result) => {\n        this.setState({\n          products: result.data.category.products,\n        });\n      });\n      if (this.props.currency?.includes(\"USD\")) {\n        this.setState({ num: 0 });\n      }\n      if (this.props.currency?.includes(\"GBP\")) {\n        this.setState({ num: 1 });\n      }\n      if (this.props.currency?.includes(\"AUD\")) {\n        this.setState({ num: 2 });\n      }\n      if (this.props.currency?.includes(\"JPY\")) {\n        this.setState({ num: 3 });\n      }\n      if (this.props.currency?.includes(\"RUB\")) {\n        this.setState({ num: 4 });\n      }\n    }\n  }\n\n  render() {\n    let numm = this.state.num;\n    return (\n      <>\n        <FirstContainer>\n          <Heading>{this.props.category} categories</Heading>\n          <CardsContainer>\n            {this.state.products?.length >= 0 &&\n              this.state.products.map((x: CardPropsTypes) => (\n                <Card key={x.name}>\n                  <Banner>\n                    <img\n                      src={x.gallery[0]}\n                      height={250}\n                      width={250}\n                      alt=\"Product Img\"\n                    />\n                    {x.inStock === false && <WaterMark>Out of stock</WaterMark>}\n                    <Link to={`/product/${x.id}`}>\n                      <Cart>\n                        <BsCart />\n                      </Cart>\n                    </Link>\n                  </Banner>\n\n                  <CardTitle>{x.name}</CardTitle>\n                  <div style={{ padding: \"5px\" }}>\n                    {x.prices[numm].currency.symbol}\n                    {x.prices[numm].amount}\n                    <br />\n                  </div>\n\n                  {x.prices.map(\n                    (p: any) =>\n                      p.currency.label === this.props.currency && (\n                        <p>\n                          <b>\n                            {p.currency.symbol}\n                            {p.amount}\n                          </b>\n                        </p>\n                      )\n                  )}\n                </Card>\n              ))}\n          </CardsContainer>\n        </FirstContainer>\n      </>\n    );\n  }\n}\n\nexport function mapStateToProps(state: any) {\n  return {\n    category: state.selection[\"selectedCategory\"],\n    currency: state.selection[\"selectedCurrency\"],\n  };\n}\n\nexport default connect(mapStateToProps, null)(ProductsListing);\n"]},"metadata":{},"sourceType":"module"}