{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0\n};\n\nconst compareItemAttributes = (attribute1, attribute2) => {\n  const keys1 = Object.keys(attribute1);\n  const keys2 = Object.keys(attribute2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (let key of keys1) {\n    if (attribute1[key] !== attribute2[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, _ref) => {\n      let {\n        payload,\n        type\n      } = _ref;\n      // console.log(payload)\n      const exist = state.cartItems.find(item => item.id === payload.product.id);\n\n      if (exist) {\n        const existingItemIndex = state.cartItems.findIndex(item => item.id === payload.product.id && compareItemAttributes(item.selectedAttributes, payload.attribute));\n        const existingItem = state.cartItems.find(item => item.id === payload.product.id && compareItemAttributes(item.selectedAttributes, payload.attribute));\n\n        if (!existingItem) {\n          let tempProductItem = { ...payload.product,\n            cartQuantity: 1,\n            imageIndex: 0,\n            selectedAttributes: payload.attribute\n          };\n          state.cartItems.push(tempProductItem);\n        } else if (existingItem) {\n          state.cartItems[existingItemIndex] = { ...state.cartItems[existingItemIndex],\n            cartQuantity: state.cartItems[existingItemIndex].cartQuantity += 1\n          };\n        }\n      } else {\n        let tempProductItem = { ...payload.product,\n          cartQuantity: 1,\n          imageIndex: 0,\n          selectedAttributes: payload.attribute\n        };\n        state.cartItems.push(tempProductItem);\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    decreaseCart(state, _ref2) {\n      let {\n        payload,\n        type\n      } = _ref2;\n      const itemIndex = state.cartItems.findIndex(item => item.id === payload.product.id && compareItemAttributes(item.selectedAttributes, payload.attribute));\n\n      if (itemIndex > -1) {\n        if (state.cartItems[itemIndex].cartQuantity > 1) {\n          state.cartItems[itemIndex].cartQuantity -= 1;\n        } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n          //  state.cartItems.splice(itemIndex)\n          const nextCartItems = state.cartItems.filter(item => state.cartItems.indexOf(item) !== itemIndex);\n          state.cartItems = nextCartItems;\n        }\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n\n    getTotals(state) {\n      let totalPrice = 0;\n      let total = 0;\n      let {\n        quantity\n      } = state.cartItems.reduce((cartTotal, cartItem) => {\n        const {\n          cartQuantity\n        } = cartItem;\n        cartTotal.quantity += cartQuantity;\n        return cartTotal;\n      }, {\n        quantity: 0\n      });\n      state.cartItems.forEach(i => {\n        const pricesProxy = JSON.parse(JSON.stringify(i.prices));\n        const amount = pricesProxy.filter(x => x.currency.symbol === localStorage.getItem(\"currency\"))[0];\n        total += amount.amount * i.cartQuantity;\n      });\n      totalPrice = parseFloat(total.toFixed(2));\n      state.cartTotalAmount = totalPrice;\n      state.cartTotalQuantity = quantity;\n    },\n\n    changeImageIndexUp(state, _ref3) {\n      let {\n        payload,\n        type\n      } = _ref3;\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.id && compareItemAttributes(item.selectedAttributes, payload.selectedAttributes));\n\n      if (existingIndex >= 0) {\n        if (state.cartItems[existingIndex].imageIndex === payload.gallery.length - 1) {\n          state.cartItems[existingIndex].imageIndex = 0;\n        } else if (state.cartItems[existingIndex].imageIndex >= 0) {\n          state.cartItems[existingIndex].imageIndex += 1;\n        }\n      }\n    },\n\n    changeImageIndexDown(state, _ref4) {\n      let {\n        payload,\n        type\n      } = _ref4;\n      const existingIndex = state.cartItems.findIndex(item => item.id === payload.id && compareItemAttributes(item.selectedAttributes, payload.selectedAttributes));\n\n      if (existingIndex >= 0) {\n        if (state.cartItems[existingIndex].imageIndex > 0) {\n          state.cartItems[existingIndex].imageIndex -= 1;\n        } else if (state.cartItems[existingIndex].imageIndex === 0) {\n          state.cartItems[existingIndex].imageIndex = payload.gallery.length - 1;\n        }\n      }\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  decreaseCart,\n  getTotals,\n  changeImageIndexUp,\n  changeImageIndexDown\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/admin/Documents/client-side/src/redux/cartSlice.ts"],"names":["createSlice","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","cartTotalAmount","compareItemAttributes","attribute1","attribute2","keys1","Object","keys","keys2","length","key","cartSlice","name","reducers","addToCart","state","payload","type","exist","find","item","id","product","existingItemIndex","findIndex","selectedAttributes","attribute","existingItem","tempProductItem","cartQuantity","imageIndex","push","setItem","stringify","decreaseCart","itemIndex","nextCartItems","filter","indexOf","getTotals","totalPrice","total","quantity","reduce","cartTotal","cartItem","forEach","i","pricesProxy","prices","amount","x","currency","symbol","parseFloat","toFixed","changeImageIndexUp","existingIndex","gallery","changeImageIndexDown","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cartItems: localStorage.getItem(\"cartItems\")\n    ? JSON.parse(localStorage.getItem(\"cartItems\")!)\n    : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0,\n};\n\nconst compareItemAttributes = (attribute1:any, attribute2:any) => {\n  const keys1 = Object.keys(attribute1);\n  const keys2 = Object.keys(attribute2);\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n  for (let key of keys1) {\n    if (attribute1[key] !== attribute2[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, {payload,type}) => {\n      // console.log(payload)\n      const exist = state.cartItems.find(\n        (item:any) => item.id === payload.product.id\n        );\n        if (exist) {\n          const existingItemIndex = state.cartItems.findIndex(\n            (item:any) => item.id === payload.product.id && compareItemAttributes(item.selectedAttributes,payload.attribute)\n          );\n          const existingItem = state.cartItems.find(\n            (item:any) => item.id === payload.product.id && compareItemAttributes(item.selectedAttributes,payload.attribute)\n            );\n        if(!existingItem) \n        { \n          let tempProductItem = { ...payload.product, cartQuantity: 1, imageIndex: 0,selectedAttributes:payload.attribute };\n          state.cartItems.push(tempProductItem);\n        } else \n        if( existingItem){ \n          state.cartItems[existingItemIndex] = {\n            ...state.cartItems[existingItemIndex],\n            cartQuantity: state.cartItems[existingItemIndex].cartQuantity += 1,\n          };\n        }\n      } \n      else {\n        let tempProductItem = { ...payload.product, cartQuantity: 1, imageIndex: 0,selectedAttributes:payload.attribute };\n        state.cartItems.push(tempProductItem);\n      }\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    \n    decreaseCart(state, {payload, type}) {\n      const itemIndex = state.cartItems.findIndex(\n        (item:any) => item.id === payload.product.id && compareItemAttributes(item.selectedAttributes,payload.attribute)\n        );\n        if(itemIndex > -1 ){\n          if (state.cartItems[itemIndex].cartQuantity > 1) {\n            state.cartItems[itemIndex].cartQuantity -= 1;\n          } else if (state.cartItems[itemIndex].cartQuantity === 1) {\n        //  state.cartItems.splice(itemIndex)\n         const nextCartItems = state.cartItems.filter(\n          (item:any) => state.cartItems.indexOf(item) !== itemIndex\n        );\n  \n        state.cartItems = nextCartItems;\n        }      \n        }\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    \n    getTotals(state) {\n      let totalPrice = 0;\n      let total = 0\n\n      let { quantity } = state.cartItems.reduce(\n        (cartTotal:any, cartItem:any) => {\n          const {cartQuantity } = cartItem;\n          cartTotal.quantity += cartQuantity;       \n          return cartTotal;\n        },\n        {\n          quantity: 0,\n        }\n        );\n        state.cartItems.forEach((i: any) => {\n          const pricesProxy = JSON.parse(JSON.stringify(i.prices))\n          const amount = pricesProxy.filter((x: any) => x.currency.symbol === localStorage.getItem(\"currency\"))[0]\n          total += amount.amount * i.cartQuantity\n        })\n        totalPrice = parseFloat(total.toFixed(2));\n        state.cartTotalAmount = totalPrice;\n        state.cartTotalQuantity = quantity;\n      },\n\n      changeImageIndexUp(state, {payload,type}) {\n        const existingIndex = state.cartItems.findIndex(\n          (item:any) => item.id === payload.id && compareItemAttributes(item.selectedAttributes,payload.selectedAttributes)\n        );\n        \n        if (existingIndex >= 0) {\n         if(state.cartItems[existingIndex].imageIndex === (payload.gallery.length-1)){\n           state.cartItems[existingIndex].imageIndex = 0\n         }\n         else if(state.cartItems[existingIndex].imageIndex >= 0){\n           state.cartItems[existingIndex].imageIndex += 1\n         }\n        }\n  \n      },\n\n      changeImageIndexDown(state, {payload,type}) {\n        const existingIndex = state.cartItems.findIndex(\n          (item:any) => item.id === payload.id && compareItemAttributes(item.selectedAttributes,payload.selectedAttributes)\n        );\n        if (existingIndex >= 0) {\n         if(state.cartItems[existingIndex].imageIndex > 0){\n           state.cartItems[existingIndex].imageIndex -= 1\n         }\n         else if(state.cartItems[existingIndex].imageIndex === 0){\n          state.cartItems[existingIndex].imageIndex = (payload.gallery.length-1)\n        }\n        }\n  \n      },\n  }\n});\n\nexport const { addToCart, decreaseCart,  getTotals, changeImageIndexUp, changeImageIndexDown } =\n  cartSlice.actions;\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}