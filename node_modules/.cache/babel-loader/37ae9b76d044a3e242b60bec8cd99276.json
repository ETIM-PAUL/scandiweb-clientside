{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/TopNav/index.tsx\";\nimport React from \"react\";\nimport { BsCart } from \"react-icons/bs\";\nimport { TopHeading, Item, Logo, Menu, SingleIcon, CartSpan, Overlay, MiniCart, CartDiv } from \"../../styles/topNav\";\nimport { connect } from \"react-redux\";\nimport { setCategory, setCurrency } from \"../../redux/selectSlice\";\nimport { Get_Category, Get_Currency } from \"../../queries\";\nimport { getTotals } from \"../../redux/cartSlice\";\nimport CartOverlay from \"../Cart/CartOverlay\";\nimport logo from \"../../img/alogo.png\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TopNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      categories: [],\n      category: \"\",\n      currencies: [],\n      currency: \"\",\n      currencySymbol: \"\"\n    };\n  }\n\n  selectedCategoryTitle(title) {\n    this.setState({\n      category: title\n    });\n    this.props.setCategory(title);\n  }\n\n  selectedCurrencyType(currency, symbol) {\n    this.setState({\n      currency: currency\n    });\n    this.props.setCurrency(currency);\n    this.props.setTotalPrice();\n    console.log(symbol);\n  }\n\n  componentDidMount() {\n    Get_Category().then(result => {\n      this.setState({\n        categories: result.data.categories,\n        category: result.data.categories[0].name\n      });\n      this.props.setCategory(this.state.category);\n    });\n    Get_Currency().then(result => {\n      this.setState({\n        currencies: result.data.currencies,\n        currency: result.data.currencies[0].symbol\n      });\n      this.props.setCurrency(this.state.currency);\n    });\n  }\n\n  render() {\n    var _this$state$categorie, _this$state$currencie;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(TopHeading, {\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          children: this.state.categories.length > 0 && ((_this$state$categorie = this.state.categories) === null || _this$state$categorie === void 0 ? void 0 : _this$state$categorie.map(cat => /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              id: cat.name,\n              onClick: e => this.selectedCategoryTitle(e.target.id),\n              style: localStorage.getItem(\"category\") === cat.name ? {\n                color: \"green\",\n                textDecoration: \"underline\"\n              } : {},\n              children: cat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n          children: [/*#__PURE__*/_jsxDEV(CartDiv, {\n            children: [/*#__PURE__*/_jsxDEV(BsCart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CartSpan, {\n              children: this.props.totalQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n              children: /*#__PURE__*/_jsxDEV(MiniCart, {\n                children: /*#__PURE__*/_jsxDEV(CartOverlay, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SingleIcon, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                cursor: \"pointer\",\n                height: \"30px\",\n                marginTop: \"5px\",\n                boxShadow: \"5px 5px 5px 5px #1410100d\"\n              },\n              children: \"$ ^\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  position: \"absolute\",\n                  cursor: \"pointer\",\n                  listStyle: \"none\",\n                  padding: \"15px 15px\",\n                  width: \"60px\",\n                  height: \"100px\",\n                  marginTop: \"5px\",\n                  boxShadow: \"5px 5px 5px 5px #1410100d\"\n                },\n                children: (_this$state$currencie = this.state.currencies) === null || _this$state$currencie === void 0 ? void 0 : _this$state$currencie.map(cur => /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: e => this.selectedCurrencyType(e.target.value, e.target.id),\n                  id: cur.symbol,\n                  value: cur.label.toString(),\n                  children: [cur.symbol, \" \\xA0 \", cur.label]\n                }, cur.symbol, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCategory: category => dispatch(setCategory(category)),\n    setCurrency: currency => dispatch(setCurrency(currency)),\n    setTotalPrice: () => dispatch(getTotals())\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    totalQuantity: state.cart.cartTotalQuantity\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNav);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/TopNav/index.tsx"],"names":["React","BsCart","TopHeading","Item","Logo","Menu","SingleIcon","CartSpan","Overlay","MiniCart","CartDiv","connect","setCategory","setCurrency","Get_Category","Get_Currency","getTotals","CartOverlay","logo","NoStyleDiv","Link","TopNav","Component","constructor","props","state","products","categories","category","currencies","currency","currencySymbol","selectedCategoryTitle","title","setState","selectedCurrencyType","symbol","setTotalPrice","console","log","componentDidMount","then","result","data","name","render","length","map","cat","textDecoration","e","target","id","localStorage","getItem","color","totalQuantity","cursor","height","marginTop","boxShadow","position","listStyle","padding","width","cur","value","label","toString","mapDispatchToProps","dispatch","mapStateToProps","cart","cartTotalQuantity"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BsCart } from \"react-icons/bs\";\nimport {\n  TopHeading,\n  Item,\n  Logo,\n  Menu,\n  SingleIcon,\n  DropDownContent,\n  DropItem,\n  CartSpan,\n  Overlay,\n  MiniCart,\n  CartDiv,\n} from \"../../styles/topNav\";\nimport { connect } from \"react-redux\";\nimport { setCategory, setCurrency } from \"../../redux/selectSlice\";\nimport { TopNavTypes } from \"../../types\";\nimport { Get_Category, Get_Currency } from \"../../queries\";\nimport { getTotals } from \"../../redux/cartSlice\";\nimport CartOverlay from \"../Cart/CartOverlay\";\nimport logo from \"../../img/alogo.png\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport { Link } from \"react-router-dom\";\nimport { TopNavProps } from \"../../props\";\nclass TopNav extends React.Component<TopNavProps, TopNavTypes> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      categories: [],\n      category: \"\",\n      currencies: [],\n      currency: \"\",\n      currencySymbol: \"\",\n    };\n  }\n  selectedCategoryTitle(title: string) {\n    this.setState({ category: title });\n    this.props.setCategory(title);\n  }\n\n  selectedCurrencyType(currency: string, symbol: any) {\n    this.setState({ currency: currency });\n    this.props.setCurrency(currency);\n    this.props.setTotalPrice();\n    console.log(symbol);\n  }\n\n  componentDidMount() {\n    Get_Category().then((result) => {\n      this.setState({\n        categories: result.data.categories,\n        category: result.data.categories[0].name,\n      });\n      this.props.setCategory(this.state.category);\n    });\n\n    Get_Currency().then((result) => {\n      this.setState({\n        currencies: result.data.currencies,\n        currency: result.data.currencies[0].symbol,\n      });\n      this.props.setCurrency(this.state.currency);\n    });\n  }\n  render() {\n    return (\n      <>\n        <TopHeading>\n          <Menu>\n            {this.state.categories.length > 0 &&\n              this.state.categories?.map((cat: any) => (\n                <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                  <Item\n                    id={cat.name}\n                    onClick={(e: any) =>\n                      this.selectedCategoryTitle(e.target.id)\n                    }\n                    style={\n                      localStorage.getItem(\"category\") === cat.name\n                        ? {\n                            color: \"green\",\n                            textDecoration: \"underline\",\n                          }\n                        : {}\n                    }\n                  >\n                    {cat.name}\n                  </Item>\n                </Link>\n              ))}\n          </Menu>\n\n          <Logo>\n            <img src={logo} alt=\"logo\" />\n          </Logo>\n\n          <NoStyleDiv>\n            <CartDiv>\n              <BsCart />\n              <CartSpan>{this.props.totalQuantity}</CartSpan>\n              <Overlay>\n                <MiniCart>\n                  <CartOverlay />\n                </MiniCart>\n              </Overlay>\n            </CartDiv>\n\n            <SingleIcon>\n              {/* <DropDownContent\n                onChange={(e: any) =>\n                  this.selectedCurrencyType(e.target.value, e.target.id)\n                }\n              ></DropDownContent> */}\n              <span\n                style={{\n                  cursor: \"pointer\",\n                  height: \"30px\",\n                  marginTop: \"5px\",\n                  boxShadow: \"5px 5px 5px 5px #1410100d\",\n                }}\n              >\n                $ ^\n              </span>\n              <div>\n                <ul\n                  style={{\n                    position: \"absolute\",\n                    cursor: \"pointer\",\n                    listStyle: \"none\",\n                    padding: \"15px 15px\",\n                    width: \"60px\",\n                    height: \"100px\",\n                    marginTop: \"5px\",\n                    boxShadow: \"5px 5px 5px 5px #1410100d\",\n                  }}\n                >\n                  {this.state.currencies?.map((cur: any) => (\n                    <li\n                      onClick={(e: any) =>\n                        this.selectedCurrencyType(e.target.value, e.target.id)\n                      }\n                      key={cur.symbol}\n                      id={cur.symbol}\n                      value={cur.label.toString()}\n                    >\n                      {cur.symbol} &nbsp; {cur.label}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </SingleIcon>\n          </NoStyleDiv>\n        </TopHeading>\n      </>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    setCategory: (category: string) => dispatch(setCategory(category)),\n    setCurrency: (currency: string) => dispatch(setCurrency(currency)),\n    setTotalPrice: () => dispatch(getTotals()),\n  };\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    totalQuantity: state.cart.cartTotalQuantity,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNav);\n"]},"metadata":{},"sourceType":"module"}