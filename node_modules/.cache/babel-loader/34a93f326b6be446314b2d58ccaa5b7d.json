{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCategoryTitle, setCurrencyType } from \"../../redux/actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      categories: [],\n      category: \"all\",\n      currencies: [],\n      currency: \"USD\"\n    };\n  }\n\n  selectedCategoryTitle(title) {\n    this.setState({\n      category: title\n    });\n    this.props.setCategoryTitle(title);\n  }\n\n  selectedCurrencyType(currency) {\n    this.setState({\n      currency: currency\n    });\n    this.props.setCurrencyType(currency);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"90%\",\n          margin: \"10px auto\",\n          backgroundColor: \"blue\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"CART\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setCategoryTitle: category => dispatch(setCategoryTitle(category)),\n    setCurrencyType: currency => dispatch(setCurrencyType(currency.toString()))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Cart/Cart.tsx"],"names":["React","connect","setCategoryTitle","setCurrencyType","Cart","Component","constructor","props","state","products","categories","category","currencies","currency","selectedCategoryTitle","title","setState","selectedCurrencyType","componentDidMount","render","width","margin","backgroundColor","mapDispatchToProps","dispatch","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAaA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,6BAAlD;;;;AAGA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAGE;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,QAAQ,EAAE,KAHC;AAIXC,MAAAA,UAAU,EAAE,EAJD;AAKXC,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AACDC,EAAAA,qBAAqB,CAACC,KAAD,EAAgB;AACnC,SAAKC,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAEI;AAAZ,KAAd;AACA,SAAKR,KAAL,CAAWL,gBAAX,CAA4Ba,KAA5B;AACD;;AAEDE,EAAAA,oBAAoB,CAACJ,QAAD,EAAmB;AACrC,SAAKG,QAAL,CAAc;AAAEH,MAAAA,QAAQ,EAAEA;AAAZ,KAAd;AACA,SAAKN,KAAL,CAAWJ,eAAX,CAA2BU,QAA3B;AACD;;AAEDK,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,MAAM,EAAE,WAAxB;AAAqCC,UAAAA,eAAe,EAAE;AAAtD,SADT;AAAA,+BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AASD;;AAjCD;;AAoCF,SAASC,kBAAT,CAA4BC,QAA5B,EAA2C;AACzC,SAAO;AACLtB,IAAAA,gBAAgB,EAAGS,QAAD,IAChBa,QAAQ,CAACtB,gBAAgB,CAACS,QAAD,CAAjB,CAFL;AAGLR,IAAAA,eAAe,EAAGU,QAAD,IACfW,QAAQ,CAACrB,eAAe,CAACU,QAAQ,CAACY,QAAT,EAAD,CAAhB;AAJL,GAAP;AAMD;;AAED,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCnB,IAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { BsCart } from \"react-icons/bs\";\nimport {\n  TopHeading,\n  Item,\n  Logo,\n  Menu,\n  SingleIcon,\n  DropDownContent,\n  DropItem,\n} from \"../../styles/topNav\";\nimport { client } from \"../../App\";\nimport { connect } from \"react-redux\";\nimport { setCategoryTitle, setCurrencyType } from \"../../redux/actions/actions\";\nimport { TopNavTypes } from \"../../types\";\n\nclass Cart extends React.Component<\n  { setCategoryTitle: any; setCurrencyType: any },\n  TopNavTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      categories: [],\n      category: \"all\",\n      currencies: [],\n      currency: \"USD\",\n    };\n  }\n  selectedCategoryTitle(title: string) {\n    this.setState({ category: title });\n    this.props.setCategoryTitle(title);\n  }\n\n  selectedCurrencyType(currency: string) {\n    this.setState({ currency: currency });\n    this.props.setCurrencyType(currency);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <>\n        <div\n          style={{ width: \"90%\", margin: \"10px auto\", backgroundColor: \"blue\" }}\n        >\n          <h3>CART</h3>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    setCategoryTitle: (category: string) =>\n      dispatch(setCategoryTitle(category)),\n    setCurrencyType: (currency: string) =>\n      dispatch(setCurrencyType(currency.toString())),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}