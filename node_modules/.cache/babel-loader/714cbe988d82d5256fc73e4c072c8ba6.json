{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DetailsContainer, ProductImages, ProductImage, ProductInfo, Attribute, AddButton, AttributeButton, ProductName, ProductBrand, ProductPrice, AttributeSwatch, OutOfStock, ProductParse, ImageHover } from \"../../styles/productDetails\";\nimport { useParams } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport { Get_Product } from \"../../queries\";\nimport { connect } from \"react-redux\";\nimport { addToCart, getTotals } from \"../../redux/cartSlice\";\nimport { initialProduct } from \"../../initialState\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport \"../../details.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: { ...initialProduct\n      },\n      imagePreview: \"\",\n      attributes: {},\n      attributesLength: 0,\n      bgColor: \"white\",\n      color: \"black\"\n    };\n  }\n\n  addProductToCart(product) {\n    let attribute = this.state.attributes;\n    console.log(attribute);\n    this.props.addToCart({\n      product,\n      attribute\n    });\n    this.props.getTotals();\n    this.predefinedAttributes();\n  }\n\n  setAttributes(itm, attr) {\n    // this.clickonelement(itm.id);\n    let attribute = this.state.attributes;\n    let a = {\n      [attr]: itm.id\n    };\n    let ab = Object.assign(attribute, a);\n    this.setState({\n      attributes: ab\n    });\n  }\n\n  clickonelement(elem) {\n    let attribute = document.getElementsByClassName(\"attr\");\n    console.log(attribute);\n\n    for (let i = 0; i < attribute.length; i++) {\n      // attribute.item(i).style.backgroundColor = \"red\";\n      elem.style.backgroundColor = \"green\";\n    }\n\n    elem.style.backgroundColor = \"green\";\n  }\n\n  predefinedAttributes() {\n    const attributeId = this.state.product.attributes.map(attr => attr.id);\n    const itemAttributes = this.state.product.attributes.map(attr => attr);\n    const attribute = itemAttributes.map(itm => itm.items[0].id);\n    let ab = {};\n    attributeId.forEach((value1, index) => {\n      const value2 = attribute[index];\n      let a = {\n        [value1]: value2\n      };\n      ab = Object.assign(ab, a);\n    });\n    this.setState({\n      attributes: ab\n    });\n  }\n\n  componentDidMount() {\n    let {\n      id\n    } = this.props.params;\n    Get_Product(id).then(res => {\n      this.setState({\n        product: res.data.product,\n        imagePreview: res.data.product.gallery[0]\n      });\n      this.predefinedAttributes();\n    });\n  }\n\n  render() {\n    var _this$state$product$g;\n\n    const cleanHTML = DOMPurify.sanitize(this.state.product.description, {\n      USE_PROFILES: {\n        html: true\n      }\n    });\n    let attributes = this.state.attributes;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DetailsContainer, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ProductImages, {\n            children: this.state.product.gallery.length >= 1 && ((_this$state$product$g = this.state.product.gallery) === null || _this$state$product$g === void 0 ? void 0 : _this$state$product$g.map(img => /*#__PURE__*/_jsxDEV(ImageHover, {\n              src: img,\n              alt: \"product-img\",\n              onMouseOver: () => this.setState({\n                imagePreview: img\n              })\n            }, img, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProductImage, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.imagePreview,\n              alt: \"product-img-preview\",\n              height: 500,\n              width: 400\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProductInfo, {\n            children: [/*#__PURE__*/_jsxDEV(NoStyleDiv, {\n              children: [/*#__PURE__*/_jsxDEV(ProductBrand, {\n                children: this.state.product.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ProductName, {\n                children: this.state.product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), this.state.product.attributes.map(attr => /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n              children: [/*#__PURE__*/_jsxDEV(Attribute, {\n                children: [attr.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  gap: \"10px\"\n                },\n                children: [attr.type === \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeSwatch, {\n                  style: {\n                    backgroundColor: `${itm.id}`\n                  },\n                  onClick: () => this.setAttributes(itm, attr.name)\n                }, itm.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 25\n                }, this)), attr.type !== \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                  className: itm.displayValue === attributes[attributes.name] ? \"selected\" : null,\n                  onClick: () => this.setAttributes(itm, attr.name),\n                  children: itm.value\n                }, itm.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, attr.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Attribute, {\n              className: \"selected\",\n              children: \"PRICE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected\",\n              children: \"PRICE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), this.state.product.prices.map(p => p.currency.symbol === this.props.currency && /*#__PURE__*/_jsxDEV(ProductPrice, {\n              children: [p.currency.symbol, p.amount]\n            }, p.currency.symbol, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this)), this.state.product.inStock === true && /*#__PURE__*/_jsxDEV(AddButton, {\n              type: \"submit\",\n              onClick: () => this.addProductToCart(this.state.product),\n              children: \"ADD TO CART\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), this.state.product.inStock !== true && /*#__PURE__*/_jsxDEV(OutOfStock, {\n              type: \"button\",\n              children: \"OUT OF STOCK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProductParse, {\n              children: parse(cleanHTML)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currency: state.selection[\"selectedCurrency\"]\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToCart: product => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals())\n  };\n}\n\nconst Prop = props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(ProductDetails, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 30\n  }, this);\n};\n\n_s(Prop, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = Prop;\nexport default connect(mapStateToProps, mapDispatchToProps)(Prop);\n\nvar _c;\n\n$RefreshReg$(_c, \"Prop\");","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx"],"names":["React","DetailsContainer","ProductImages","ProductImage","ProductInfo","Attribute","AddButton","AttributeButton","ProductName","ProductBrand","ProductPrice","AttributeSwatch","OutOfStock","ProductParse","ImageHover","useParams","DOMPurify","parse","Get_Product","connect","addToCart","getTotals","initialProduct","NoStyleDiv","ProductDetails","Component","constructor","props","state","product","imagePreview","attributes","attributesLength","bgColor","color","addProductToCart","attribute","console","log","predefinedAttributes","setAttributes","itm","attr","a","id","ab","Object","assign","setState","clickonelement","elem","document","getElementsByClassName","i","length","style","backgroundColor","attributeId","map","itemAttributes","items","forEach","value1","index","value2","componentDidMount","params","then","res","data","gallery","render","cleanHTML","sanitize","description","USE_PROFILES","html","img","brand","name","display","gap","type","displayValue","value","prices","p","currency","symbol","amount","inStock","mapStateToProps","selection","mapDispatchToProps","dispatch","Prop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  DetailsContainer,\n  ProductImages,\n  ProductImage,\n  ProductInfo,\n  Attribute,\n  AddButton,\n  AttributeButton,\n  ProductName,\n  ProductBrand,\n  ProductPrice,\n  AttributeSwatch,\n  OutOfStock,\n  ProductParse,\n  ImageHover,\n} from \"../../styles/productDetails\";\nimport { useParams } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport { ProductDetailsTypes } from \"../../types\";\nimport { Get_Product } from \"../../queries\";\nimport { connect } from \"react-redux\";\nimport { addToCart, getTotals } from \"../../redux/cartSlice\";\nimport { initialProduct } from \"../../initialState\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport { ProductDetailsProps } from \"../../props\";\nimport \"../../details.css\";\n\nclass ProductDetails extends React.Component<\n  ProductDetailsProps,\n  ProductDetailsTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      product: { ...initialProduct },\n      imagePreview: \"\",\n      attributes: {},\n      attributesLength: 0,\n      bgColor: \"white\",\n      color: \"black\",\n    };\n  }\n\n  addProductToCart(product: {}) {\n    let attribute = this.state.attributes;\n    console.log(attribute);\n    this.props.addToCart({ product, attribute });\n    this.props.getTotals();\n    this.predefinedAttributes();\n  }\n\n  setAttributes(itm: { id: string }, attr: string) {\n    // this.clickonelement(itm.id);\n    let attribute = this.state.attributes;\n    let a = { [attr]: itm.id };\n    let ab = Object.assign(attribute, a);\n    this.setState({ attributes: ab });\n  }\n\n  clickonelement(elem) {\n    let attribute = document.getElementsByClassName(\"attr\");\n    console.log(attribute);\n    for (let i = 0; i < attribute.length; i++) {\n      // attribute.item(i).style.backgroundColor = \"red\";\n      elem.style.backgroundColor = \"green\";\n    }\n    elem.style.backgroundColor = \"green\";\n  }\n\n  predefinedAttributes() {\n    const attributeId = this.state.product.attributes.map((attr) => attr.id);\n    const itemAttributes = this.state.product.attributes.map((attr) => attr);\n    const attribute = itemAttributes.map((itm) => itm.items[0].id);\n    let ab = {};\n    attributeId.forEach((value1, index) => {\n      const value2 = attribute[index];\n      let a = { [value1]: value2 };\n      ab = Object.assign(ab, a);\n    });\n    this.setState({ attributes: ab });\n  }\n\n  componentDidMount() {\n    let { id } = this.props.params;\n    Get_Product(id).then((res) => {\n      this.setState({\n        product: res.data.product,\n        imagePreview: res.data.product.gallery[0],\n      });\n      this.predefinedAttributes();\n    });\n  }\n\n  render() {\n    const cleanHTML = DOMPurify.sanitize(this.state.product.description, {\n      USE_PROFILES: { html: true },\n    });\n    let attributes = this.state.attributes;\n    return (\n      <>\n        <DetailsContainer>\n          <>\n            <ProductImages>\n              {this.state.product.gallery.length >= 1 &&\n                this.state.product.gallery?.map((img) => (\n                  <ImageHover\n                    key={img}\n                    src={img}\n                    alt=\"product-img\"\n                    onMouseOver={() => this.setState({ imagePreview: img })}\n                  />\n                ))}\n            </ProductImages>\n\n            <ProductImage>\n              <img\n                src={this.state.imagePreview}\n                alt=\"product-img-preview\"\n                height={500}\n                width={400}\n              />\n            </ProductImage>\n\n            <ProductInfo>\n              <NoStyleDiv>\n                <ProductBrand>{this.state.product.brand}</ProductBrand>\n                <ProductName>{this.state.product.name}</ProductName>\n              </NoStyleDiv>\n\n              {this.state.product.attributes.map((attr) => (\n                <NoStyleDiv key={attr.id}>\n                  <Attribute>{attr.name}:</Attribute>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      gap: \"10px\",\n                    }}\n                  >\n                    {attr.type === \"swatch\" &&\n                      attr.items.map((itm) => (\n                        <AttributeSwatch\n                          key={itm.id}\n                          style={{\n                            backgroundColor: `${itm.id}`,\n                          }}\n                          onClick={() => this.setAttributes(itm, attr.name)}\n                        />\n                      ))}\n\n                    {attr.type !== \"swatch\" &&\n                      attr.items.map((itm) => (\n                        <AttributeButton\n                          key={itm.id}\n                          className={\n                            itm.displayValue === attributes[attributes.name]\n                              ? \"selected\"\n                              : null\n                          }\n                          onClick={() => this.setAttributes(itm, attr.name)}\n                        >\n                          {itm.value}\n                        </AttributeButton>\n                      ))}\n                  </div>\n                </NoStyleDiv>\n              ))}\n\n              <Attribute className=\"selected\">PRICE:</Attribute>\n              <div className=\"selected\">PRICE:</div>\n              {this.state.product.prices.map(\n                (p) =>\n                  p.currency.symbol === this.props.currency && (\n                    <ProductPrice key={p.currency.symbol}>\n                      {p.currency.symbol}\n                      {p.amount}\n                    </ProductPrice>\n                  )\n              )}\n\n              {this.state.product.inStock === true && (\n                <AddButton\n                  type=\"submit\"\n                  onClick={() => this.addProductToCart(this.state.product)}\n                >\n                  ADD TO CART\n                </AddButton>\n              )}\n              {this.state.product.inStock !== true && (\n                <OutOfStock type=\"button\">OUT OF STOCK</OutOfStock>\n              )}\n              <ProductParse>{parse(cleanHTML)}</ProductParse>\n            </ProductInfo>\n          </>\n        </DetailsContainer>\n      </>\n    );\n  }\n}\nfunction mapStateToProps(state: any) {\n  return {\n    currency: state.selection[\"selectedCurrency\"],\n  };\n}\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    addToCart: (product: any) => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n  };\n}\n\nconst Prop = (props: any) => <ProductDetails {...props} params={useParams()} />;\nexport default connect(mapStateToProps, mapDispatchToProps)(Prop);\n"]},"metadata":{},"sourceType":"module"}