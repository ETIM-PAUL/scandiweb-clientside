{"ast":null,"code":"import { addToCart, getTotals } from \"../../redux/cartSlice\";\nexport function mapStateToProps(state) {\n  return {\n    currency: state.selection[\"selectedCurrency\"]\n  };\n}\nexport function mapDispatchToProps(dispatch) {\n  return {\n    addToCart: product => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals())\n  };\n}\nexport const addProductToCart = (product, attributes, setState) => {\n  let attribute = attributes;\n  addToCart({\n    product,\n    attribute\n  });\n  getTotals();\n  predefinedAttributes(product);\n};\nexport const setAttributes = (itm, attr, attributes, setState) => {\n  let attribute = attributes;\n  let a = {\n    [attr]: itm.id\n  };\n  let ab = Object.assign(attribute, a);\n  return {\n    attributes: ab\n  };\n};\nexport const predefinedAttributes = product => {\n  const attributeId = product.attributes.map(attr => attr.id);\n  const itemAttributes = product.attributes.map(attr => attr);\n  const attribute = itemAttributes.map(itm => itm.items[0].id);\n  let ab = {};\n  attributeId.forEach((value1, index) => {\n    const value2 = attribute[index];\n    let a = {\n      [value1]: value2\n    };\n    ab = Object.assign(ab, a);\n  });\n  return {\n    attributes: ab\n  };\n};","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/util.ts"],"names":["addToCart","getTotals","mapStateToProps","state","currency","selection","mapDispatchToProps","dispatch","product","addProductToCart","attributes","setState","attribute","predefinedAttributes","setAttributes","itm","attr","a","id","ab","Object","assign","attributeId","map","itemAttributes","items","forEach","value1","index","value2"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,uBAArC;AAEA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAqC;AAC1C,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACE,SAAN,CAAgB,kBAAhB;AADL,GAAP;AAGD;AACD,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAA2C;AAChD,SAAO;AACLP,IAAAA,SAAS,EAAGQ,OAAD,IAAkBD,QAAQ,CAACP,SAAS,CAACQ,OAAD,CAAV,CADhC;AAELP,IAAAA,SAAS,EAAE,MAAMM,QAAQ,CAACN,SAAS,EAAV;AAFpB,GAAP;AAID;AAED,OAAO,MAAMQ,gBAAgB,GAAG,CAACD,OAAD,EAAcE,UAAd,EAA0BC,QAA1B,KAAuC;AACrE,MAAIC,SAAS,GAAGF,UAAhB;AACAV,EAAAA,SAAS,CAAC;AAAEQ,IAAAA,OAAF;AAAWI,IAAAA;AAAX,GAAD,CAAT;AACAX,EAAAA,SAAS;AACTY,EAAAA,oBAAoB,CAACL,OAAD,CAApB;AACD,CALM;AAOP,OAAO,MAAMM,aAAa,GAAG,CAACC,GAAD,EAAsBC,IAAtB,EAAoCN,UAApC,EAAgDC,QAAhD,KAA4D;AACvF,MAAIC,SAAS,GAAGF,UAAhB;AACA,MAAIO,CAAC,GAAG;AAAE,KAACD,IAAD,GAAQD,GAAG,CAACG;AAAd,GAAR;AACA,MAAIC,EAAE,GAAGC,MAAM,CAACC,MAAP,CAAcT,SAAd,EAAyBK,CAAzB,CAAT;AACA,SAAQ;AAAEP,IAAAA,UAAU,EAAES;AAAd,GAAR;AACD,CALM;AAOP,OAAO,MAAMN,oBAAoB,GAAIL,OAAD,IAAa;AAC/C,QAAMc,WAAW,GAAGd,OAAO,CAACE,UAAR,CAAmBa,GAAnB,CAAwBP,IAAD,IAAUA,IAAI,CAACE,EAAtC,CAApB;AACA,QAAMM,cAAc,GAAGhB,OAAO,CAACE,UAAR,CAAmBa,GAAnB,CAAwBP,IAAD,IAAUA,IAAjC,CAAvB;AACA,QAAMJ,SAAS,GAAGY,cAAc,CAACD,GAAf,CAAoBR,GAAD,IAASA,GAAG,CAACU,KAAJ,CAAU,CAAV,EAAaP,EAAzC,CAAlB;AACA,MAAIC,EAAE,GAAG,EAAT;AACAG,EAAAA,WAAW,CAACI,OAAZ,CAAoB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrC,UAAMC,MAAM,GAAGjB,SAAS,CAACgB,KAAD,CAAxB;AACA,QAAIX,CAAC,GAAG;AAAE,OAACU,MAAD,GAAUE;AAAZ,KAAR;AACAV,IAAAA,EAAE,GAAGC,MAAM,CAACC,MAAP,CAAcF,EAAd,EAAkBF,CAAlB,CAAL;AACD,GAJD;AAKA,SAAQ;AAAEP,IAAAA,UAAU,EAAES;AAAd,GAAR;AACD,CAXM","sourcesContent":["import { addToCart, getTotals } from \"../../redux/cartSlice\";\n\nexport function mapStateToProps(state: any) {\n  return {\n    currency: state.selection[\"selectedCurrency\"],\n  };\n}\nexport function mapDispatchToProps(dispatch: any) {\n  return {\n    addToCart: (product: any) => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n  };\n}\n\nexport const addProductToCart = (product: {}, attributes, setState) => {\n  let attribute = attributes;\n  addToCart({ product, attribute });\n  getTotals();\n  predefinedAttributes(product );\n}\n\nexport const setAttributes = (itm: { id: string }, attr: string, attributes, setState) =>{\n  let attribute = attributes;\n  let a = { [attr]: itm.id };\n  let ab = Object.assign(attribute, a);\n  return ({ attributes: ab });\n}\n\nexport const predefinedAttributes = (product) => {\n  const attributeId = product.attributes.map((attr) => attr.id);\n  const itemAttributes = product.attributes.map((attr) => attr);\n  const attribute = itemAttributes.map((itm) => itm.items[0].id);\n  let ab = {};\n  attributeId.forEach((value1, index) => {\n    const value2 = attribute[index];\n    let a = { [value1]: value2 };\n    ab = Object.assign(ab, a);\n  });\n  return ({ attributes: ab });\n}\n\n"]},"metadata":{},"sourceType":"module"}