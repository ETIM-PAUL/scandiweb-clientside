{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx\";\nimport React from \"react\";\nimport { useQuery as Query, gql } from \"@apollo/client\";\nimport { FirstContainer, Heading } from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GET_PRODUCTS = gql`\n  query category($category: String!) {\n    category(input: { title: $category }) {\n      name\n      products {\n        id\n        name\n        inStock\n        gallery\n        description\n        category\n        brand\n        attributes {\n          id\n          name\n          type\n          items {\n            displayValue\n            value\n            id\n          }\n        }\n        prices {\n          currency {\n            label\n            symbol\n          }\n          amount\n        }\n      }\n    }\n  }\n`;\n\nclass ProductsListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      category: this.props.category.toString()\n    };\n    const {\n      loading,\n      error,\n      data\n    } = Query(GET_PRODUCTS, {\n      variables: {\n        category: this.state.category\n      }\n    });\n    console.log(data);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FirstContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            // marginTop: \"15px\",\n            margin: \"auto\",\n            width: \"90%\",\n            display: \"grid\",\n            gap: \"40px\",\n            marginBottom: \"10px\",\n            gridTemplateColumns: \"auto auto auto auto\"\n          },\n          children: this.state.products.length >= 0 && this.state.products.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://picsum.photos/250/280\",\n                alt: \"pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \" #80808091\",\n                paddingTop: \"15px\"\n              },\n              children: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingTop: \"5px\"\n              },\n              children: [x.prices[0].currency.symbol, x.prices[0].amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(state) {\n  return {\n    category: state.action[\"selectedCategory\"]\n  };\n}\n\nexport default connect(mapDispatchToProps)(ProductsListing);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx"],"names":["React","useQuery","Query","gql","FirstContainer","Heading","connect","GET_PRODUCTS","ProductsListing","Component","constructor","props","state","products","category","toString","loading","error","data","variables","console","log","componentDidMount","render","margin","width","display","gap","marginBottom","gridTemplateColumns","length","map","x","color","paddingTop","name","prices","currency","symbol","amount","mapDispatchToProps","action"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAQ,IAAIC,KAArB,EAA4BC,GAA5B,QAAuC,gBAAvC;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,8BAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAGA,MAAMC,YAAY,GAAGJ,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhCA;;AAkCA,MAAMK,eAAN,SAA8BR,KAAK,CAACS,SAApC,CAGE;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAAX,CAAoBC,QAApB;AAFC,KAAb;AAIA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA2BhB,KAAK,CAACK,YAAD,EAAe;AACnDY,MAAAA,SAAS,EAAE;AAAEL,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAAvB;AADwC,KAAf,CAAtC;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;;AACDI,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,cAAD;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,KAAK,EAAE;AACL;AACAC,YAAAA,MAAM,EAAE,MAFH;AAGLC,YAAAA,KAAK,EAAE,KAHF;AAILC,YAAAA,OAAO,EAAE,MAJJ;AAKLC,YAAAA,GAAG,EAAE,MALA;AAMLC,YAAAA,YAAY,EAAE,MANT;AAOLC,YAAAA,mBAAmB,EAAE;AAPhB,WADT;AAAA,oBAWG,KAAKjB,KAAL,CAAWC,QAAX,CAAoBiB,MAApB,IAA8B,CAA9B,IACC,KAAKlB,KAAL,CAAWC,QAAX,CAAoBkB,GAApB,CAAyBC,CAAD,iBACtB;AAAA,oCACE;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAE,+BAAV;AAA2C,gBAAA,GAAG,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE,YAAT;AAAuBC,gBAAAA,UAAU,EAAE;AAAnC,eAAZ;AAAA,wBACGF,CAAC,CAACG;AADL;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE;AAAK,cAAA,KAAK,EAAE;AAAED,gBAAAA,UAAU,EAAE;AAAd,eAAZ;AAAA,yBACGF,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYC,QAAZ,CAAqBC,MADxB,EAEGN,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYG,MAFf;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAZJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAkCD;;AAlDD;;AAqDF,SAASC,kBAAT,CAA4B5B,KAA5B,EAAwC;AACtC,SAAO;AACLE,IAAAA,QAAQ,EAAEF,KAAK,CAAC6B,MAAN,CAAa,kBAAb;AADL,GAAP;AAGD;;AAED,eAAenC,OAAO,CAACkC,kBAAD,CAAP,CAA4BhC,eAA5B,CAAf","sourcesContent":["import React from \"react\";\nimport { useQuery as Query, gql } from \"@apollo/client\";\nimport { FirstContainer, Heading } from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { client } from \"../../App\";\n\nconst GET_PRODUCTS = gql`\n  query category($category: String!) {\n    category(input: { title: $category }) {\n      name\n      products {\n        id\n        name\n        inStock\n        gallery\n        description\n        category\n        brand\n        attributes {\n          id\n          name\n          type\n          items {\n            displayValue\n            value\n            id\n          }\n        }\n        prices {\n          currency {\n            label\n            symbol\n          }\n          amount\n        }\n      }\n    }\n  }\n`;\n\nclass ProductsListing extends React.Component<\n  { category: string },\n  { products: []; category: string }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      category: this.props.category.toString(),\n    };\n    const { loading, error, data } = Query(GET_PRODUCTS, {\n      variables: { category: this.state.category },\n    });\n\n    console.log(data);\n  }\n  componentDidMount() {}\n\n  render() {\n    return (\n      <>\n        <FirstContainer>\n          <Heading>All Categories</Heading>\n          <div\n            style={{\n              // marginTop: \"15px\",\n              margin: \"auto\",\n              width: \"90%\",\n              display: \"grid\",\n              gap: \"40px\",\n              marginBottom: \"10px\",\n              gridTemplateColumns: \"auto auto auto auto\",\n            }}\n          >\n            {this.state.products.length >= 0 &&\n              this.state.products.map((x: { name: string; prices: any }) => (\n                <div>\n                  <div>\n                    <img src={\"https://picsum.photos/250/280\"} alt=\"pic\"></img>\n                  </div>\n                  <div style={{ color: \" #80808091\", paddingTop: \"15px\" }}>\n                    {x.name}\n                  </div>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    {x.prices[0].currency.symbol}\n                    {x.prices[0].amount}\n                  </div>\n                </div>\n              ))}\n          </div>\n        </FirstContainer>\n      </>\n    );\n  }\n}\n\nfunction mapDispatchToProps(state: any) {\n  return {\n    category: state.action[\"selectedCategory\"],\n  };\n}\n\nexport default connect(mapDispatchToProps)(ProductsListing);\n"]},"metadata":{},"sourceType":"module"}