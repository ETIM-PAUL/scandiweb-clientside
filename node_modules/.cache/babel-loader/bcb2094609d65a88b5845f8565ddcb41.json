{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx\";\nimport React from \"react\";\nimport { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\nimport { FirstContainer, Heading } from \"../../styles/productsListing\";\nimport Tilt from \"react-parallax-tilt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductsListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: []\n    };\n    const client = new ApolloClient({\n      uri: \"http://localhost:4000/\",\n      cache: new InMemoryCache()\n    });\n    client.query({\n      query: gql`\n          query categories {\n            categories {\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                brand\n              }\n            }\n          }\n        `\n    }).then(result => // this.setState({ products: result.data.categories })\n    console.log(result));\n    console.log(this.state.products);\n  }\n\n  componentDidMount() {// getData()\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FirstContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Category name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tilt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ProductsListing;","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx"],"names":["React","ApolloClient","InMemoryCache","gql","FirstContainer","Heading","Tilt","ProductsListing","Component","constructor","props","state","products","client","uri","cache","query","then","result","console","log","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAKEC,GALF,QAMO,gBANP;AASA,SACEC,cADF,EAEEC,OAFF,QAQO,8BARP;AASA,OAAOC,IAAP,MAAiB,qBAAjB;;;;AAEA,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA4D;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,UAAMC,MAAM,GAAG,IAAIZ,YAAJ,CAAiB;AAC9Ba,MAAAA,GAAG,EAAE,wBADyB;AAE9BC,MAAAA,KAAK,EAAE,IAAIb,aAAJ;AAFuB,KAAjB,CAAf;AAKAW,IAAAA,MAAM,CACHG,KADH,CACS;AACLA,MAAAA,KAAK,EAAEb,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfa,KADT,EAkBGc,IAlBH,CAkBSC,MAAD,IACJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,CApBJ;AAsBAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,QAAvB;AACD;;AACDS,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,kBAAM,KAAKX,KAAL,CAAWC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AASD;;AAjDyD;;AAoD5D,eAAeL,eAAf","sourcesContent":["import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql,\n} from \"@apollo/client\";\nimport { CardType } from \"../../types\";\n\nimport {\n  FirstContainer,\n  Heading,\n  CardWrapper,\n  CardTextWrapper,\n  CardTextDate,\n  CardTextTitle,\n  CardTextBody,\n} from \"../../styles/productsListing\";\nimport Tilt from \"react-parallax-tilt\";\n\nclass ProductsListing extends React.Component<{}, CardType> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n    };\n    const client = new ApolloClient({\n      uri: \"http://localhost:4000/\",\n      cache: new InMemoryCache(),\n    });\n\n    client\n      .query({\n        query: gql`\n          query categories {\n            categories {\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                brand\n              }\n            }\n          }\n        `,\n      })\n      .then((result) =>\n        // this.setState({ products: result.data.categories })\n        console.log(result)\n      );\n    console.log(this.state.products);\n  }\n  componentDidMount() {\n    // getData()\n  }\n\n  render() {\n    return (\n      <>\n        <div>{this.state.products}</div>\n        <FirstContainer>\n          <Heading>Category name</Heading>\n          <Tilt></Tilt>\n        </FirstContainer>\n      </>\n    );\n  }\n}\n\nexport default ProductsListing;\n"]},"metadata":{},"sourceType":"module"}