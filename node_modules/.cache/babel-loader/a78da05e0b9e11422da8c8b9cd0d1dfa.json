{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DetailsContainer, ProductImages, ProductImage, ProductInfo, Attribute, AddButton, AttributeButton, ProductName, ProductBrand, ProductPrice, AttributeSwatch, OutOfStock, ProductParse } from \"../../styles/productDetails\";\nimport { useParams } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport { Get_Product } from \"../../queries\";\nimport { connect } from \"react-redux\";\nimport { addToCart, getTotals } from \"../../redux/cartSlice\";\nimport { initialProduct } from \"../../product.state\";\nimport { toast } from \"react-toastify\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: { ...initialProduct\n      },\n      imagePreview: \"\",\n      attributes: [],\n      attributesLength: 0\n    };\n  }\n\n  addProductToCart(product) {\n    let attr = this.state.attributes;\n\n    if ((product === null || product === void 0 ? void 0 : product.attributes.length) !== attr.length) {\n      toast(\"Please select an attribute for each attributes\", {\n        position: \"top-center\"\n      });\n    } else if ((product === null || product === void 0 ? void 0 : product.attributes.length) === attr.length) {\n      this.props.addToCart({\n        product,\n        attr\n      });\n      this.props.getTotals();\n      this.setState({\n        attributes: []\n      });\n    }\n  }\n\n  setAttributes(itm, attr) {\n    let attribute = this.state.attributes;\n    const existingAttribute = attribute.findIndex(a => a.attr === attr);\n\n    if (existingAttribute >= 0) {\n      attribute.splice(existingAttribute, 1, {\n        itm,\n        attr\n      });\n    } else {\n      attribute.push({\n        itm,\n        attr\n      });\n    }\n  }\n\n  componentDidMount() {\n    let {\n      id\n    } = this.props.params;\n    Get_Product(id).then(res => {\n      this.setState({\n        product: res.data.product,\n        imagePreview: res.data.product.gallery[0],\n        attributesLength: res.data.product.attributes.length\n      });\n    });\n  }\n\n  static getDerivedStateFromProps(prevProps, prevState, state) {\n    if (prevState.attributes !== state.attributes) {\n      return {\n        attributes: state.attributes\n      };\n    }\n  }\n\n  render() {\n    var _this$state$product$g;\n\n    const cleanHTML = DOMPurify.sanitize(this.state.product.description, {\n      USE_PROFILES: {\n        html: true\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DetailsContainer, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ProductImages, {\n            children: this.state.product && ((_this$state$product$g = this.state.product.gallery) === null || _this$state$product$g === void 0 ? void 0 : _this$state$product$g.map(img => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: img,\n              alt: \"product-img\",\n              height: 80,\n              width: 150,\n              onMouseOver: () => this.setState({\n                imagePreview: img\n              }),\n              style: {\n                cursor: \"pointer\"\n              }\n            }, img, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProductImage, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.imagePreview,\n              alt: \"product-preview\",\n              height: 500,\n              width: 650\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProductInfo, {\n            children: [/*#__PURE__*/_jsxDEV(NoStyleDiv, {\n              children: [/*#__PURE__*/_jsxDEV(ProductBrand, {\n                children: this.state.product.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ProductName, {\n                children: this.state.product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), this.state.product.attributes.map(attr => /*#__PURE__*/_jsxDEV(NoStyleDiv, {\n              children: [/*#__PURE__*/_jsxDEV(Attribute, {\n                children: [attr.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  gap: \"10px\"\n                },\n                children: [attr.type === \"swatch\" && attr.items.map(itm => /*#__PURE__*/_jsxDEV(AttributeSwatch, {\n                  style: {\n                    backgroundColor: `${itm.id}`\n                  },\n                  onClick: () => this.setAttributes(itm, attr.id)\n                }, itm.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 25\n                }, this)), attr.type !== \"swatch\" && attr.items.map(item => /*#__PURE__*/_jsxDEV(AttributeButton, {\n                  onClick: () => this.setAttributes(item, attr.id),\n                  style: this.state.attributes.find(x => x.attr === attr.id && x.itm.id === item.id) && {\n                    backgroundColor: \"black\",\n                    color: \"white\"\n                  },\n                  children: item.value\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, attr.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Attribute, {\n              children: \"PRICE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), this.state.product.prices.map(p => p.currency.label === this.props.currency && /*#__PURE__*/_jsxDEV(ProductPrice, {\n              children: [p.currency.symbol, p.amount]\n            }, p.currency.symbol, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this)), this.state.product.inStock === true && /*#__PURE__*/_jsxDEV(AddButton, {\n              type: \"submit\",\n              onClick: () => this.addProductToCart(this.state.product),\n              children: \"ADD TO CART\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), this.state.product.inStock !== true && /*#__PURE__*/_jsxDEV(OutOfStock, {\n              type: \"button\",\n              children: \"OUT OF STOCK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProductParse, {\n              children: parse(cleanHTML)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currency: state.selection[\"selectedCurrency\"]\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToCart: product => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals())\n  };\n}\n\nconst Prop = props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(ProductDetails, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 30\n  }, this);\n};\n\n_s(Prop, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = Prop;\nexport default connect(mapStateToProps, mapDispatchToProps)(Prop);\n\nvar _c;\n\n$RefreshReg$(_c, \"Prop\");","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Product-Details/index.tsx"],"names":["React","DetailsContainer","ProductImages","ProductImage","ProductInfo","Attribute","AddButton","AttributeButton","ProductName","ProductBrand","ProductPrice","AttributeSwatch","OutOfStock","ProductParse","useParams","DOMPurify","parse","Get_Product","connect","addToCart","getTotals","initialProduct","toast","NoStyleDiv","ProductDetails","Component","constructor","props","state","product","imagePreview","attributes","attributesLength","addProductToCart","attr","length","position","setState","setAttributes","itm","attribute","existingAttribute","findIndex","a","splice","push","componentDidMount","id","params","then","res","data","gallery","getDerivedStateFromProps","prevProps","prevState","render","cleanHTML","sanitize","description","USE_PROFILES","html","map","img","cursor","brand","name","display","gap","type","items","backgroundColor","item","find","x","color","value","prices","p","currency","label","symbol","amount","inStock","mapStateToProps","selection","mapDispatchToProps","dispatch","Prop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  DetailsContainer,\n  ProductImages,\n  ProductImage,\n  ProductInfo,\n  Attribute,\n  AddButton,\n  AttributeButton,\n  ProductName,\n  ProductBrand,\n  ProductPrice,\n  AttributeSwatch,\n  OutOfStock,\n  ProductParse,\n} from \"../../styles/productDetails\";\nimport { useParams } from \"react-router\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport { ProductDetailsTypes } from \"../../types\";\nimport { Get_Product } from \"../../queries\";\nimport { connect } from \"react-redux\";\nimport { addToCart, getTotals } from \"../../redux/cartSlice\";\nimport { initialProduct } from \"../../product.state\";\nimport { toast } from \"react-toastify\";\nimport { NoStyleDiv } from \"../../styles/cart\";\nimport { ProductDetailsProps } from \"../../props\";\n\nclass ProductDetails extends React.Component<\n  ProductDetailsProps,\n  ProductDetailsTypes\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      product: { ...initialProduct },\n      imagePreview: \"\",\n      attributes: [],\n      attributesLength: 0,\n    };\n  }\n\n  addProductToCart(product: { attributes: any }) {\n    let attr = this.state.attributes;\n    if (product?.attributes.length !== attr.length) {\n      toast(\"Please select an attribute for each attributes\", {\n        position: \"top-center\",\n      });\n    } else if (product?.attributes.length === attr.length) {\n      this.props.addToCart({ product, attr });\n      this.props.getTotals();\n      this.setState({ attributes: [] });\n    }\n  }\n\n  setAttributes(itm: {}, attr: string) {\n    let attribute = this.state.attributes;\n    const existingAttribute = attribute.findIndex((a: any) => a.attr === attr);\n    if (existingAttribute >= 0) {\n      attribute.splice(existingAttribute, 1, { itm, attr });\n    } else {\n      attribute.push({ itm, attr });\n    }\n  }\n\n  componentDidMount() {\n    let { id } = this.props.params;\n    Get_Product(id).then((res) => {\n      this.setState({\n        product: res.data.product,\n        imagePreview: res.data.product.gallery[0],\n        attributesLength: res.data.product.attributes.length,\n      });\n    });\n  }\n\n  static getDerivedStateFromProps(\n    prevProps: Readonly<ProductDetailsProps>,\n    prevState: Readonly<ProductDetailsTypes>,\n    state?: any\n  ): any {\n    if (prevState.attributes !== state.attributes) {\n      return {\n        attributes: state.attributes,\n      };\n    }\n  }\n\n  render() {\n    const cleanHTML = DOMPurify.sanitize(this.state.product.description, {\n      USE_PROFILES: { html: true },\n    });\n    return (\n      <>\n        <DetailsContainer>\n          <>\n            <ProductImages>\n              {this.state.product &&\n                this.state.product.gallery?.map((img) => (\n                  <img\n                    key={img}\n                    src={img}\n                    alt=\"product-img\"\n                    height={80}\n                    width={150}\n                    onMouseOver={() => this.setState({ imagePreview: img })}\n                    style={{ cursor: \"pointer\" }}\n                  />\n                ))}\n            </ProductImages>\n\n            <ProductImage>\n              <img\n                src={this.state.imagePreview}\n                alt=\"product-preview\"\n                height={500}\n                width={650}\n              />\n            </ProductImage>\n\n            <ProductInfo>\n              <NoStyleDiv>\n                <ProductBrand>{this.state.product.brand}</ProductBrand>\n                <ProductName>{this.state.product.name}</ProductName>\n              </NoStyleDiv>\n\n              {this.state.product.attributes.map((attr) => (\n                <NoStyleDiv key={attr.id}>\n                  <Attribute>{attr.name}:</Attribute>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      gap: \"10px\",\n                    }}\n                  >\n                    {attr.type === \"swatch\" &&\n                      attr.items.map((itm) => (\n                        <AttributeSwatch\n                          key={itm.id}\n                          style={{\n                            backgroundColor: `${itm.id}`,\n                          }}\n                          onClick={() => this.setAttributes(itm, attr.id)}\n                        />\n                      ))}\n\n                    {attr.type !== \"swatch\" &&\n                      attr.items.map((item) => (\n                        <AttributeButton\n                          key={item.id}\n                          onClick={() => this.setAttributes(item, attr.id)}\n                          style={\n                            this.state.attributes.find(\n                              (x: any) =>\n                                x.attr === attr.id && x.itm.id === item.id\n                            ) && {\n                              backgroundColor: \"black\",\n                              color: \"white\",\n                            }\n                          }\n                        >\n                          {item.value}\n                        </AttributeButton>\n                      ))}\n                  </div>\n                </NoStyleDiv>\n              ))}\n\n              <Attribute>PRICE:</Attribute>\n              {this.state.product.prices.map(\n                (p) =>\n                  p.currency.label === this.props.currency && (\n                    <ProductPrice key={p.currency.symbol}>\n                      {p.currency.symbol}\n                      {p.amount}\n                    </ProductPrice>\n                  )\n              )}\n\n              {this.state.product.inStock === true && (\n                <AddButton\n                  type=\"submit\"\n                  onClick={() => this.addProductToCart(this.state.product)}\n                >\n                  ADD TO CART\n                </AddButton>\n              )}\n              {this.state.product.inStock !== true && (\n                <OutOfStock type=\"button\">OUT OF STOCK</OutOfStock>\n              )}\n              <ProductParse>{parse(cleanHTML)}</ProductParse>\n            </ProductInfo>\n          </>\n        </DetailsContainer>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    currency: state.selection[\"selectedCurrency\"],\n  };\n}\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    addToCart: (product: any) => dispatch(addToCart(product)),\n    getTotals: () => dispatch(getTotals()),\n  };\n}\n\nconst Prop = (props: any) => <ProductDetails {...props} params={useParams()} />;\nexport default connect(mapStateToProps, mapDispatchToProps)(Prop);\n"]},"metadata":{},"sourceType":"module"}