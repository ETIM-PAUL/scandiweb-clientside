{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx\";\nimport React from \"react\";\nimport { gql } from \"@apollo/client\";\nimport { FirstContainer, Heading, CardsContainer, Card, WaterMark } from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { client } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProductsListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      category: this.props.category,\n      num: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.currency);\n  }\n\n  componentDidUpdate(prevState) {\n    let category = this.props.category;\n    let currency = this.props.currency;\n\n    if (prevState.category !== category || prevState.currency !== currency) {\n      var _this$props$currency, _this$props$currency2, _this$props$currency3, _this$props$currency4, _this$props$currency5;\n\n      client.query({\n        query: gql`\n          query category {\n            category(input: { title: \"${category}\" }) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                brand\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n              }\n            }\n          }\n        `\n      }).then(result => this.setState({\n        products: result.data.category.products\n      }));\n\n      if ((_this$props$currency = this.props.currency) !== null && _this$props$currency !== void 0 && _this$props$currency.includes(\"USD\")) {\n        this.setState({\n          num: 0\n        });\n      }\n\n      if ((_this$props$currency2 = this.props.currency) !== null && _this$props$currency2 !== void 0 && _this$props$currency2.includes(\"GBP\")) {\n        this.setState({\n          num: 1\n        });\n      }\n\n      if ((_this$props$currency3 = this.props.currency) !== null && _this$props$currency3 !== void 0 && _this$props$currency3.includes(\"AUD\")) {\n        this.setState({\n          num: 2\n        });\n      }\n\n      if ((_this$props$currency4 = this.props.currency) !== null && _this$props$currency4 !== void 0 && _this$props$currency4.includes(\"JPY\")) {\n        this.setState({\n          num: 3\n        });\n      }\n\n      if ((_this$props$currency5 = this.props.currency) !== null && _this$props$currency5 !== void 0 && _this$props$currency5.includes(\"RUB\")) {\n        this.setState({\n          num: 4\n        });\n      }\n\n      console.log(category);\n    }\n\n    console.log(this.state.num);\n  }\n\n  render() {\n    let numm = this.state.num;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FirstContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardsContainer, {\n          children: this.state.products.length >= 0 && this.state.products.map(x => /*#__PURE__*/_jsxDEV(Card, {\n            children: [x.inStock === false && /*#__PURE__*/_jsxDEV(WaterMark, {\n              children: \"Out of stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: x.gallery[0],\n              height: 250,\n              width: 250,\n              alt: \"pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \" #80808091\",\n                paddingTop: \"15px\"\n              },\n              children: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingTop: \"5px\"\n              },\n              children: [x.prices[numm].currency.symbol, x.prices[numm].amount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, x.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(state) {\n  return {\n    category: state.action[\"selectedCategory\"],\n    currency: state.action[\"selectedCurrency\"]\n  };\n}\n\nexport default connect(mapDispatchToProps, null)(ProductsListing);","map":{"version":3,"sources":["/Users/admin/Documents/product-cart/products-cart/src/components/Products-Listing/index.tsx"],"names":["React","gql","FirstContainer","Heading","CardsContainer","Card","WaterMark","connect","client","ProductsListing","Component","constructor","props","state","products","category","num","componentDidMount","console","log","currency","componentDidUpdate","prevState","query","then","result","setState","data","includes","render","numm","length","map","x","inStock","gallery","color","paddingTop","name","prices","symbol","amount","mapDispatchToProps","action"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport {\n  FirstContainer,\n  Heading,\n  CardsContainer,\n  Card,\n  WaterMark,\n} from \"../../styles/productsListing\";\nimport { connect } from \"react-redux\";\nimport { client } from \"../../App\";\n\nclass ProductsListing extends React.Component<\n  { category: string; currency: string },\n  { products: []; category: string; num: number }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      products: [],\n      category: this.props.category,\n      num: 0,\n    };\n  }\n  componentDidMount() {\n    console.log(this.props.currency);\n  }\n  componentDidUpdate(prevState: any) {\n    let category = this.props.category;\n    let currency = this.props.currency;\n    if (prevState.category !== category || prevState.currency !== currency) {\n      client\n        .query({\n          query: gql`\n          query category {\n            category(input: { title: \"${category}\" }) {\n              name\n              products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                brand\n                attributes {\n                  id\n                  name\n                  type\n                  items {\n                    displayValue\n                    value\n                    id\n                  }\n                }\n                prices {\n                  currency {\n                    label\n                    symbol\n                  }\n                  amount\n                }\n              }\n            }\n          }\n        `,\n        })\n        .then((result) =>\n          this.setState({ products: result.data.category.products })\n        );\n      if (this.props.currency?.includes(\"USD\")) {\n        this.setState({ num: 0 });\n      }\n      if (this.props.currency?.includes(\"GBP\")) {\n        this.setState({ num: 1 });\n      }\n      if (this.props.currency?.includes(\"AUD\")) {\n        this.setState({ num: 2 });\n      }\n      if (this.props.currency?.includes(\"JPY\")) {\n        this.setState({ num: 3 });\n      }\n      if (this.props.currency?.includes(\"RUB\")) {\n        this.setState({ num: 4 });\n      }\n      console.log(category);\n    }\n    console.log(this.state.num);\n  }\n\n  render() {\n    let numm = this.state.num;\n    return (\n      <>\n        <FirstContainer>\n          <Heading>All Categories</Heading>\n          <CardsContainer>\n            {this.state.products.length >= 0 &&\n              this.state.products.map(\n                (x: {\n                  name: string;\n                  prices: any;\n                  gallery: [\"strings\"];\n                  inStock: boolean;\n                }) => (\n                  <Card key={x.name}>\n                    {x.inStock === false && <WaterMark>Out of stock</WaterMark>}\n                    <img\n                      src={x.gallery[0]}\n                      height={250}\n                      width={250}\n                      alt=\"pic\"\n                    />\n\n                    <div style={{ color: \" #80808091\", paddingTop: \"15px\" }}>\n                      {x.name}\n                    </div>\n                    <div style={{ paddingTop: \"5px\" }}>\n                      {x.prices[numm].currency.symbol}\n                      {x.prices[numm].amount}\n                      <br />\n                    </div>\n                  </Card>\n                )\n              )}\n          </CardsContainer>\n        </FirstContainer>\n      </>\n    );\n  }\n}\n\nfunction mapDispatchToProps(state: any) {\n  return {\n    category: state.action[\"selectedCategory\"],\n    currency: state.action[\"selectedCurrency\"],\n  };\n}\n\nexport default connect(mapDispatchToProps, null)(ProductsListing);\n"]},"metadata":{},"sourceType":"module"}